{
  "id": "610a69cff0f4748a2e5fddcc",
  "nodeId": "ari:cloud:trello::board/workspace/60b9ffda1c42218c5ec7c095/610a69cff0f4748a2e5fddcc",
  "name": "Things I Have Learnt",
  "desc": "",
  "descData": null,
  "closed": false,
  "dateClosed": null,
  "idOrganization": "60b9ffda1c42218c5ec7c095",
  "idEnterprise": null,
  "limits": {
    "attachments": {
      "perBoard": {
        "status": "ok",
        "disableAt": 36000,
        "warnAt": 28800
      },
      "perCard": {
        "status": "ok",
        "disableAt": 1000,
        "warnAt": 800
      }
    },
    "boards": {
      "totalMembersPerBoard": {
        "status": "ok",
        "disableAt": 1600,
        "warnAt": 1280
      },
      "totalAccessRequestsPerBoard": {
        "status": "ok",
        "disableAt": 4000,
        "warnAt": 3200
      }
    },
    "cards": {
      "openPerBoard": {
        "status": "ok",
        "disableAt": 5000,
        "warnAt": 4000
      },
      "openPerList": {
        "status": "ok",
        "disableAt": 5000,
        "warnAt": 4000
      },
      "totalPerBoard": {
        "status": "ok",
        "disableAt": 2000000,
        "warnAt": 1600000
      },
      "totalPerList": {
        "status": "ok",
        "disableAt": 1000000,
        "warnAt": 800000
      }
    },
    "checklists": {
      "perBoard": {
        "status": "ok",
        "disableAt": 1800000,
        "warnAt": 1440000
      },
      "perCard": {
        "status": "ok",
        "disableAt": 500,
        "warnAt": 400
      }
    },
    "checkItems": {
      "perChecklist": {
        "status": "ok",
        "disableAt": 200,
        "warnAt": 160
      }
    },
    "customFields": {
      "perBoard": {
        "status": "ok",
        "disableAt": 50,
        "warnAt": 40
      }
    },
    "customFieldOptions": {
      "perField": {
        "status": "ok",
        "disableAt": 50,
        "warnAt": 40
      }
    },
    "labels": {
      "perBoard": {
        "status": "ok",
        "disableAt": 1000,
        "warnAt": 800
      }
    },
    "lists": {
      "openPerBoard": {
        "status": "ok",
        "disableAt": 500,
        "warnAt": 400
      },
      "totalPerBoard": {
        "status": "ok",
        "disableAt": 3000,
        "warnAt": 2400
      }
    },
    "stickers": {
      "perCard": {
        "status": "ok",
        "disableAt": 70,
        "warnAt": 56
      }
    },
    "reactions": {
      "perAction": {
        "status": "ok",
        "disableAt": 900,
        "warnAt": 720
      },
      "uniquePerAction": {
        "status": "ok",
        "disableAt": 17,
        "warnAt": 14
      }
    }
  },
  "pinned": false,
  "starred": false,
  "url": "https://trello.com/b/0DpXwh8h/things-i-have-learnt",
  "prefs": {
    "permissionLevel": "private",
    "hideVotes": false,
    "voting": "disabled",
    "comments": "members",
    "invitations": "members",
    "selfJoin": true,
    "cardCovers": true,
    "cardCounts": false,
    "isTemplate": false,
    "cardAging": "regular",
    "calendarFeedEnabled": false,
    "hiddenPluginBoardButtons": [],
    "switcherViews": [
      {
        "viewType": "Board",
        "enabled": true
      },
      {
        "viewType": "Table",
        "enabled": true
      },
      {
        "viewType": "Calendar",
        "enabled": false
      },
      {
        "viewType": "Dashboard",
        "enabled": false
      },
      {
        "viewType": "Timeline",
        "enabled": false
      },
      {
        "viewType": "Map",
        "enabled": false
      }
    ],
    "background": "610a5d6a7fbd8c7a33b2a6c2",
    "backgroundColor": null,
    "backgroundImage": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/original/e55e2ec94e36e50d00f177d1108e4e08/photo-1627678538778-93afa58dab4b",
    "backgroundTile": false,
    "backgroundBrightness": "light",
    "sharedSourceUrl": "https://images.unsplash.com/photo-1627678538778-93afa58dab4b?ixid=Mnw3MDY2fDB8MXxjb2xsZWN0aW9ufDF8MzE3MDk5fHx8fHwyfHwxNjI4MDY5MjA0&ixlib=rb-1.2.1&w=2560&h=2048&q=90",
    "backgroundImageScaled": [
      {
        "width": 140,
        "height": 96,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/140x96/fadea952f0f92ced2dc8e768aaa7906a/photo-1627678538778-93afa58dab4b.jpg"
      },
      {
        "width": 256,
        "height": 176,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/256x176/fadea952f0f92ced2dc8e768aaa7906a/photo-1627678538778-93afa58dab4b.jpg"
      },
      {
        "width": 480,
        "height": 330,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/480x330/fadea952f0f92ced2dc8e768aaa7906a/photo-1627678538778-93afa58dab4b.jpg"
      },
      {
        "width": 960,
        "height": 660,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/960x660/fadea952f0f92ced2dc8e768aaa7906a/photo-1627678538778-93afa58dab4b.jpg"
      },
      {
        "width": 1024,
        "height": 704,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1024x704/fadea952f0f92ced2dc8e768aaa7906a/photo-1627678538778-93afa58dab4b.jpg"
      },
      {
        "width": 1280,
        "height": 881,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1280x881/fadea952f0f92ced2dc8e768aaa7906a/photo-1627678538778-93afa58dab4b.jpg"
      },
      {
        "width": 1920,
        "height": 1321,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1920x1321/fadea952f0f92ced2dc8e768aaa7906a/photo-1627678538778-93afa58dab4b.jpg"
      },
      {
        "width": 2048,
        "height": 1409,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2048x1409/fadea952f0f92ced2dc8e768aaa7906a/photo-1627678538778-93afa58dab4b.jpg"
      },
      {
        "width": 2326,
        "height": 1600,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2326x1600/fadea952f0f92ced2dc8e768aaa7906a/photo-1627678538778-93afa58dab4b.jpg"
      },
      {
        "width": 2560,
        "height": 1761,
        "url": "https://trello-backgrounds.s3.amazonaws.com/SharedBackground/original/e55e2ec94e36e50d00f177d1108e4e08/photo-1627678538778-93afa58dab4b"
      }
    ],
    "backgroundBottomColor": "#042cfb",
    "backgroundTopColor": "#fafbfb",
    "canBePublic": true,
    "canBeEnterprise": true,
    "canBeOrg": true,
    "canBePrivate": true,
    "canInvite": true
  },
  "shortLink": "0DpXwh8h",
  "subscribed": false,
  "labelNames": {
    "green": "",
    "yellow": "",
    "orange": "",
    "red": "",
    "purple": "",
    "blue": "",
    "sky": "EC2",
    "lime": "",
    "pink": "",
    "black": "",
    "green_dark": "",
    "yellow_dark": "",
    "orange_dark": "",
    "red_dark": "Trused Host error",
    "purple_dark": "",
    "blue_dark": "",
    "sky_dark": "",
    "lime_dark": "",
    "pink_dark": "",
    "black_dark": "",
    "green_light": "",
    "yellow_light": "S3",
    "orange_light": "",
    "red_light": "",
    "purple_light": "",
    "blue_light": "",
    "sky_light": "",
    "lime_light": "",
    "pink_light": "",
    "black_light": ""
  },
  "powerUps": [],
  "dateLastActivity": "2024-03-13T09:26:26.189Z",
  "dateLastView": "2024-10-01T09:31:02.182Z",
  "shortUrl": "https://trello.com/b/0DpXwh8h",
  "idTags": [],
  "datePluginDisable": null,
  "creationMethod": null,
  "ixUpdate": "6844",
  "templateGallery": null,
  "enterpriseOwned": false,
  "idBoardSource": null,
  "premiumFeatures": [
    "additionalBoardBackgrounds",
    "additionalStickers",
    "customBoardBackgrounds",
    "customEmoji",
    "customStickers",
    "plugins"
  ],
  "idMemberCreator": "607d3a850d54e983ddb49f9b",
  "type": null,
  "actions": [
    {
      "id": "65f17142daa169761cdba2c9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")\n\n```\n$ mkdir \u003Cproject-name\u003E\n$ cd \u003Cproject-name\u003E\n$ go mod init \u003Cproject-name\u003E\n$ cobra-cli init --author Courtney Osborn --viper\n$ go run main.go\n```\n\nAdd cmd file\n\n```\n$ cobra-cli add \u003Cfile-name\u003E\n```\n\nOr:\n\n\n```\n~/go/bin/cobra-cli init\n```",
          "id": "646b49cb44dd7a5887ce90f5",
          "name": "Setup Go Project for Terminal Scripts",
          "idShort": 172,
          "shortLink": "kTpO5Zm4"
        },
        "old": {
          "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")\n\n```\n$ mkdir \u003Cproject-name\u003E\n$ cd \u003Cproject-name\u003E\n$ go mod init \u003Cproject-name\u003E\n$ cobra-cli init --author Courtney Osborn --viper\n$ go run main.go\n```\n\nAdd cmd file\n\n```\n$ cobra-cli add \u003Cfile-name\u003E\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2024-03-13T09:26:26.207Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "651455c2d798c20529363ac7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "text": "Makefile:\n\n‌\n\n```\nactivate:\n\tpyenv activate submisson_analysis_env\n\ninstall:\n\tpoetry install\n\nlint:\n\tpoetry run isort .\n\tpoetry run black --preview .\n\tpoetry run flakeheaven lint\n\ndev:\n\tpoetry run uvicorn app:app --host 0.0.0.0 --port 8000 --reload\n\ntest:\n\tpoetry run python -m pytest --import-mode=append -vvs\n```",
        "textData": {
          "emoji": {

          }
        },
        "card": {
          "id": "65142d10578c7ab98a424e63",
          "name": "Python, Poetry, Make, Pytest, Pyenv workflow",
          "idShort": 180,
          "shortLink": "zjq3UMp8"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65142cfbaed2c8824153a2aa",
          "name": "Github"
        }
      },
      "appCreator": null,
      "type": "commentCard",
      "date": "2023-09-27T16:18:10.216Z",
      "limits": {
        "reactions": {
          "perAction": {
            "status": "ok",
            "disableAt": 900,
            "warnAt": 720
          },
          "uniquePerAction": {
            "status": "ok",
            "disableAt": 17,
            "warnAt": 14
          }
        }
      },
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65145573620c9e60d7d8863f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nname: Pull-Request checks\non:\n  pull_request:\n    branches:\n      - main\n\njobs:\n  changes:\n    runs-on: ubuntu-latest\n    outputs:\n      app: ${{ steps.app.outputs.any_changed }}\n    steps:\n    - uses: actions/checkout@v2\n      with:\n        fetch-depth: 0\n    - id: app\n      uses: tj-actions/changed-files@v24\n      with:\n        files: app\n  lint:\n    needs: [changes]\n    name: Lint\n    runs-on: ubuntu-latest\n    if: needs.changes.outputs.app == 'true'\n    steps:\n      - uses: actions/checkout@v2\n      - name: Lint Code Base\n        uses: github/super-linter/slim@v4.9.0\n        env:\n          VALIDATE_ALL_CODEBASE: false\n          FILTER_REGEX_INCLUDE: .*app/.*\n          DEFAULT_BRANCH: main\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          # local pre-commit isort was disagreeing with this workflow's isort. Can dig deeper at a later date, but for now just skip isort checks\n          VALIDATE_PYTHON_ISORT: false\n  tests:\n    needs: [changes]\n    name: Application Tests\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        python-version: [\"3.11.3\"]\n      fail-fast: false\n    if: needs.changes.outputs.app == 'true'\n    steps:\n      - uses: actions/checkout@v2\n\n      - name: Setup python, poetry and make\n        uses: Ki-Insurance/setup-python-build-env@v0\n        with:\n          python-version: ${{ matrix.python-version }}\n          poetry-version: 1.3.2\n      - name: install build tools\n        run: sudo apt-get update && sudo apt-get install -y build-essential\n\n      - name: Install requirements from lock\n        run: |\n          cd app\n          pip install setuptools\n          poetry install\n\n      - name: Test with pytest\n        run: |\n          cd app\n          pip install pytest\n          make test\n\n\n  k8s:\n    needs: [changes]\n    uses: Ki-Insurance/github-workflows/.github/workflows/r-k8s-pr.yaml@v0\n    with:\n      overlays_root: 'infra/k8s/overlays'\n      gh_linter_filter_regex_include: '.*infra/k8s/.*'\n```",
          "id": "65142d10578c7ab98a424e63",
          "name": "Python, Poetry, Make, Pytest, Pyenv workflow",
          "idShort": 180,
          "shortLink": "zjq3UMp8"
        },
        "old": {
          "desc": "```\nname: Pull-Request checks\non:\n  pull_request:\n    branches:\n      - main\njobs:\n  changes:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        python-version: [\"3.11.3\"]\n      fail-fast: false\n    outputs:\n      app: ${{ steps.app.outputs.any_changed }}\n    steps:\n    - uses: actions/checkout@v2\n      with:\n        fetch-depth: 0\n    - id: app\n      uses: tj-actions/changed-files@v24\n      with:\n        files: app\n  lint:\n    needs: [changes]\n    name: Lint\n    runs-on: ubuntu-latest\n    if: needs.changes.outputs.app == 'true'\n    steps:\n      - uses: actions/checkout@v2\n      - name: Lint Code Base\n        uses: github/super-linter/slim@v4.9.0\n        env:\n          VALIDATE_ALL_CODEBASE: false\n          FILTER_REGEX_INCLUDE: .*app/.*\n          DEFAULT_BRANCH: main\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          # local pre-commit isort was disagreeing with this workflow's isort. Can dig deeper at a later date, but for now just skip isort checks\n          VALIDATE_PYTHON_ISORT: false\n  tests:\n    needs: [changes]\n    name: Application Tests\n    runs-on: ubuntu-latest\n    if: needs.changes.outputs.app == 'true'\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup python, poetry and make\n        uses: Ki-Insurance/setup-python-build-env@v0\n        with:\n          python-version: ${{ matrix.python-version }}\n          poetry-version: 1.3.2\n          architecture: \"x64\"\n      - name: install build tools\n        run: sudo apt-get update && sudo apt-get install -y build-essential\n      - name: Install requirements from lock\n        env:\n          POETRY_HTTP_BASIC_GOOGLE_PASSWORD: ${{ steps.auth.outputs.access_token }}\n          POETRY_HTTP_BASIC_GOOGLE_USERNAME: oauth2accesstoken\n        run: |\n          cd app\n          pip install setuptools\n          poetry install\n      - name: Test with pytest\n        run: |\n          cd app\n          pip install pytest\n          make test\n  k8s:\n    needs: [changes]\n    uses: Ki-Insurance/github-workflows/.github/workflows/r-k8s-pr.yaml@v0\n    with:\n      overlays_root: 'infra/k8s/overlays'\n      gh_linter_filter_regex_include: '.*infra/k8s/.*'\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65142cfbaed2c8824153a2aa",
          "name": "Github"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-27T16:16:51.205Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65142d168ad6002515dee3a9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nname: Pull-Request checks\non:\n  pull_request:\n    branches:\n      - main\njobs:\n  changes:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        python-version: [\"3.11.3\"]\n      fail-fast: false\n    outputs:\n      app: ${{ steps.app.outputs.any_changed }}\n    steps:\n    - uses: actions/checkout@v2\n      with:\n        fetch-depth: 0\n    - id: app\n      uses: tj-actions/changed-files@v24\n      with:\n        files: app\n  lint:\n    needs: [changes]\n    name: Lint\n    runs-on: ubuntu-latest\n    if: needs.changes.outputs.app == 'true'\n    steps:\n      - uses: actions/checkout@v2\n      - name: Lint Code Base\n        uses: github/super-linter/slim@v4.9.0\n        env:\n          VALIDATE_ALL_CODEBASE: false\n          FILTER_REGEX_INCLUDE: .*app/.*\n          DEFAULT_BRANCH: main\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          # local pre-commit isort was disagreeing with this workflow's isort. Can dig deeper at a later date, but for now just skip isort checks\n          VALIDATE_PYTHON_ISORT: false\n  tests:\n    needs: [changes]\n    name: Application Tests\n    runs-on: ubuntu-latest\n    if: needs.changes.outputs.app == 'true'\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup python, poetry and make\n        uses: Ki-Insurance/setup-python-build-env@v0\n        with:\n          python-version: ${{ matrix.python-version }}\n          poetry-version: 1.3.2\n          architecture: \"x64\"\n      - name: install build tools\n        run: sudo apt-get update && sudo apt-get install -y build-essential\n      - name: Install requirements from lock\n        env:\n          POETRY_HTTP_BASIC_GOOGLE_PASSWORD: ${{ steps.auth.outputs.access_token }}\n          POETRY_HTTP_BASIC_GOOGLE_USERNAME: oauth2accesstoken\n        run: |\n          cd app\n          pip install setuptools\n          poetry install\n      - name: Test with pytest\n        run: |\n          cd app\n          pip install pytest\n          make test\n  k8s:\n    needs: [changes]\n    uses: Ki-Insurance/github-workflows/.github/workflows/r-k8s-pr.yaml@v0\n    with:\n      overlays_root: 'infra/k8s/overlays'\n      gh_linter_filter_regex_include: '.*infra/k8s/.*'\n```",
          "id": "65142d10578c7ab98a424e63",
          "name": "Python, Poetry, Make, Pytest, Pyenv workflow",
          "idShort": 180,
          "shortLink": "zjq3UMp8"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65142cfbaed2c8824153a2aa",
          "name": "Github"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-27T13:24:38.393Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65142d10578c7ab98a424e6c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "65142d10578c7ab98a424e63",
          "name": "Python, Poetry, Make, Pytest, Pyenv workflow",
          "idShort": 180,
          "shortLink": "zjq3UMp8"
        },
        "list": {
          "id": "65142cfbaed2c8824153a2aa",
          "name": "Github"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-09-27T13:24:32.423Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65142cfbaed2c8824153a2ae",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "65142cfbaed2c8824153a2aa",
          "name": "Github"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2023-09-27T13:24:11.621Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65128fc5bbb17389d2f19d3c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\")\n- [https://python.langchain.com/docs/use_cases/question_answering/](https://python.langchain.com/docs/use_cases/question_answering/ \"smartCard-inline\")",
          "id": "65128ecd9bcb9347c8df86e7",
          "name": "Some useful links",
          "idShort": 179,
          "shortLink": "hD7lcXiB"
        },
        "old": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\")\n- [https://python.langchain.com/docs/use_cases/question_answering/](https://python.langchain.com/docs/use_cases/question_answering/ \"smartCard-inline\")"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65128ec0aae7eb3b6d96ed9e",
          "name": "LangChain"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-26T08:01:09.753Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65128fb71446ccdac657014e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\")\n- [https://python.langchain.com/docs/use_cases/question_answering/](https://python.langchain.com/docs/use_cases/question_answering/ \"smartCard-inline\")",
          "id": "65128ecd9bcb9347c8df86e7",
          "name": "Some useful links",
          "idShort": 179,
          "shortLink": "hD7lcXiB"
        },
        "old": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))\n-  [https://python.langchain.com/docs/use_cases/question_answering/](https://python.langchain.com/docs/use_cases/question_answering/ \"smartCard-inline\")"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65128ec0aae7eb3b6d96ed9e",
          "name": "LangChain"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-26T08:00:55.936Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65128fb21227024fb7160fa9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))\n-  [https://python.langchain.com/docs/use_cases/question_answering/](https://python.langchain.com/docs/use_cases/question_answering/ \"smartCard-inline\")",
          "id": "65128ecd9bcb9347c8df86e7",
          "name": "Some useful links",
          "idShort": 179,
          "shortLink": "hD7lcXiB"
        },
        "old": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))\n- [Langchain walk through] [https://python.langchain.com/docs/use_cases/question_answering/](https://python.langchain.com/docs/use_cases/question_answering/ \"smartCard-inline\")"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65128ec0aae7eb3b6d96ed9e",
          "name": "LangChain"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-26T08:00:50.179Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65128fab821d8792a9b6087a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))\n- [Langchain walk through] [https://python.langchain.com/docs/use_cases/question_answering/](https://python.langchain.com/docs/use_cases/question_answering/ \"smartCard-inline\")",
          "id": "65128ecd9bcb9347c8df86e7",
          "name": "Some useful links",
          "idShort": 179,
          "shortLink": "hD7lcXiB"
        },
        "old": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65128ec0aae7eb3b6d96ed9e",
          "name": "LangChain"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-26T08:00:43.790Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65128f6811e229ff3025fecc",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))",
          "id": "65128ecd9bcb9347c8df86e7",
          "name": "Some useful links",
          "idShort": 179,
          "shortLink": "hD7lcXiB"
        },
        "old": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog] ([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65128ec0aae7eb3b6d96ed9e",
          "name": "LangChain"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-26T07:59:36.931Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65128f64a9318dd151a2c2e6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog] ([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))",
          "id": "65128ecd9bcb9347c8df86e7",
          "name": "Some useful links",
          "idShort": 179,
          "shortLink": "hD7lcXiB"
        },
        "old": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65128ec0aae7eb3b6d96ed9e",
          "name": "LangChain"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-26T07:59:32.989Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65128f5dcc0a0743db054780",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog]([https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\"))",
          "id": "65128ecd9bcb9347c8df86e7",
          "name": "Some useful links",
          "idShort": 179,
          "shortLink": "hD7lcXiB"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "65128ec0aae7eb3b6d96ed9e",
          "name": "LangChain"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-26T07:59:25.096Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65128ecd9bcb9347c8df86f0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "65128ecd9bcb9347c8df86e7",
          "name": "Some useful links",
          "idShort": 179,
          "shortLink": "hD7lcXiB"
        },
        "list": {
          "id": "65128ec0aae7eb3b6d96ed9e",
          "name": "LangChain"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-09-26T07:57:01.673Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "65128ec0aae7eb3b6d96eda2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "65128ec0aae7eb3b6d96ed9e",
          "name": "LangChain"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2023-09-26T07:56:48.899Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "650ae672f19f20e1cb506e4f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- $ brew install poetry\n\nInstall dependancies\n\nAdd depenancy to pyproject.toml\n\n$ poetry lock\n\n$ poetry install",
          "id": "650ad2836236d8c1462521bf",
          "name": "POETRY",
          "idShort": 178,
          "shortLink": "6NbSne0K"
        },
        "old": {
          "desc": "- $ brew install poetry"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-20T12:32:50.839Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "650ad28e6585d8326be4b3cb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- $ brew install poetry",
          "id": "650ad2836236d8c1462521bf",
          "name": "POETRY",
          "idShort": 178,
          "shortLink": "6NbSne0K"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-20T11:07:58.300Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "650ad2836236d8c1462521c8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "650ad2836236d8c1462521bf",
          "name": "POETRY",
          "idShort": 178,
          "shortLink": "6NbSne0K"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-09-20T11:07:47.138Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "650ad014e0a383effa245901",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "$ brew install python3\n\n- This will also install pip3\n- $ which pip3 python3\n  /usr/bin/pip3\n  /usr/bin/python3\n- Use pip3 to install packages",
          "id": "6423e4b7c5ecd2fa31c80f7e",
          "name": "Setup Python",
          "idShort": 148,
          "shortLink": "zUXNrrqG"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-20T10:57:24.905Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "650423f7794c94f7ab06e99b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "65042388867dda5da27c5e36",
          "idShort": 177,
          "shortLink": "6uJaHiQj"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "deleteCard",
      "date": "2023-09-15T09:29:27.545Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "650423efa2a2c347a88a2c0a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "EC2 SSH Market Place AMI Bitnami",
          "id": "6424471cdfcae70851212213",
          "idShort": 155,
          "shortLink": "q9Pm5MLu"
        },
        "old": {
          "name": "EC2 SSH Market Place AMI"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-15T09:29:19.104Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6501cc64c67b7b9ef4255194",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Make Sure your role has a Sid value even if it is an empty string",
          "id": "6501cc5089cd307e7c13d8ee",
          "name": "Inline Policy not showing in roie",
          "idShort": 176,
          "shortLink": "2Ynx8SMQ"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-13T14:51:16.100Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6501cc5089cd307e7c13d8f7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6501cc5089cd307e7c13d8ee",
          "name": "Inline Policy not showing in roie",
          "idShort": 176,
          "shortLink": "2Ynx8SMQ"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-09-13T14:50:56.210Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6501cc3fb398fcb820384304",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nresource \"aws_iam_role\" \"vpc-flow-logs\" {\nname = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs-role\"\n\nassume_role_policy = jsonencode({\nVersion = \"2012-10-17\"\nStatement = [\n{\nAction = \"sts:AssumeRole\"\nEffect = \"Allow\"\nSid    = \"\" // NOTE: Role policies do not show if Sid is not here\nPrincipal = {\n    Service = \"vpc-flow-logs.amazonaws.com\"\n  }\n},\n]\n})\n\ntags = {\nName = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs\"\n}\n}\n\nresource \"aws_iam_role_policy\" \"vpc-flow-logs\" {\nname = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs-role-policy\"\nrole = aws_iam_role.vpc-flow-logs.id\n\npolicy = jsonencode({\nVersion = \"2012-10-17\"\nStatement = [\n{\nAction = [\n\"logs:CreateLogGroup\",\n\"logs:CreateLogStream\",\n\"logs:PutLogEvents\",\n\"logs:DescribeLogGroups\",\n\"logs:DescribeLogStream\"\n]\nEffect   = \"Allow\"\nResource = \"*\"\n},\n]\n})\n}\n```",
          "id": "6501cc018361bca028384919",
          "name": "Inline Policy not showing in roie",
          "idShort": 175,
          "shortLink": "Je9zCCne"
        },
        "old": {
          "desc": "resource \"aws\\_iam\\_role\" \"vpc-flow-logs\" {\n  name = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs-role\"\n\n  assume\\_role\\_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\" **// NOTE: Role policies do not show if Sid is not here**\n        Principal = {\n          Service = \"[vpc-flow-logs.amazonaws.com](http://vpc-flow-logs.amazonaws.com \"‌\")\"\n        }\n      },\n    ]\n  })\n\n  tags = {\n    Name = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs\"\n  }\n}\n\nresource \"aws\\_iam\\_role_policy\" \"vpc-flow-logs\" {\n  name = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs-role-policy\"\n  role = aws\\_iam\\_role.vpc-flow-logs.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"logs:DescribeLogGroups\",\n          \"logs:DescribeLogStream\"\n        ]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })\n}"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-13T14:50:39.112Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6501cc0fcc29318c6bafa254",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "resource \"aws\\_iam\\_role\" \"vpc-flow-logs\" {\n  name = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs-role\"\n\n  assume\\_role\\_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\" **// NOTE: Role policies do not show if Sid is not here**\n        Principal = {\n          Service = \"[vpc-flow-logs.amazonaws.com](http://vpc-flow-logs.amazonaws.com \"‌\")\"\n        }\n      },\n    ]\n  })\n\n  tags = {\n    Name = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs\"\n  }\n}\n\nresource \"aws\\_iam\\_role_policy\" \"vpc-flow-logs\" {\n  name = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs-role-policy\"\n  role = aws\\_iam\\_role.vpc-flow-logs.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"logs:DescribeLogGroups\",\n          \"logs:DescribeLogStream\"\n        ]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })\n}",
          "id": "6501cc018361bca028384919",
          "name": "Inline Policy not showing in roie",
          "idShort": 175,
          "shortLink": "Je9zCCne"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-13T14:49:51.372Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6501cc018361bca028384922",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6501cc018361bca028384919",
          "name": "Inline Policy not showing in roie",
          "idShort": 175,
          "shortLink": "Je9zCCne"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-09-13T14:49:37.878Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64f88918927f563447135432",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 24575.875,
          "id": "64f74639d7b703d10d9b5e8b",
          "name": "AWS S3",
          "idShort": 174,
          "shortLink": "snaMzuPA"
        },
        "old": {
          "pos": 393215
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-06T14:13:44.533Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64f88918927f56344713541c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idList": "61f3adec575c9c33c9c86e73",
          "id": "64f74639d7b703d10d9b5e8b",
          "name": "AWS S3",
          "idShort": 174,
          "shortLink": "snaMzuPA"
        },
        "old": {
          "idList": "61f00805bc5d66175df5ae79"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "listBefore": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "listAfter": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-06T14:13:44.494Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64f746ae131638564bc1d061",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "AWS\\_ACCESS\\_KEY\\_ID = os.getenv('AWS\\_ACCESS\\_KEY\\_ID')\nAWS\\_SECRET\\_ACCESS\\_KEY = os.getenv('AWS\\_SECRET\\_ACCESS\\_KEY')\nAWS\\_STORAGE\\_BUCKET\\_NAME = os.getenv('AWS\\_STORAGE\\_BUCKET\\_NAME')\nAWS\\_QUERYSTRING\\_AUTH = True → this will give you a pre-signed URL\nAWS\\_S3\\_REGION_NAME = \"eu-west-2\" → this makes sure the pre-signed URL works\n\nDEFAULT\\_FILE\\_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n\n‌\n\nUpload Images\n\n‌\n\n```python\n@method_decorator(csrf_exempt, name='dispatch')\nClass ....\n    @csrf_exempt\n\tdef post(self, *args, **kwargs):\n\t\tids = self.request.POST.getlist('id')\n\t\timage = self.request.FILES.getlist('image')\n\n\t\tfor index, id in enumerate(ids):\n\t\t\tplayer_model = PlayerModel.objects.get(pk=id)\n\t\t\tplayer_model.image = image[index]\n\t\t\tplayer_model.save()\n\n\t\tall_players = PlayerModel.objects.all()\n\n\t\tplayers = PlayerSerializer(all_players, many=True)\n\t\treturn JsonResponse(players.data, safe=False)\n```",
          "id": "64f74639d7b703d10d9b5e8b",
          "name": "AWS S3",
          "idShort": 174,
          "shortLink": "snaMzuPA"
        },
        "old": {
          "desc": "AWS\\_ACCESS\\_KEY\\_ID = os.getenv('AWS\\_ACCESS\\_KEY\\_ID')\nAWS\\_SECRET\\_ACCESS\\_KEY = os.getenv('AWS\\_SECRET\\_ACCESS\\_KEY')\nAWS\\_STORAGE\\_BUCKET\\_NAME = os.getenv('AWS\\_STORAGE\\_BUCKET\\_NAME')\nAWS\\_QUERYSTRING\\_AUTH = True → this will give you a pre-signed URL\nAWS\\_S3\\_REGION_NAME = \"eu-west-2\" → this makes sure the pre-signed URL works\n\nDEFAULT\\_FILE\\_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-05T15:18:06.090Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64f7466d3ca0072ac3668a71",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "AWS\\_ACCESS\\_KEY\\_ID = os.getenv('AWS\\_ACCESS\\_KEY\\_ID')\nAWS\\_SECRET\\_ACCESS\\_KEY = os.getenv('AWS\\_SECRET\\_ACCESS\\_KEY')\nAWS\\_STORAGE\\_BUCKET\\_NAME = os.getenv('AWS\\_STORAGE\\_BUCKET\\_NAME')\nAWS\\_QUERYSTRING\\_AUTH = True → this will give you a pre-signed URL\nAWS\\_S3\\_REGION_NAME = \"eu-west-2\" → this makes sure the pre-signed URL works\n\nDEFAULT\\_FILE\\_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'",
          "id": "64f74639d7b703d10d9b5e8b",
          "name": "AWS S3",
          "idShort": 174,
          "shortLink": "snaMzuPA"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-09-05T15:17:01.092Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64f74639d7b703d10d9b5e94",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "64f74639d7b703d10d9b5e8b",
          "name": "AWS S3",
          "idShort": 174,
          "shortLink": "snaMzuPA"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-09-05T15:16:09.921Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64abb8d121802369d7b2da21",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nconst mockDate = new Date('2020-01-01T00:00:00.000Z')\nconst spy = jest\n  .spyOn(global, 'Date')\n  .mockImplementation(() =\u003E mockDate)\n```\n\nRestore Date:\n\n```\nafterEach(() =\u003E {\n  spy.mockRestore();\n});\n```",
          "id": "61dd5fdb8d69704f25ff20ed",
          "name": "Mock date",
          "idShort": 72,
          "shortLink": "8jfENmAv"
        },
        "old": {
          "desc": "```\nconst mockDate = new Date(1466424490000)\nconst spy = jest\n  .spyOn(global, 'Date')\n  .mockImplementation(() =\u003E mockDate)\n```\n\nRestore Date:\n\n```\nafterEach(() =\u003E {\n  spy.mockRestore();\n});\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61dd5fd7bacfba716d84e024",
          "name": "Jest"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-07-10T07:52:49.199Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64a51f21ccbf12c8606c1097",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nconst mockDate = new Date(1466424490000)\nconst spy = jest\n  .spyOn(global, 'Date')\n  .mockImplementation(() =\u003E mockDate)\n```\n\nRestore Date:\n\n```\nafterEach(() =\u003E {\n  spy.mockRestore();\n});\n```",
          "id": "61dd5fdb8d69704f25ff20ed",
          "name": "Mock date",
          "idShort": 72,
          "shortLink": "8jfENmAv"
        },
        "old": {
          "desc": "```\nconst mockDate = new Date(1466424490000)\nconst spy = jest\n  .spyOn(global, 'Date')\n  .mockImplementation(() =\u003E mockDate)\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61dd5fd7bacfba716d84e024",
          "name": "Jest"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-07-05T07:43:29.899Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646f741e2de8641673b5ca59",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "In Tests add the following\n\n```\nvar jsonData = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"token\", jsonData.accessToken);\npostman.setEnvironmentVariable(\"refreshToken\", jsonData.refreshToken);\n```",
          "id": "646f7403e5ee14438b40df2f",
          "name": "Set response values to variables",
          "idShort": 173,
          "shortLink": "FCWYiD6l"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "646f73f9459c575bb133fc61",
          "name": "Postman"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-25T14:43:42.372Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646f740debe836cb1b0cbf06",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Set response values to variables",
          "id": "646f7403e5ee14438b40df2f",
          "idShort": 173,
          "shortLink": "FCWYiD6l"
        },
        "old": {
          "name": "Add response values to"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "646f73f9459c575bb133fc61",
          "name": "Postman"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-25T14:43:25.784Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646f7403e5ee14438b40df39",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "646f7403e5ee14438b40df2f",
          "name": "Add response values to",
          "idShort": 173,
          "shortLink": "FCWYiD6l"
        },
        "list": {
          "id": "646f73f9459c575bb133fc61",
          "name": "Postman"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-05-25T14:43:15.938Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646f73f9459c575bb133fc65",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "646f73f9459c575bb133fc61",
          "name": "Postman"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2023-05-25T14:43:05.139Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646b4c53abdaadccb502c0e1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")\n\n```\n$ mkdir \u003Cproject-name\u003E\n$ cd \u003Cproject-name\u003E\n$ go mod init \u003Cproject-name\u003E\n$ cobra-cli init --author Courtney Osborn --viper\n$ go run main.go\n```\n\nAdd cmd file\n\n```\n$ cobra-cli add \u003Cfile-name\u003E\n```",
          "id": "646b49cb44dd7a5887ce90f5",
          "name": "Setup Go Project for Terminal Scripts",
          "idShort": 172,
          "shortLink": "kTpO5Zm4"
        },
        "old": {
          "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")\n\n```\n$ mkdir \u003Cproject-name\u003E\n$ cd \u003Cproject-name\u003E\n$ go mod init \u003Cproject-name\u003E\n$ cobra-cli init --author Courtney Osborn --viper\n$ go run main.go\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-22T11:04:51.614Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646b4b912ae97cc0e80ab577",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")\n\n```\n$ mkdir \u003Cproject-name\u003E\n$ cd \u003Cproject-name\u003E\n$ go mod init \u003Cproject-name\u003E\n$ cobra-cli init --author Courtney Osborn --viper\n$ go run main.go\n```",
          "id": "646b49cb44dd7a5887ce90f5",
          "name": "Setup Go Project for Terminal Scripts",
          "idShort": 172,
          "shortLink": "kTpO5Zm4"
        },
        "old": {
          "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")\n\n\n```\n$ mkdir \u003Cproject-name\u003E\n$ cd \u003Cproject-name\u003E\n$ go mod init \u003Cproject-name\u003E\n$ cobra-cli init\n$ go run main.go\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-22T11:01:37.673Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646b4ad3a1b429bb658cfa0c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")\n\n\n```\n$ mkdir \u003Cproject-name\u003E\n$ cd \u003Cproject-name\u003E\n$ go mod init \u003Cproject-name\u003E\n$ cobra-cli init\n$ go run main.go\n```",
          "id": "646b49cb44dd7a5887ce90f5",
          "name": "Setup Go Project for Terminal Scripts",
          "idShort": 172,
          "shortLink": "kTpO5Zm4"
        },
        "old": {
          "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-22T10:58:27.689Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646b49d094119bb61ffeccc0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")",
          "id": "646b49cb44dd7a5887ce90f5",
          "name": "Setup Go Project for Terminal Scripts",
          "idShort": 172,
          "shortLink": "kTpO5Zm4"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-22T10:54:08.855Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646b49cb44dd7a5887ce90ff",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "646b49cb44dd7a5887ce90f5",
          "name": "Setup Go Project for Terminal Scripts",
          "idShort": 172,
          "shortLink": "kTpO5Zm4"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-05-22T10:54:03.626Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646775d86067f5af7694d3af",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "646775c6dfcefdbea2179548"
          ],
          "id": "642d0b787e8ccc12ced55329",
          "name": "Error with Installation",
          "idShort": 165,
          "shortLink": "3au5Bx0O"
        },
        "old": {
          "idLabels": [
            "610a69cfc8246138301fa820",
            "646775c6dfcefdbea2179548"
          ]
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-19T13:12:56.139Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646775d47de590625f58bc26",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "610a69cfc8246138301fa820",
            "646775c6dfcefdbea2179548"
          ],
          "id": "642d0b787e8ccc12ced55329",
          "name": "Error with Installation",
          "idShort": 165,
          "shortLink": "3au5Bx0O"
        },
        "old": {
          "idLabels": [
            "610a69cfc8246138301fa820"
          ]
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-19T13:12:52.976Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646775ca194bdaf96e8a995d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "610a69cfc8246138301fa820"
          ],
          "id": "642d0b787e8ccc12ced55329",
          "name": "Error with Installation",
          "idShort": 165,
          "shortLink": "3au5Bx0O"
        },
        "old": {
          "idLabels": [
            "610a69cfc8246138301fa820",
            "646775c6dfcefdbea2179548"
          ]
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-19T13:12:42.088Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646775bb9773f4e8ef7c1c9a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "610a69cfc8246138301fa820"
          ],
          "id": "642d0b787e8ccc12ced55329",
          "name": "Error with Installation",
          "idShort": 165,
          "shortLink": "3au5Bx0O"
        },
        "old": {
          "idLabels": []
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-19T13:12:27.184Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646381fe8b6cae175c27fb2b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Docker stats\n\n```\n‌docker stats\n```\n\nAdvance information about a container running in JSON format:\n\n```\n$ docker inspect \u003Cname/id of container\u003E\n```\n\nWith less:\n\n```\n$ docker inspect \u003Cname/id of container\u003E | less\n```",
          "id": "64638151ddefef56f98c1b6a",
          "name": "Docker Debugging",
          "idShort": 171,
          "shortLink": "3R7dPfFk"
        },
        "old": {
          "desc": "Docker status\n\n```\n‌\n```\n\n$ docker stat\n\nAdvance information about a container running in JSON format:\n\n```\n$ docker inspect \u003Cname/id of container\u003E\n```\n\nWith less:\n\n```\n$ docker inspect \u003Cname/id of container\u003E | less\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T13:15:42.360Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646381d96d43bdb7587827e5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Docker status\n\n```\n‌\n```\n\n$ docker stat\n\nAdvance information about a container running in JSON format:\n\n```\n$ docker inspect \u003Cname/id of container\u003E\n```\n\nWith less:\n\n```\n$ docker inspect \u003Cname/id of container\u003E | less\n```",
          "id": "64638151ddefef56f98c1b6a",
          "name": "Docker Debugging",
          "idShort": 171,
          "shortLink": "3R7dPfFk"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T13:15:05.036Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64638151ddefef56f98c1b96",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "64638151ddefef56f98c1b6a",
          "name": "Docker Debugging",
          "idShort": 171,
          "shortLink": "3R7dPfFk"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-05-16T13:12:49.636Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64638122464097745023bac4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id or name/tag\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```\n\nForcefully Delete Images\n\n```\n$ docker rmi -f\n```",
          "id": "646375178688b84387b39d9c",
          "name": "Images",
          "idShort": 167,
          "shortLink": "TEVNKgJ2"
        },
        "old": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id or name/tag\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T13:12:02.149Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646380d6bad872574b2c4b1c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ df -h\n```",
          "id": "646380c6af8b801881b3c062",
          "name": "Checking disk space",
          "idShort": 170,
          "shortLink": "s1NHP9Bk"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T13:10:46.418Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646380c6af8b801881b3c06c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "646380c6af8b801881b3c062",
          "name": "Checking disk space",
          "idShort": 170,
          "shortLink": "s1NHP9Bk"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-05-16T13:10:30.580Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6463807816a2104d247af393",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Login to Docker Hub\n\n```\n$ docker login\n```\n\nTagging Image\n\n```\ndocker tag \u003Cimage name\u003E \u003Cusername/image:tag\u003E\n```\n\n- Note if you do not add a tag at the end it will save as latest which can be confusing - always put a tag\n\nPublish in Docker Hub:\n\n```\n$ docker push \u003Cimage name\u003E \u003Cusername/image:tag\u003E\n```\n\n- Note: makes sure to push the correct tag",
          "id": "64637f8dfdc9aba7edf28ea2",
          "name": "Docker Hub",
          "idShort": 169,
          "shortLink": "vTzunEy7"
        },
        "old": {
          "desc": "Login to Docker Hub\n\n```\n$ docker login\n```\n\nTagging Image\n\n```\ndocker tag \u003Cimage name\u003E \u003Cusername/image:tag\u003E\n```\n\n- Note if you do not add a tag at the end it will save as latest which can be confusing - always put a tag"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T13:09:12.618Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6463801dc89a3430082adc85",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Login to Docker Hub\n\n```\n$ docker login\n```\n\nTagging Image\n\n```\ndocker tag \u003Cimage name\u003E \u003Cusername/image:tag\u003E\n```\n\n- Note if you do not add a tag at the end it will save as latest which can be confusing - always put a tag",
          "id": "64637f8dfdc9aba7edf28ea2",
          "name": "Docker Hub",
          "idShort": 169,
          "shortLink": "vTzunEy7"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T13:07:41.182Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637f91e0f617272642e117",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Docker Hub",
          "id": "64637f8dfdc9aba7edf28ea2",
          "idShort": 169,
          "shortLink": "vTzunEy7"
        },
        "old": {
          "name": "Docker hub"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T13:05:21.599Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637f8dfdc9aba7edf28eac",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "64637f8dfdc9aba7edf28ea2",
          "name": "Docker hub",
          "idShort": 169,
          "shortLink": "vTzunEy7"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-05-16T13:05:17.511Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637f871d0b4bcaf838f543",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E / \u003Cname set by --name\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d --name \u003Cwhat we want to call the image\u003E \u003Cname of image\u003E\n```\n\n- Note `-d` means run in the background\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Immediately\n\n```\n$ docker stop -t 0 \u003Cid of container - use docker ps --all\u003E\n```\n\n- Note: be careful as this could lead to data lose\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)\n\nRemove containers:\n\n```\n$ docker rm \u003Cid\u003E\n```\n\n- Note: does not stop containers that are still running - add `-f`\n\nRemove multiple containers:\n\n```\n$ docker ps -aq | xargs docker rm\n```\n\nAdd PORT:\n\n```\n$ docker run -d --name name-for-container -p 5001:5000 container\n```\n\n- Note: 5001 (used on browser) 5000 (used in docker)\n\n\nStoring Data that is on a docker to computer:\n\n```\n$ docker run --rm --entrypoint sh -v /tmp/container:/tmp ubuntu -c \"echo 'Hello There!' \u003E /tmp/file && cat tmp/file\"\n```",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E / \u003Cname set by --name\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d --name \u003Cwhat we want to call the image\u003E \u003Cname of image\u003E\n```\n\n- Note `-d` means run in the background\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Immediately\n\n```\n$ docker stop -t 0 \u003Cid of container - use docker ps --all\u003E\n```\n\n- Note: be careful as this could lead to data lose\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)\n\nRemove containers:\n\n```\n$ docker rm \u003Cid\u003E\n```\n\n- Note: does not stop containers that are still running - add `-f`\n\nRemove multiple containers:\n\n```\n$ docker ps -aq | xargs docker rm\n```\n\n\nAdd PORT:\n\n```\n$ docker run -d --name name-for-container -p 5001:5000 container\n```\n\n- Note: 5001 (used on browser) 5000 (used in docker)"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T13:05:11.640Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637ebaf352e90e584c6feb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E / \u003Cname set by --name\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d --name \u003Cwhat we want to call the image\u003E \u003Cname of image\u003E\n```\n\n- Note `-d` means run in the background\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Immediately\n\n```\n$ docker stop -t 0 \u003Cid of container - use docker ps --all\u003E\n```\n\n- Note: be careful as this could lead to data lose\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)\n\nRemove containers:\n\n```\n$ docker rm \u003Cid\u003E\n```\n\n- Note: does not stop containers that are still running - add `-f`\n\nRemove multiple containers:\n\n```\n$ docker ps -aq | xargs docker rm\n```\n\n\nAdd PORT:\n\n```\n$ docker run -d --name name-for-container -p 5001:5000 container\n```\n\n- Note: 5001 (used on browser) 5000 (used in docker)",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d --name \u003Cwhat we want to call the image\u003E \u003Cname of image\u003E\n```\n\n- Note `-d` means run in the background\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Immediately\n\n```\n$ docker stop -t 0 \u003Cid of container - use docker ps --all\u003E\n```\n\n- Note: be careful as this could lead to data lose\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)\n\nRemove containers:\n\n```\n$ docker rm \u003Cid\u003E\n```\n\n- Note: does not stop containers that are still running - add `-f`\n\nRemove multiple containers:\n\n```\n$ docker ps -aq | xargs docker rm\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T13:01:46.762Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637dff2ce368d14dd3d422",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d --name \u003Cwhat we want to call the image\u003E \u003Cname of image\u003E\n```\n\n- Note `-d` means run in the background\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Immediately\n\n```\n$ docker stop -t 0 \u003Cid of container - use docker ps --all\u003E\n```\n\n- Note: be careful as this could lead to data lose\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)\n\nRemove containers:\n\n```\n$ docker rm \u003Cid\u003E\n```\n\n- Note: does not stop containers that are still running - add `-f`\n\nRemove multiple containers:\n\n```\n$ docker ps -aq | xargs docker rm\n```",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d \u003Cname of image\u003E\n```\n\n‌\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Immediately\n\n```\n$ docker stop -t 0 \u003Cid of container - use docker ps --all\u003E\n```\n\n- Note: be careful as this could lead to data lose\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)\n\nRemove containers:\n\n```\n$ docker rm \u003Cid\u003E\n```\n\n- Note: does not stop containers that are still running - add `-f`\n\nRemove multiple containers:\n\n```\n$ docker ps -aq | xargs docker rm\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:58:39.815Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637d5dde831f4b4f7077f0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id or name/tag\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```",
          "id": "646375178688b84387b39d9c",
          "name": "Images",
          "idShort": 167,
          "shortLink": "TEVNKgJ2"
        },
        "old": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id or name\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:55:57.972Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637d56e6c83f7dcfa66632",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id or name\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```",
          "id": "646375178688b84387b39d9c",
          "name": "Images",
          "idShort": 167,
          "shortLink": "TEVNKgJ2"
        },
        "old": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:55:50.075Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637d454a2db327d39c8d28",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```",
          "id": "646375178688b84387b39d9c",
          "name": "Images",
          "idShort": 167,
          "shortLink": "TEVNKgJ2"
        },
        "old": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images ls\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:55:33.912Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637d1c3912b531fe857171",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d \u003Cname of image\u003E\n```\n\n‌\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Immediately\n\n```\n$ docker stop -t 0 \u003Cid of container - use docker ps --all\u003E\n```\n\n- Note: be careful as this could lead to data lose\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)\n\nRemove containers:\n\n```\n$ docker rm \u003Cid\u003E\n```\n\n- Note: does not stop containers that are still running - add `-f`\n\nRemove multiple containers:\n\n```\n$ docker ps -aq | xargs docker rm\n```",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d \u003Cname of image\u003E\n```\n\n‌\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Forcefully ???\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E -f\n```\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:54:52.643Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637c0be5ad3cf1282767f4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d \u003Cname of image\u003E\n```\n\n‌\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Forcefully ???\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E -f\n```\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d \u003Cname of image\u003E\n```\n\n‌\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Forcefully ???\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E -f\n```\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:50:19.465Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637bdf9c417c4218c3b115",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d \u003Cname of image\u003E\n```\n\n‌\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Forcefully ???\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E -f\n```\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d \u003Cname of image\u003E\n```\n\n‌\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Forcefully ???\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E -f\n```\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:49:35.062Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637b6411e517455620d7af",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d \u003Cname of image\u003E\n```\n\n‌\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Forcefully ???\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E -f\n```\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\n- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Forcefully ???\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E -f\n```\n\n\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:47:32.347Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637b0c03f88729b9292993",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\n- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Forcefully ???\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E -f\n```\n\n\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\n- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:46:04.675Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637a68713c665f83ad3fa7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images ls\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```",
          "id": "646375178688b84387b39d9c",
          "name": "Images",
          "idShort": 167,
          "shortLink": "TEVNKgJ2"
        },
        "old": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note: if you want to name a specific file use --file or -f and then file path\n\nView images\n\n```\n$ docker images ls\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:43:20.781Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637a4a998092c3deeaa818",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note: if you want to name a specific file use --file or -f and then file path\n\nView images\n\n```\n$ docker images ls\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```",
          "id": "646375178688b84387b39d9c",
          "name": "Images",
          "idShort": 167,
          "shortLink": "TEVNKgJ2"
        },
        "old": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\nView images\n\n```\n$ docker images ls\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:42:50.314Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637a25b12a81f2883bdeda",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\nView images\n\n```\n$ docker images ls\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```",
          "id": "646375178688b84387b39d9c",
          "name": "Images",
          "idShort": 167,
          "shortLink": "TEVNKgJ2"
        },
        "old": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:42:13.281Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646379aaed3177b8e1993e01",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```",
          "id": "646375178688b84387b39d9c",
          "name": "Images",
          "idShort": 167,
          "shortLink": "TEVNKgJ2"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:40:10.726Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637975d9cf3bc6c99fdd02",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\n- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\n- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\n\nBuild Docker Image\n\n‌\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:39:17.086Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64637969928af363819d5052",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\n- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\n\nBuild Docker Image\n\n‌\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E\n```",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\n- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:39:05.318Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646378f57eeec2c41753c3b8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\n- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n\\- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n  - See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:37:09.283Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646378b192656a9f5b50ce65",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n\\- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n  - See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n\n\\- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n\n  \\- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:36:01.198Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646378a135b0f725dfd025cc",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n\n\\- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n\n  \\- See docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`",
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-05-16T12:35:45.240Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6463751e7618896cd4fe31ae",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6463751e7618896cd4fe31a4",
          "name": "Containers",
          "idShort": 168,
          "shortLink": "kdeKdFIV"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-05-16T12:20:46.114Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "646375178688b84387b39da6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "646375178688b84387b39d9c",
          "name": "Images",
          "idShort": 167,
          "shortLink": "TEVNKgJ2"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-05-16T12:20:39.257Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d2cbf1154a6ac7aab4826",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://devopscube.com/install-configure-postgresql-amazon-linux/\n\n",
          "id": "642d292267ad071d3527532a",
          "name": "Install and Run PostgreSQL",
          "idShort": 166,
          "shortLink": "7gCHgTXa"
        },
        "old": {
          "desc": "Install PostgreSQL\n\n```\n$ sudo yum install postgresql\n```\n\nhttps://www.postgresguide.com/setup/install/\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "642d290e6ec6d0a80a6b0260",
          "name": "Linux"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-05T08:09:35.536Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d29f02cdb21ad02133eae",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install PostgreSQL\n\n```\n$ sudo yum install postgresql\n```\n\nhttps://www.postgresguide.com/setup/install/\n\n",
          "id": "642d292267ad071d3527532a",
          "name": "Install and Run PostgreSQL",
          "idShort": 166,
          "shortLink": "7gCHgTXa"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "642d290e6ec6d0a80a6b0260",
          "name": "Linux"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-05T07:57:36.417Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d292267ad071d35275334",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "642d292267ad071d3527532a",
          "name": "Install and Run PostgreSQL",
          "idShort": 166,
          "shortLink": "7gCHgTXa"
        },
        "list": {
          "id": "642d290e6ec6d0a80a6b0260",
          "name": "Linux"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-04-05T07:54:10.747Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d290e6ec6d0a80a6b0264",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "642d290e6ec6d0a80a6b0260",
          "name": "Linux"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2023-04-05T07:53:50.747Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d1fcfcf245e2872b8fac9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql@12\n```\n\nStop db:\n\n```\n$ brew services stop postgresql@12\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\n\nCreate user\n\n```\n$ createuser -Ps \u003Cuser name\u003E\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew",
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Makefile: Access and Setup Postgres Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql@12\n```\n\nStop db:\n\n```\n$ brew services stop postgresql@12\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\n\nCreate user\n\n```\n$ createuser -Ps \u003Cuser name\u003E\n````\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-05T07:14:23.081Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d1fbddafca537c6e60808",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql@12\n```\n\nStop db:\n\n```\n$ brew services stop postgresql@12\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\n\nCreate user\n\n```\n$ createuser -Ps \u003Cuser name\u003E\n````\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew",
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Makefile: Access and Setup Postgres Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql@12\n```\n\nStop db:\n\n```\n$ brew services stop postgresql@12\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\n\nCreate user\n\n```\n$ createuser -Ps \u003Cuser name\u003E\n````\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\n\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-05T07:14:05.481Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d1f96d0c7102ae9fc32ab",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql@12\n```\n\nStop db:\n\n```\n$ brew services stop postgresql@12\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\n\nCreate user\n\n```\n$ createuser -Ps \u003Cuser name\u003E\n````\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\n\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew",
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Makefile: Access and Setup Postgres Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql@12\n```\n\nStop db:\n\n```\n$ brew services stop postgresql@12\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-05T07:13:26.706Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d1ed997db5727ec699404",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "text": "If you get an error that says:\n\n```\nzsh: command not found: psql\n```\n\nRun:\n\n```\n$ export PATH=\"/opt/homebrew/opt/postgresql@13/bin:$PATH\"\n```",
        "textData": {
          "emoji": {

          }
        },
        "card": {
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Makefile: Access and Setup Postgres Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "commentCard",
      "date": "2023-04-05T07:10:17.018Z",
      "limits": {
        "reactions": {
          "perAction": {
            "status": "ok",
            "disableAt": 900,
            "warnAt": 720
          },
          "uniquePerAction": {
            "status": "ok",
            "disableAt": 17,
            "warnAt": 14
          }
        }
      },
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d1ab678c756428616a0fd",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql@12\n```\n\nStop db:\n\n```\n$ brew services stop postgresql@12\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew",
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Makefile: Access and Setup Postgres Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-05T06:52:38.382Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d19f1cec81ea1d6bbf127",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew",
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Makefile: Access and Setup Postgres Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "desc": "Start db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-05T06:49:21.162Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d12fa198fa0f2adb9bbe8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 49151.75,
          "id": "61f3adf92ec6571d01f6efd3",
          "name": "Install Django and Create Project and Apps",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "old": {
          "pos": 262143
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-05T06:19:38.720Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d0ba582059c81410e7f0f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Error:\n\n```\nCould not fetch URL https://pypi.org/simple/django/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/django/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:992)'))) - skipping\nERROR: Could not find a version that satisfies the requirement Django (from versions: none)\nERROR: No matching distribution found for Django\nCould not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:992)'))) - skipping\n```\n\nSolution:\n\nhttps://jhooq.com/pip-install-connection-error/\n\nI did the following\n\n```\n$ python3 -m pip install Django config --trusted-host pypi.org --trusted-host files.pythonhosted.org\n```",
          "id": "642d0b787e8ccc12ced55329",
          "name": "Error with Installation",
          "idShort": 165,
          "shortLink": "3au5Bx0O"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-05T05:48:21.166Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642d0b787e8ccc12ced55351",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "642d0b787e8ccc12ced55329",
          "name": "Error with Installation",
          "idShort": 165,
          "shortLink": "3au5Bx0O"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-04-05T05:47:36.854Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c435a5f0494a46424441b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "text": "DO NOT FORGET THE -A when ssh(ing) into the bastion ec2 instance - it will not allow access to the private instance\n",
        "textData": {
          "emoji": {

          }
        },
        "card": {
          "id": "642bfa975c30f2051f291090",
          "name": "Basion Host",
          "idShort": 162,
          "shortLink": "HIUTaNjQ"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "commentCard",
      "date": "2023-04-04T15:33:46.595Z",
      "limits": {
        "reactions": {
          "perAction": {
            "status": "ok",
            "disableAt": 900,
            "warnAt": 720
          },
          "uniquePerAction": {
            "status": "ok",
            "disableAt": 17,
            "warnAt": 14
          }
        }
      },
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c2735c4d4c8ce9ed17eda",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ var a = document.querySelectorAll('input[type=checkbox]')\n$ for (let i = 0; i \u003C a.length; i++) {\n    console.log(a[i]);\n    a[i].checked = false;\n}\n```",
          "id": "642c270800f305c806b80f31",
          "name": "Remove all checked inputs",
          "idShort": 164,
          "shortLink": "af0QyaFv"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "642c26f935ce7dae8e5b14a0",
          "name": "Cookies"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-04T13:33:41.727Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c270800f305c806b80f3b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "642c270800f305c806b80f31",
          "name": "Remove all checked inputs",
          "idShort": 164,
          "shortLink": "af0QyaFv"
        },
        "list": {
          "id": "642c26f935ce7dae8e5b14a0",
          "name": "Cookies"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-04-04T13:32:56.579Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c26f935ce7dae8e5b14a4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "642c26f935ce7dae8e5b14a0",
          "name": "Cookies"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2023-04-04T13:32:41.476Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c18fdcf431e533ea945e7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "6426b5ba47ac53ad37c56eec"
          ],
          "id": "6426b6fd3f0bc3fc6cc6b20c",
          "name": "AMI EC2",
          "idShort": 160,
          "shortLink": "1SK0s1v5"
        },
        "old": {
          "idLabels": []
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-04T12:33:01.260Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c18ef58a8212c85cbc114",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Descriptiom:\n\nNAT Gateway allows a EC2 instance in a private subnet to get access to what it needs from the internet (i.e install updates, create a database ect.)\n\nWebsite:\n\nhttps://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-scenarios.html#public-nat-gateway-testing\n\nhttps://towardsdatascience.com/connecting-to-an-ec2-instance-in-a-private-subnet-on-aws-38a3b86f58fb - The SSH config file and command that follows did not work for me - I used the following instead:\n\n[bastion host](https://trello.com/c/HIUTaNjQ/162-basion-host) to connect to the EC2 instance inside the private subnet and then NAT Gateway to install what is needed from the internet",
          "id": "642c17eecc9637c95b9f4c92",
          "name": "Nat Gateway",
          "idShort": 163,
          "shortLink": "PHBi9Uuz"
        },
        "old": {
          "desc": "Descriptiom:\n\nNAT Gateway allows a EC2 instance in a private subnet to get access to what it needs from the internet (i.e install updates, create a database ect.)\n\nWebsite:\n\nhttps://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-scenarios.html#public-nat-gateway-testing\n\nhttps://towardsdatascience.com/connecting-to-an-ec2-instance-in-a-private-subnet-on-aws-38a3b86f58fb\n\nUse [bastion host](https://trello.com/c/HIUTaNjQ/162-basion-host) to connect to the EC2 instance inside the private subnet and then NAT Gateway to install what is needed from the internet"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-04T12:32:47.112Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c189b0f35defe6cf17593",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Descriptiom:\n\nNAT Gateway allows a EC2 instance in a private subnet to get access to what it needs from the internet (i.e install updates, create a database ect.)\n\nWebsite:\n\nhttps://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-scenarios.html#public-nat-gateway-testing\n\nhttps://towardsdatascience.com/connecting-to-an-ec2-instance-in-a-private-subnet-on-aws-38a3b86f58fb\n\nUse [bastion host](https://trello.com/c/HIUTaNjQ/162-basion-host) to connect to the EC2 instance inside the private subnet and then NAT Gateway to install what is needed from the internet",
          "id": "642c17eecc9637c95b9f4c92",
          "name": "Nat Gateway",
          "idShort": 163,
          "shortLink": "PHBi9Uuz"
        },
        "old": {
          "desc": "Website:\n\nhttps://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-scenarios.html#public-nat-gateway-testing\n\nhttps://towardsdatascience.com/connecting-to-an-ec2-instance-in-a-private-subnet-on-aws-38a3b86f58fb\n\nUse [bastion host]() to connect to the EC2 instance inside the private subnet and then NAT Gateway to install what is needed from the internet"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-04T12:31:23.104Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c18511bb9ed47b81d8659",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Website:\n\nhttps://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-scenarios.html#public-nat-gateway-testing\n\nhttps://towardsdatascience.com/connecting-to-an-ec2-instance-in-a-private-subnet-on-aws-38a3b86f58fb\n\nUse [bastion host]() to connect to the EC2 instance inside the private subnet and then NAT Gateway to install what is needed from the internet",
          "id": "642c17eecc9637c95b9f4c92",
          "name": "Nat Gateway",
          "idShort": 163,
          "shortLink": "PHBi9Uuz"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-04T12:30:09.665Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c17eecc9637c95b9f4c9c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "642c17eecc9637c95b9f4c92",
          "name": "Nat Gateway",
          "idShort": 163,
          "shortLink": "PHBi9Uuz"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-04-04T12:28:30.670Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642c0250633e86494b87396b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Tutorial:\n\nhttps://www.strongdm.com/blog/bastion-hosts-with-audit-logging-part-one\n\nInstructions:\n\n1. Create key pair (allows access to the EC2 instance - used as a password)\n\n(Create public EC2 instance and security group)\n2. Create a EC2 instance in a public subnet - this is the bastion host\n3. Add a security group to this instance\n    - Allow only ssh traffic\n    - Should use own IP address\n4. Get **private** IP of this instance (e.g. 10.0.9.43)\n\n(Log into this instance to see if everything is working)\n5. Select bastion EC2 instance\n6. Click Connect button\n7. Go to SSH Client tab\n8. Make sure you are in the directory of where you stored your private key\n9. Run the ssh command\n    - ssh -i \"\u003Cprivate-key-file-name\u003E.pem\" ec2-user@\u003CPublic IPv4 DNS for this instance\u003E\n   - e.g `ssh -i \"testA.pem\" ec2-user@ec2-54-217-77-57.eu-west-1.compute.amazonaws.com`\n10. Write yes\n11. You should now be connected\n12. exit\n    \n(Create private EC2 instance and security group)\n13. Create a EC2 instance in a private subnet (the EC2 instance you want to have access to)\n14. Add a security group to this instance\n    - All only ssh traffic\n    - Allow the traffic to only come from the bastion host EC2 instance by assigning the source to be the private IP address range (e.g 10.0.9.43/32)\n\n(Store your private key on your machine)\n15.` $ ssh-add -K name-of-your-key.pem`\n16. `$ ssh-add -L` - to verify your key was added\n\n(Connecting through the bastion host to **private** subnet )\n17. `$ ssh -A ec2-user@ec2-54-217-77-57.eu-west-1.compute.amazonaws.com -v` (key is no longer add as it has been stored on you local machine)\n(Connecting to your EC2 instance in a **private** subnet)\n18. Inside the bastion EC2 instance run`$ ssh ec2-user@the.internal.ip.address` e.g `ssh ec2-user@10.0.137.149`\n19. yes\n20. `$ ifconfig` (look for inet to see if the ip address is the private IP for the EC2 instance in the private subnet)\n\n\n\nChallenges with self-managed bastion hosts\nAs you can see, creating a bastion host is a valuable but potentially complicated endeavor. Not only is there significant effort involved in configuring and tuning the host, but a number of security concerns that come along with those responsibilities as well. Before running a self-managed bastion configuration, you should ask yourself:\n\n- Can I quickly and easily run a report of all logins on my system, or do I need to tie together a collection of shell scripts to do the job manually?\n- Do I know who made changes to key files and settings on the system, and when those changed happened?\n- Do I have a secure way to manage keys to this system?\n- Am I capturing all this information to a secondary source in case of compromise or accidental data deletion?\n- Can I log and audit other types of remote system connections, such as RDP and telnet?\n- Have I created the necessary security policy, standard operating procedures and other documentation to regulate this system from an audit and compliance standpoint?",
          "id": "642bfa975c30f2051f291090",
          "name": "Basion Host",
          "idShort": 162,
          "shortLink": "HIUTaNjQ"
        },
        "old": {
          "desc": "Tutorial:\n\nhttps://www.strongdm.com/blog/bastion-hosts-with-audit-logging-part-one\n\nInstructions:\n\n1. Create key pair (allows access to the EC2 instance - used as a password)\n\n(Create public EC2 instance and security group)\n2. Create a EC2 instance in a public subnet - this is the bastion host\n3. Add a security group to this instance\n    - Allow only ssh traffic\n    - Should use own IP address\n4. Get **private** IP of this instance (e.g. 10.0.9.43)\n\n(Log into this instance to see if everything is working)\n5. Select bastion EC2 instance\n6. Click Connect button\n7. Go to SSH Client tab\n8. Make sure you are in the directory of where you stored your private key\n9. Run the ssh command\n    - ssh -i \"\u003Cprivate-key-file-name\u003E.pem\" ec2-user@\u003CPublic IPv4 DNS for this instance\u003E\n   - e.g `ssh -i \"testA.pem\" ec2-user@ec2-54-217-77-57.eu-west-1.compute.amazonaws.com`\n10. Write yes\n11. You should now be connected\n12. exit\n    \n(Create private EC2 instance and security group)\n13. Create a EC2 instance in a private subnet (the EC2 instance you want to have access to)\n14. Add a security group to this instance\n    - All only ssh traffic\n    - Allow the traffic to only come from the bastion host EC2 instance by assigning the source to be the private IP address range (e.g 10.0.9.43/32)\n\n(Store your private key on your machine)\n15.` $ ssh-add -K name-of-your-key.pem`\n16. `$ ssh-add -L` - to verify your key was added\n\n(Connecting through the bastion host to **private** subnet )\n17. `$ ssh -A ec2-user@ec2-54-217-77-57.eu-west-1.compute.amazonaws.com -v` (key is no longer add as it has been stored on you local machine)\n(Connecting to your EC2 instance in a **private** subnet)\n18. Inside the bastion EC2 instance run`$ ssh ec2-user@the.internal.ip.address` e.g `ssh ec2-user@10.0.137.149`\n19. yes\n20. `$ ifconfig` (look for inet to see if the ip address is the private IP for the EC2 instance in the private subnet)\n\n\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-04T10:56:16.989Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642bff80ad94d4819650ffa7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Tutorial:\n\nhttps://www.strongdm.com/blog/bastion-hosts-with-audit-logging-part-one\n\nInstructions:\n\n1. Create key pair (allows access to the EC2 instance - used as a password)\n\n(Create public EC2 instance and security group)\n2. Create a EC2 instance in a public subnet - this is the bastion host\n3. Add a security group to this instance\n    - Allow only ssh traffic\n    - Should use own IP address\n4. Get **private** IP of this instance (e.g. 10.0.9.43)\n\n(Log into this instance to see if everything is working)\n5. Select bastion EC2 instance\n6. Click Connect button\n7. Go to SSH Client tab\n8. Make sure you are in the directory of where you stored your private key\n9. Run the ssh command\n    - ssh -i \"\u003Cprivate-key-file-name\u003E.pem\" ec2-user@\u003CPublic IPv4 DNS for this instance\u003E\n   - e.g `ssh -i \"testA.pem\" ec2-user@ec2-54-217-77-57.eu-west-1.compute.amazonaws.com`\n10. Write yes\n11. You should now be connected\n12. exit\n    \n(Create private EC2 instance and security group)\n13. Create a EC2 instance in a private subnet (the EC2 instance you want to have access to)\n14. Add a security group to this instance\n    - All only ssh traffic\n    - Allow the traffic to only come from the bastion host EC2 instance by assigning the source to be the private IP address range (e.g 10.0.9.43/32)\n\n(Store your private key on your machine)\n15.` $ ssh-add -K name-of-your-key.pem`\n16. `$ ssh-add -L` - to verify your key was added\n\n(Connecting through the bastion host to **private** subnet )\n17. `$ ssh -A ec2-user@ec2-54-217-77-57.eu-west-1.compute.amazonaws.com -v` (key is no longer add as it has been stored on you local machine)\n(Connecting to your EC2 instance in a **private** subnet)\n18. Inside the bastion EC2 instance run`$ ssh ec2-user@the.internal.ip.address` e.g `ssh ec2-user@10.0.137.149`\n19. yes\n20. `$ ifconfig` (look for inet to see if the ip address is the private IP for the EC2 instance in the private subnet)\n\n\n\n",
          "id": "642bfa975c30f2051f291090",
          "name": "Basion Host",
          "idShort": 162,
          "shortLink": "HIUTaNjQ"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-04T10:44:16.941Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642bfa975c30f2051f29109a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "642bfa975c30f2051f291090",
          "name": "Basion Host",
          "idShort": 162,
          "shortLink": "HIUTaNjQ"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-04-04T10:23:19.681Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642adcf0ec72849d57f93f7c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "If we try to create an AMI with all our other deployments, i.e auto scaling, load balancer and ec2 instances etc,  the AMI will not have the installation scripts or the code that needs to be on the server so when we scale we don't have access to the code. \n\nIssues:\n\n1. Node.js is not installed on server (ami created on platform deployment)\n2. Code is not installed on server (ami created on platform deployment)\n3. Infrastructure will scale with an empty EC2 instance (no code) \n4. If we create the AMI first, we will have an instance running that we do not need (we needed this instance originally to create the AMI) - so we need to find a way to delete this instance\n5. We also don't have the id of the AMI when we deploy all the other code (we would have to output this value to the console or add it to a file)\n\nPossible solutions:\n\n1. Use Parker \n\nhttps://flugel-it.medium.com/building-and-running-custom-amis-on-aws-using-packer-and-terraform-3db28c968b30\n\n2. Use terraform\n\n- output AMI id to a file. Use that file when applying terraform for the rest of the infrastructure\n- Find a way to terminate an instance once the AMI is build \n\n3. Find out how OpsWork (puppet and chef) works",
          "id": "642adadc4ceb0d4e35bd4e29",
          "name": "Issues with creating AMIs with terraform and then trying to scale",
          "idShort": 161,
          "shortLink": "NQoLYSaP"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-04-03T14:04:32.671Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642adadc4ceb0d4e35bd4e33",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "642adadc4ceb0d4e35bd4e29",
          "name": "Issues with creating AMIs with terraform and then trying to scale",
          "idShort": 161,
          "shortLink": "NQoLYSaP"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-04-03T13:55:40.073Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6426b8717e50009413b18eb5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "When using an AMI make sure to add the user data to enable the firewall before launching the instance\n\nUser ec2-user not root user\n\n```\nssh -i \"testA.pem\" ec2-user@ec2-54-247-155-252.eu-west-1.compute.amazonaws.com\n```",
          "id": "6426b6fd3f0bc3fc6cc6b20c",
          "name": "AMI EC2",
          "idShort": 160,
          "shortLink": "1SK0s1v5"
        },
        "old": {
          "desc": "When using an AMI make sure to add the user data to enable the firewall before launching the instance"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-31T10:39:45.384Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6426b725f1525717ef952b86",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "When using an AMI make sure to add the user data to enable the firewall before launching the instance",
          "id": "6426b6fd3f0bc3fc6cc6b20c",
          "name": "AMI EC2",
          "idShort": 160,
          "shortLink": "1SK0s1v5"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-31T10:34:13.617Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6426b6fd3f0bc3fc6cc6b216",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6426b6fd3f0bc3fc6cc6b20c",
          "name": "AMI EC2",
          "idShort": 160,
          "shortLink": "1SK0s1v5"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-31T10:33:33.302Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6426b6f41f91a8a16f969a7b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "6426b5ba47ac53ad37c56eec"
          ],
          "id": "6426b5d66bcd1818d63bf623",
          "name": "EC2 Linux Operating Systems",
          "idShort": 159,
          "shortLink": "s7cKhyzK"
        },
        "old": {
          "idLabels": []
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-31T10:33:24.971Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6426b64f2d411a776ae9bd50",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type\n\nScript to connect:\n\n```\nssh -i \"\u003Cpath/to/key\u003E/testA.pem\" ec2-user@\u003Cpublic-ip\u003E.eu-west-1.compute.amazonaws.com\n```\n\nFirewall:\n\n```\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3000\n\nsudo iptables -A INPUT -p tcp -m tcp --sport 80 -j ACCEPT\n\nsudo iptables -A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT\n```\n\nNode scripts:\n\n```\n$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh | bash\n$ . ~/.nvm/nvm.sh\n$ nvm install 18\nUse cyber duck to move files onto server (do not include node modules)\n$ npm install\n$ npm run build\n$ npm start\n```",
          "id": "6426b5d66bcd1818d63bf623",
          "name": "EC2 Linux Operating Systems",
          "idShort": 159,
          "shortLink": "s7cKhyzK"
        },
        "old": {
          "desc": "Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type\n\nFirewall:\n\n```\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3000\n\nsudo iptables -A INPUT -p tcp -m tcp --sport 80 -j ACCEPT\n\nsudo iptables -A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT\n```\n\nNode scripts:\n\n```\n$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh | bash\n$ . ~/.nvm/nvm.sh\n$ nvm install 18\nUse cyber duck to move files onto server (do not include node modules)\n$ npm install\n$ npm run build\n$ npm start\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-31T10:30:39.896Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6426b60410c194da2b0fcf68",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type\n\nFirewall:\n\n```\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3000\n\nsudo iptables -A INPUT -p tcp -m tcp --sport 80 -j ACCEPT\n\nsudo iptables -A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT\n```\n\nNode scripts:\n\n```\n$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh | bash\n$ . ~/.nvm/nvm.sh\n$ nvm install 18\nUse cyber duck to move files onto server (do not include node modules)\n$ npm install\n$ npm run build\n$ npm start\n```",
          "id": "6426b5d66bcd1818d63bf623",
          "name": "EC2 Linux Operating Systems",
          "idShort": 159,
          "shortLink": "s7cKhyzK"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-31T10:29:24.826Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6426b5d66bcd1818d63bf62d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6426b5d66bcd1818d63bf623",
          "name": "EC2 Linux Operating Systems",
          "idShort": 159,
          "shortLink": "s7cKhyzK"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-31T10:28:38.887Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6426b5bd1176b4d1140144be",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "6426b5ba47ac53ad37c56eec"
          ],
          "id": "6424471cdfcae70851212213",
          "name": "EC2 SSH Market Place AMI",
          "idShort": 155,
          "shortLink": "q9Pm5MLu"
        },
        "old": {
          "idLabels": [
            "610a69cfc8246138301fa822",
            "6426b5ba47ac53ad37c56eec"
          ]
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-31T10:28:13.552Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6426b5b328d72fb2a0f78d5d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "610a69cfc8246138301fa822"
          ],
          "id": "6424471cdfcae70851212213",
          "name": "EC2 SSH Market Place AMI",
          "idShort": 155,
          "shortLink": "q9Pm5MLu"
        },
        "old": {
          "idLabels": []
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-31T10:28:03.706Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6425aec3cb46bd41833464c4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://stackoverflow.com/questions/20822021/amazon-ec2-instance-cant-update-or-use-yum\n\nSecurity groups are stateful but it won't let requests out that started from inside the instance therefore you need to add all traffic rule out of the ec2 instance. See image below\n\n_'[Security groups are] stateful, so you can define an incoming security group and it will let traffic in and the same traffic out again. It won't let traffic out that starts from inside the instance. For that you have to add an outgoing \"Egress\" group.'_\n\nThis appears to be a Terraform this",
          "id": "6425ade28185a4d64999f016",
          "name": "Add OUTBOUND rule to security group!",
          "idShort": 158,
          "shortLink": "vyG21wz6"
        },
        "old": {
          "desc": "https://stackoverflow.com/questions/20822021/amazon-ec2-instance-cant-update-or-use-yum\n\nSecurity groups are stateful but it won't let requests out that started from inside the instance therefore you need to add all traffic rule out of the ec2 instance. See image below\n\n_'[Security groups are] stateful, so you can define an incoming security group and it will let traffic in and the same traffic out again. It won't let traffic out that starts from inside the instance. For that you have to add an outgoing \"Egress\" group.'_"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-30T15:46:11.126Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6425aead214a7ad0d9f15b7d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://stackoverflow.com/questions/20822021/amazon-ec2-instance-cant-update-or-use-yum\n\nSecurity groups are stateful but it won't let requests out that started from inside the instance therefore you need to add all traffic rule out of the ec2 instance. See image below\n\n_'[Security groups are] stateful, so you can define an incoming security group and it will let traffic in and the same traffic out again. It won't let traffic out that starts from inside the instance. For that you have to add an outgoing \"Egress\" group.'_",
          "id": "6425ade28185a4d64999f016",
          "name": "Add OUTBOUND rule to security group!",
          "idShort": 158,
          "shortLink": "vyG21wz6"
        },
        "old": {
          "desc": "https://stackoverflow.com/questions/20822021/amazon-ec2-instance-cant-update-or-use-yum\n\nSecurity groups are stateful but it won't let requests out that started from inside the instance therefore you need to add all traffic out of the ec2 instance. See image below\n\n_'[Security groups are] stateful, so you can define an incoming security group and it will let traffic in and the same traffic out again. It won't let traffic out that starts from inside the instance. For that you have to add an outgoing \"Egress\" group.'_"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-30T15:45:49.709Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6425ae9af0c0e37e4860e633",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://stackoverflow.com/questions/20822021/amazon-ec2-instance-cant-update-or-use-yum\n\nSecurity groups are stateful but it won't let requests out that started from inside the instance therefore you need to add all traffic out of the ec2 instance. See image below\n\n_'[Security groups are] stateful, so you can define an incoming security group and it will let traffic in and the same traffic out again. It won't let traffic out that starts from inside the instance. For that you have to add an outgoing \"Egress\" group.'_",
          "id": "6425ade28185a4d64999f016",
          "name": "Add OUTBOUND rule to security group!",
          "idShort": 158,
          "shortLink": "vyG21wz6"
        },
        "old": {
          "desc": "https://stackoverflow.com/questions/20822021/amazon-ec2-instance-cant-update-or-use-yum\n\nSecurity groups are stateful but it won't let requests out that started from inside the instance\n\n_'[Security groups are] stateful, so you can define an incoming security group and it will let traffic in and the same traffic out again. It won't let traffic out that starts from inside the instance. For that you have to add an outgoing \"Egress\" group.'_"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-30T15:45:30.491Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6425ae862cb8ba48b4f3b3c2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "attachment": {
          "id": "6425ae862cb8ba48b4f3b3a1",
          "name": "Screenshot 2023-03-30 at 16.44.58.png",
          "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/download/Screenshot_2023-03-30_at_16.44.58.png",
          "previewUrl": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/preview/download/Screenshot_2023-03-30_at_16.44.58.png",
          "previewUrl2x": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/preview2x/download/Screenshot_2023-03-30_at_16.44.58.png"
        },
        "card": {
          "id": "6425ade28185a4d64999f016",
          "name": "Add OUTBOUND rule to security group!",
          "idShort": 158,
          "shortLink": "vyG21wz6"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addAttachmentToCard",
      "date": "2023-03-30T15:45:10.881Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6425ae51a3e56b5505fbeae4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://stackoverflow.com/questions/20822021/amazon-ec2-instance-cant-update-or-use-yum\n\nSecurity groups are stateful but it won't let requests out that started from inside the instance\n\n_'[Security groups are] stateful, so you can define an incoming security group and it will let traffic in and the same traffic out again. It won't let traffic out that starts from inside the instance. For that you have to add an outgoing \"Egress\" group.'_",
          "id": "6425ade28185a4d64999f016",
          "name": "Add OUTBOUND rule to security group!",
          "idShort": 158,
          "shortLink": "vyG21wz6"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-30T15:44:17.735Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6425ade28185a4d64999f020",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6425ade28185a4d64999f016",
          "name": "Add OUTBOUND rule to security group!",
          "idShort": 158,
          "shortLink": "vyG21wz6"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-30T15:42:26.948Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642543c618bb83c50f31d1f0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "1. Add Node.js\n\n```\n$ brew install nodejs\n```\n\n2. Add React\n\nhttps://create-react-app.dev/docs/getting-started/\n\n```\n$ npx create-react-app my-app\n$ cd my-app\n$ npm start\n```",
          "id": "6425438dad2f9ece4388fe71",
          "name": "Install",
          "idShort": 157,
          "shortLink": "DVotJpW4"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "64254384968afc032fcf7ead",
          "name": "React"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-30T08:09:42.457Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6425438dad2f9ece4388fe7b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6425438dad2f9ece4388fe71",
          "name": "Install",
          "idShort": 157,
          "shortLink": "DVotJpW4"
        },
        "list": {
          "id": "64254384968afc032fcf7ead",
          "name": "React"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-30T08:08:45.838Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64254384968afc032fcf7eb1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "64254384968afc032fcf7ead",
          "name": "React"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2023-03-30T08:08:36.784Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64244a13479e9814664179fd",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "VPC:\n\nUse the flow logs (use for http and https source):\n\n1. Open up the flow to all traffic\n2. Hit the instance\n3. Look in cloudwatch for the public IP address\n4. Limit instance just for IP address\n\n```\n2 363321665306 eni-084392de2cf6e27e1 47.161.166.189 10.0.3.249 45050 443 6 6 837 1680097053 1680097111 **ACCEPT OK\n```\n\nUse EC2 Instance (use for ssh source):\n\n1. Open Instance for all traffic\n2. SSH in to the instance\n3. Run `$ who am I`\n4. Get the IP address that is in the brackets\n5. Limit instance just for IP address",
          "id": "642448d4a9ff83d8c7c1bf8a",
          "name": "Finding my IP address",
          "idShort": 156,
          "shortLink": "F6cn33l2"
        },
        "old": {
          "desc": "VPC:\n\nUse the flow logs:\n\n1. Open up the flow to all traffic\n2. Hit the instance\n3. Look in cloudwatch for the public IP address\n\n```\n2 363321665306 eni-084392de2cf6e27e1 47.161.166.189 10.0.3.249 45050 443 6 6 837 1680097053 1680097111 **ACCEPT OK\n```\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T14:24:19.572Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6424498a373bd7e5f4621391",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "VPC:\n\nUse the flow logs:\n\n1. Open up the flow to all traffic\n2. Hit the instance\n3. Look in cloudwatch for the public IP address\n\n```\n2 363321665306 eni-084392de2cf6e27e1 47.161.166.189 10.0.3.249 45050 443 6 6 837 1680097053 1680097111 **ACCEPT OK\n```\n\n",
          "id": "642448d4a9ff83d8c7c1bf8a",
          "name": "Finding my IP address",
          "idShort": 156,
          "shortLink": "F6cn33l2"
        },
        "old": {
          "desc": "VPC:\n\nUse the flow logs:\n\n1. Open up the flow to all traffic\n2. Hit the instance\n3. Look in cloudwatch for the public IP address\n\n```\n2 363321665306 eni-084392de2cf6e27e1 **147.161.166.189** 10.0.3.249 45050 443 6 6 837 1680097053 1680097111 **ACCEPT OK**\n```\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T14:22:02.346Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6424497a75b54b9f83f3b041",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "VPC:\n\nUse the flow logs:\n\n1. Open up the flow to all traffic\n2. Hit the instance\n3. Look in cloudwatch for the public IP address\n\n```\n2 363321665306 eni-084392de2cf6e27e1 **147.161.166.189** 10.0.3.249 45050 443 6 6 837 1680097053 1680097111 **ACCEPT OK**\n```\n\n",
          "id": "642448d4a9ff83d8c7c1bf8a",
          "name": "Finding my IP address",
          "idShort": 156,
          "shortLink": "F6cn33l2"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T14:21:46.361Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "642448d4a9ff83d8c7c1bf94",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "642448d4a9ff83d8c7c1bf8a",
          "name": "Finding my IP address",
          "idShort": 156,
          "shortLink": "F6cn33l2"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-29T14:19:00.356Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64244767df1208937c466149",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "WordPress Certified by Bitnami and Automattic:\n\n`You can also access your instance via SSH using the username 'bitnami' and your Amazon private key.`\n\n```\nssh -i \"/Users/osborncourtney/Desktop/testB.pem\" bitnami@ec2-54-72-134-249.eu-west-1.compute.amazonaws.com\n```",
          "id": "6424471cdfcae70851212213",
          "name": "EC2 SSH Market Place AMI",
          "idShort": 155,
          "shortLink": "q9Pm5MLu"
        },
        "old": {
          "desc": "WordPress Certified by Bitnami and Automattic:\n\n`You can also access your instance via SSH using the username 'bitnami' and your Amazon private key.`"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T14:12:55.722Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64244752eb78e52196e8391b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "WordPress Certified by Bitnami and Automattic:\n\n`You can also access your instance via SSH using the username 'bitnami' and your Amazon private key.`",
          "id": "6424471cdfcae70851212213",
          "name": "EC2 SSH Market Place AMI",
          "idShort": 155,
          "shortLink": "q9Pm5MLu"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T14:12:34.905Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6424472fe34ab28b01734faa",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "EC2 SSH Market Place AMI",
          "id": "6424471cdfcae70851212213",
          "idShort": 155,
          "shortLink": "q9Pm5MLu"
        },
        "old": {
          "name": "EC2 SSH AMI"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T14:11:59.990Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64244722662fd3be65d63947",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "EC2 SSH AMI",
          "id": "6424471cdfcae70851212213",
          "idShort": 155,
          "shortLink": "q9Pm5MLu"
        },
        "old": {
          "name": "EC2 SSH"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T14:11:46.181Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6424471cdfcae70851212225",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6424471cdfcae70851212213",
          "name": "EC2 SSH",
          "idShort": 155,
          "shortLink": "q9Pm5MLu"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-29T14:11:40.933Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6424403d417ca418c8acbc5a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account\n",
          "id": "64244039ba84da32da262e03",
          "name": "Add Github SSH",
          "idShort": 154,
          "shortLink": "bbjQuXYm"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T13:42:21.396Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64244039ba84da32da262e0d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "64244039ba84da32da262e03",
          "name": "Add Github SSH",
          "idShort": 154,
          "shortLink": "bbjQuXYm"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-29T13:42:17.112Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423f1d575b54b9f8368484c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 245759,
          "id": "6423e61fb9bd3659fa5f0656",
          "name": "Setup AWS",
          "idShort": 153,
          "shortLink": "0fhwnGy4"
        },
        "old": {
          "pos": 393215
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T08:07:49.803Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423f1d490682bd68e6f5c73",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 229375,
          "id": "6423e4ca3e59d78cc8d22fac",
          "name": "Setup Atom",
          "idShort": 152,
          "shortLink": "e1j1Umro"
        },
        "old": {
          "pos": 327679
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T08:07:48.480Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423f16d35c9ac0f1b10260e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install:\n\n```\n$ brew install --cask atom\n```\n\nSnippets:\n\n```\n'.source.go':\n    'print':\n      'prefix': 'ln'\n      'body': \"\"\"fmt.Println(\"================\")\n              fmt.Println(\"$1\", $1);\n              fmt.Println(\"================\")\n              \"\"\"\n\n'.source.python':\n    'print':\n      'prefix': 'pri'\n      'body': \"\"\"print('================')\n              print(\"$1\", $1)\n              print('================')\n              \"\"\"\n\n'.source.js':\n    'Console log Block':\n        'prefix': 'clb'\n        'body': \"\"\"console.log('================');\n                console.log(\"$1\", $1);\n                console.log('================');\n                \"\"\"\n    'Console log':\n        'prefix': 'cl'\n        'body': 'console.log(\"$1\");'\n    'Console log dupe':\n        'prefix': 'cll'\n        'body': 'console.log(\"$1\", $1);'\n    'Describe Block':\n        'prefix': 'desc'\n        \"body\": \"\"\"describe('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'beforeEach':\n        'prefix': 'befo'\n        \"body\": \"\"\"beforeEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'afterEach':\n        'prefix': 'afte'\n        \"body\": \"\"\"afterEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'it':\n        'prefix': 'it'\n        \"body\": \"\"\"it('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'context':\n        'prefix': 'cont'\n        \"body\": \"\"\"context('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n\n'.source.ts':\n    'Console log Block':\n        'prefix': 'clb'\n        'body': \"\"\"console.log('================')\n                console.log(\"$1\", $1);\n                console.log('================')\n                \"\"\"\n    'Console log':\n        'prefix': 'cl'\n        'body': 'console.log(\"$1\");'\n    'Console log dupe':\n        'prefix': 'cll'\n        'body': 'console.log(\"$1\", $1);'\n    'Describe Block':\n        'prefix': 'desc'\n        \"body\": \"\"\"describe('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'beforeEach':\n        'prefix': 'befo'\n        \"body\": \"\"\"beforeEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'afterEach':\n        'prefix': 'afte'\n        \"body\": \"\"\"afterEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'it':\n        'prefix': 'it'\n        \"body\": \"\"\"it('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'context':\n        'prefix': 'cont'\n        \"body\": \"\"\"context('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n```",
          "id": "6423e4ca3e59d78cc8d22fac",
          "name": "Setup Atom",
          "idShort": 152,
          "shortLink": "e1j1Umro"
        },
        "old": {
          "desc": "Install:\n\nhttps://atom.en.softonic.com/mac\n\n\nSetup `atom .`\n\n1. Add atom to application folder\n2. Run `ln -s /Applications/Atom.app/Contents/Resources/app/atom.sh /usr/local/bin/atom`\n\n\nSnippets:\n\n```\n'.source.go':\n    'print':\n      'prefix': 'ln'\n      'body': \"\"\"fmt.Println(\"================\")\n              fmt.Println(\"$1\", $1);\n              fmt.Println(\"================\")\n              \"\"\"\n\n'.source.python':\n    'print':\n      'prefix': 'pri'\n      'body': \"\"\"print('================')\n              print(\"$1\", $1)\n              print('================')\n              \"\"\"\n\n'.source.js':\n    'Console log Block':\n        'prefix': 'clb'\n        'body': \"\"\"console.log('================');\n                console.log(\"$1\", $1);\n                console.log('================');\n                \"\"\"\n    'Console log':\n        'prefix': 'cl'\n        'body': 'console.log(\"$1\");'\n    'Console log dupe':\n        'prefix': 'cll'\n        'body': 'console.log(\"$1\", $1);'\n    'Describe Block':\n        'prefix': 'desc'\n        \"body\": \"\"\"describe('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'beforeEach':\n        'prefix': 'befo'\n        \"body\": \"\"\"beforeEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'afterEach':\n        'prefix': 'afte'\n        \"body\": \"\"\"afterEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'it':\n        'prefix': 'it'\n        \"body\": \"\"\"it('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'context':\n        'prefix': 'cont'\n        \"body\": \"\"\"context('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n\n'.source.ts':\n    'Console log Block':\n        'prefix': 'clb'\n        'body': \"\"\"console.log('================')\n                console.log(\"$1\", $1);\n                console.log('================')\n                \"\"\"\n    'Console log':\n        'prefix': 'cl'\n        'body': 'console.log(\"$1\");'\n    'Console log dupe':\n        'prefix': 'cll'\n        'body': 'console.log(\"$1\", $1);'\n    'Describe Block':\n        'prefix': 'desc'\n        \"body\": \"\"\"describe('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'beforeEach':\n        'prefix': 'befo'\n        \"body\": \"\"\"beforeEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'afterEach':\n        'prefix': 'afte'\n        \"body\": \"\"\"afterEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'it':\n        'prefix': 'it'\n        \"body\": \"\"\"it('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'context':\n        'prefix': 'cont'\n        \"body\": \"\"\"context('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T08:06:05.702Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423eaf511a26f6cacabb013",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install\n\n```\n$ brew tap hashicorp/tap\n$ brew install hashicorp/tap/terraform\n$ terraform -help\n```\n\nmain.tf\n\n```\nterraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~\u003E 4.16\"\n    }\n  }\n\n  required_version = \"\u003E= 1.2.0\"\n}\n\nprovider \"aws\" {\n  region  = var.AWS_REGION\n}\n```\n\nvariables.tf \n\n```\nvariable \"AWS_REGION\" {\n  default = \"eu-west-2\"\n}\n```",
          "id": "6423e4c165aa3126b0aabc37",
          "name": "Setup Terraform",
          "idShort": 150,
          "shortLink": "XyWMobVP"
        },
        "old": {
          "desc": "Install\n\n```\n$ brew tap hashicorp/tap\n$ brew install hashicorp/tap/terraform\n$ terraform -help\n```\n\nEnable Tab Completion\n\n```\n$ touch ~/.bashrc\n$ terraform -install-autocomplete\n```\n\nmain.tf\n\n```\nterraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~\u003E 4.16\"\n    }\n  }\n\n  required_version = \"\u003E= 1.2.0\"\n}\n\nprovider \"aws\" {\n  region  = \"us-west-2\"\n}\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T07:38:29.904Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e9c9cbbc12a6f228798a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install\n\n```\n$ brew tap hashicorp/tap\n$ brew install hashicorp/tap/terraform\n$ terraform -help\n```\n\nEnable Tab Completion\n\n```\n$ touch ~/.bashrc\n$ terraform -install-autocomplete\n```\n\nmain.tf\n\n```\nterraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~\u003E 4.16\"\n    }\n  }\n\n  required_version = \"\u003E= 1.2.0\"\n}\n\nprovider \"aws\" {\n  region  = \"us-west-2\"\n}\n```",
          "id": "6423e4c165aa3126b0aabc37",
          "name": "Setup Terraform",
          "idShort": 150,
          "shortLink": "XyWMobVP"
        },
        "old": {
          "desc": "Install\n\n```\n$ brew tap hashicorp/tap\n$ brew install hashicorp/tap/terraform\n$ terraform -help\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T07:33:29.481Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e985f622f46cd6e7f6b9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install\n\n```\n$ brew tap hashicorp/tap\n$ brew install hashicorp/tap/terraform\n$ terraform -help\n```",
          "id": "6423e4c165aa3126b0aabc37",
          "name": "Setup Terraform",
          "idShort": 150,
          "shortLink": "XyWMobVP"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T07:32:21.022Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e8da7b92b95d07cc1cf8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install AWS\n\n```\ncurl \"https://awscli.amazonaws.com/AWSCLIV2.pkg\" -o \"AWSCLIV2.pkg\"\nsudo installer -pkg AWSCLIV2.pkg -target /\nwhich aws\naws --version\n```\n\nConfiguration\n\n```\n$ aws configure\n```",
          "id": "6423e61fb9bd3659fa5f0656",
          "name": "Setup AWS",
          "idShort": 153,
          "shortLink": "0fhwnGy4"
        },
        "old": {
          "desc": "Install AWS\n\n```\ncurl \"https://awscli.amazonaws.com/AWSCLIV2.pkg\" -o \"AWSCLIV2.pkg\"\nsudo installer -pkg AWSCLIV2.pkg -target /\nwhich aws\naws --version\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T07:29:30.234Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e638aa8eef68f9f78df3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install AWS\n\n```\ncurl \"https://awscli.amazonaws.com/AWSCLIV2.pkg\" -o \"AWSCLIV2.pkg\"\nsudo installer -pkg AWSCLIV2.pkg -target /\nwhich aws\naws --version\n```",
          "id": "6423e61fb9bd3659fa5f0656",
          "name": "Setup AWS",
          "idShort": 153,
          "shortLink": "0fhwnGy4"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T07:18:16.706Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e61fb9bd3659fa5f0660",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6423e61fb9bd3659fa5f0656",
          "name": "Setup AWS",
          "idShort": 153,
          "shortLink": "0fhwnGy4"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-29T07:17:51.195Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e6005cc2b9ae32d0b687",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install:\n\nhttps://atom.en.softonic.com/mac\n\n\nSetup `atom .`\n\n1. Add atom to application folder\n2. Run `ln -s /Applications/Atom.app/Contents/Resources/app/atom.sh /usr/local/bin/atom`\n\n\nSnippets:\n\n```\n'.source.go':\n    'print':\n      'prefix': 'ln'\n      'body': \"\"\"fmt.Println(\"================\")\n              fmt.Println(\"$1\", $1);\n              fmt.Println(\"================\")\n              \"\"\"\n\n'.source.python':\n    'print':\n      'prefix': 'pri'\n      'body': \"\"\"print('================')\n              print(\"$1\", $1)\n              print('================')\n              \"\"\"\n\n'.source.js':\n    'Console log Block':\n        'prefix': 'clb'\n        'body': \"\"\"console.log('================');\n                console.log(\"$1\", $1);\n                console.log('================');\n                \"\"\"\n    'Console log':\n        'prefix': 'cl'\n        'body': 'console.log(\"$1\");'\n    'Console log dupe':\n        'prefix': 'cll'\n        'body': 'console.log(\"$1\", $1);'\n    'Describe Block':\n        'prefix': 'desc'\n        \"body\": \"\"\"describe('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'beforeEach':\n        'prefix': 'befo'\n        \"body\": \"\"\"beforeEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'afterEach':\n        'prefix': 'afte'\n        \"body\": \"\"\"afterEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'it':\n        'prefix': 'it'\n        \"body\": \"\"\"it('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'context':\n        'prefix': 'cont'\n        \"body\": \"\"\"context('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n\n'.source.ts':\n    'Console log Block':\n        'prefix': 'clb'\n        'body': \"\"\"console.log('================')\n                console.log(\"$1\", $1);\n                console.log('================')\n                \"\"\"\n    'Console log':\n        'prefix': 'cl'\n        'body': 'console.log(\"$1\");'\n    'Console log dupe':\n        'prefix': 'cll'\n        'body': 'console.log(\"$1\", $1);'\n    'Describe Block':\n        'prefix': 'desc'\n        \"body\": \"\"\"describe('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'beforeEach':\n        'prefix': 'befo'\n        \"body\": \"\"\"beforeEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'afterEach':\n        'prefix': 'afte'\n        \"body\": \"\"\"afterEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'it':\n        'prefix': 'it'\n        \"body\": \"\"\"it('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'context':\n        'prefix': 'cont'\n        \"body\": \"\"\"context('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n```",
          "id": "6423e4ca3e59d78cc8d22fac",
          "name": "Setup Atom",
          "idShort": 152,
          "shortLink": "e1j1Umro"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-29T07:17:20.343Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e4ca3e59d78cc8d22fb6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6423e4ca3e59d78cc8d22fac",
          "name": "Setup Atom",
          "idShort": 152,
          "shortLink": "e1j1Umro"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-29T07:12:10.689Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e4c5f8d0df94d829409d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6423e4c5f8d0df94d8294093",
          "name": "Setup Postman",
          "idShort": 151,
          "shortLink": "grsqBURM"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-29T07:12:05.818Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e4c165aa3126b0aabc45",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6423e4c165aa3126b0aabc37",
          "name": "Setup Terraform",
          "idShort": 150,
          "shortLink": "XyWMobVP"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-29T07:12:01.962Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e4bbd385d651d9bd0f6c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6423e4bbd385d651d9bd0f62",
          "name": "Setup Node",
          "idShort": 149,
          "shortLink": "u8z1C5vy"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-29T07:11:55.977Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e4b7c5ecd2fa31c80f96",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6423e4b7c5ecd2fa31c80f7e",
          "name": "Setup Python",
          "idShort": 148,
          "shortLink": "zUXNrrqG"
        },
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-29T07:11:51.524Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6423e4b0badd3cd8072134ae",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "6423e4b0badd3cd8072134aa",
          "name": "Computer Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2023-03-29T07:11:44.391Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64148f0c9669311e549d0df4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```\n\nIf you are deploying with a custom role use the following\n\n```\n$ sam deploy --guided --capabilities CAPABILITY_NAMED_IAM\n```\n\nTo run SAM it appears to need a samconfig.toml file i.e:\n\nsimplify/samconfig.toml\n\n```\n# More information about the configuration file can be found here:\n# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-config.html\nversion = 0.1\n\n[default]\n[default.global]\n[default.global.parameters]\nstack_name = \"simplify\"\n\n[default.build]\n[default.build.parameters]\ncached = true\nparallel = true\n\n[default.validate]\n[default.validate.parameters]\nlint = true\n\n[default.deploy]\n[default.deploy.parameters]\ncapabilities = \"CAPABILITY_NAMED_IAM\"\nconfirm_changeset = true\nresolve_s3 = true\ns3_bucket = \"aws-sam-cli-managed-default-samclisourcebucket-7hzv9gvvanx5\"\ns3_prefix = \"simplify\"\nregion = \"eu-west-2\"\nimage_repositories = []\n\n[default.package]\n[default.package.parameters]\nresolve_s3 = true\n\n[default.sync]\n[default.sync.parameters]\nwatch = true\n\n[default.local_start_api]\n[default.local_start_api.parameters]\nwarm_containers = \"EAGER\"\n\n[default.local_start_lambda]\n[default.local_start_lambda.parameters]\nwarm_containers = \"EAGER\"\n```\n\nCheck template\n\n```\n$ sam validate\n```\n\nDelete template and resources:\n\n```\n$ sam delete\n```",
          "id": "6412db606babd39eeabfd7c4",
          "name": "SAM",
          "idShort": 146,
          "shortLink": "lMCMNsVR"
        },
        "old": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```\n\nIf you are deploying with a custom role use the following\n\n```\n$ sam deploy --guided --capabilities CAPABILITY_NAMED_IAM\n```\n\nTo run SAM it appears to need a samconfig.toml file i.e:\n\nsimplify/samconfig.toml\n\n```\n# More information about the configuration file can be found here:\n# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-config.html\nversion = 0.1\n\n[default]\n[default.global]\n[default.global.parameters]\nstack_name = \"simplify\"\n\n[default.build]\n[default.build.parameters]\ncached = true\nparallel = true\n\n[default.validate]\n[default.validate.parameters]\nlint = true\n\n[default.deploy]\n[default.deploy.parameters]\ncapabilities = \"CAPABILITY_NAMED_IAM\"\nconfirm_changeset = true\nresolve_s3 = true\ns3_bucket = \"aws-sam-cli-managed-default-samclisourcebucket-7hzv9gvvanx5\"\ns3_prefix = \"simplify\"\nregion = \"eu-west-2\"\nimage_repositories = []\n\n[default.package]\n[default.package.parameters]\nresolve_s3 = true\n\n[default.sync]\n[default.sync.parameters]\nwatch = true\n\n[default.local_start_api]\n[default.local_start_api.parameters]\nwarm_containers = \"EAGER\"\n\n[default.local_start_lambda]\n[default.local_start_lambda.parameters]\nwarm_containers = \"EAGER\"\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-17T16:02:20.925Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64133213c1a50fbb7e58ae32",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "eval(string)",
          "id": "641332062d94ab13549a3239",
          "name": "Get Object from string",
          "idShort": 147,
          "shortLink": "NG85k4eu"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-16T15:13:23.499Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "641332062d94ab13549a3243",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "641332062d94ab13549a3239",
          "name": "Get Object from string",
          "idShort": 147,
          "shortLink": "NG85k4eu"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-16T15:13:10.354Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64132117dca2b57f2b2d4a6d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```\n\nIf you are deploying with a custom role use the following\n\n```\n$ sam deploy --guided --capabilities CAPABILITY_NAMED_IAM\n```\n\nTo run SAM it appears to need a samconfig.toml file i.e:\n\nsimplify/samconfig.toml\n\n```\n# More information about the configuration file can be found here:\n# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-config.html\nversion = 0.1\n\n[default]\n[default.global]\n[default.global.parameters]\nstack_name = \"simplify\"\n\n[default.build]\n[default.build.parameters]\ncached = true\nparallel = true\n\n[default.validate]\n[default.validate.parameters]\nlint = true\n\n[default.deploy]\n[default.deploy.parameters]\ncapabilities = \"CAPABILITY_NAMED_IAM\"\nconfirm_changeset = true\nresolve_s3 = true\ns3_bucket = \"aws-sam-cli-managed-default-samclisourcebucket-7hzv9gvvanx5\"\ns3_prefix = \"simplify\"\nregion = \"eu-west-2\"\nimage_repositories = []\n\n[default.package]\n[default.package.parameters]\nresolve_s3 = true\n\n[default.sync]\n[default.sync.parameters]\nwatch = true\n\n[default.local_start_api]\n[default.local_start_api.parameters]\nwarm_containers = \"EAGER\"\n\n[default.local_start_lambda]\n[default.local_start_lambda.parameters]\nwarm_containers = \"EAGER\"\n```",
          "id": "6412db606babd39eeabfd7c4",
          "name": "SAM",
          "idShort": 146,
          "shortLink": "lMCMNsVR"
        },
        "old": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```\n\nIf you are deploying with a custom role use the following\n\n```\n$ sam deploy --guided --capabilities CAPABILITY_NAMED_IAM\n```\n\nTo run SAM it appears to need a samconfig.toml file i.e:\n\nsimplify/samconfig.toml\n```\n# More information about the configuration file can be found here:\n# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-config.html\nversion = 0.1\n\n[default]\n[default.global]\n[default.global.parameters]\nstack_name = \"simplify\"\n\n[default.build]\n[default.build.parameters]\ncached = true\nparallel = true\n\n[default.validate]\n[default.validate.parameters]\nlint = true\n\n[default.deploy]\n[default.deploy.parameters]\ncapabilities = \"CAPABILITY_NAMED_IAM\"\nconfirm_changeset = true\nresolve_s3 = true\ns3_bucket = \"aws-sam-cli-managed-default-samclisourcebucket-7hzv9gvvanx5\"\ns3_prefix = \"simplify\"\nregion = \"eu-west-2\"\nimage_repositories = []\n\n[default.package]\n[default.package.parameters]\nresolve_s3 = true\n\n[default.sync]\n[default.sync.parameters]\nwatch = true\n\n[default.local_start_api]\n[default.local_start_api.parameters]\nwarm_containers = \"EAGER\"\n\n[default.local_start_lambda]\n[default.local_start_lambda.parameters]\nwarm_containers = \"EAGER\"\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-16T14:00:55.542Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "641320e3b89c5cbdf48bf3af",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```\n\nIf you are deploying with a custom role use the following\n\n```\n$ sam deploy --guided --capabilities CAPABILITY_NAMED_IAM\n```\n\nTo run SAM it appears to need a samconfig.toml file i.e:\n\nsimplify/samconfig.toml\n```\n# More information about the configuration file can be found here:\n# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-config.html\nversion = 0.1\n\n[default]\n[default.global]\n[default.global.parameters]\nstack_name = \"simplify\"\n\n[default.build]\n[default.build.parameters]\ncached = true\nparallel = true\n\n[default.validate]\n[default.validate.parameters]\nlint = true\n\n[default.deploy]\n[default.deploy.parameters]\ncapabilities = \"CAPABILITY_NAMED_IAM\"\nconfirm_changeset = true\nresolve_s3 = true\ns3_bucket = \"aws-sam-cli-managed-default-samclisourcebucket-7hzv9gvvanx5\"\ns3_prefix = \"simplify\"\nregion = \"eu-west-2\"\nimage_repositories = []\n\n[default.package]\n[default.package.parameters]\nresolve_s3 = true\n\n[default.sync]\n[default.sync.parameters]\nwatch = true\n\n[default.local_start_api]\n[default.local_start_api.parameters]\nwarm_containers = \"EAGER\"\n\n[default.local_start_lambda]\n[default.local_start_lambda.parameters]\nwarm_containers = \"EAGER\"\n```",
          "id": "6412db606babd39eeabfd7c4",
          "name": "SAM",
          "idShort": 146,
          "shortLink": "lMCMNsVR"
        },
        "old": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```\n\nIf you are deploying with a custom role use the following\n\n```\n$ sam deploy --guided --capabilities CAPABILITY_NAMED_IAM\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-16T14:00:03.071Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64130d8bfea11374a774b12b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```\n\nIf you are deploying with a custom role use the following\n\n```\n$ sam deploy --guided --capabilities CAPABILITY_NAMED_IAM\n```",
          "id": "6412db606babd39eeabfd7c4",
          "name": "SAM",
          "idShort": 146,
          "shortLink": "lMCMNsVR"
        },
        "old": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-16T12:37:31.485Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6412f703bfade9db321a22d0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```",
          "id": "6412db606babd39eeabfd7c4",
          "name": "SAM",
          "idShort": 146,
          "shortLink": "lMCMNsVR"
        },
        "old": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-16T11:01:23.008Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6412f6df366bfd8dd945e5fe",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```",
          "id": "6412db606babd39eeabfd7c4",
          "name": "SAM",
          "idShort": 146,
          "shortLink": "lMCMNsVR"
        },
        "old": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-16T11:00:47.493Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6412db92d0316654ed21bf6f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions",
          "id": "6412db606babd39eeabfd7c4",
          "name": "SAM",
          "idShort": 146,
          "shortLink": "lMCMNsVR"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-16T09:04:18.615Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6412db606babd39eeabfd7ce",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6412db606babd39eeabfd7c4",
          "name": "SAM",
          "idShort": 146,
          "shortLink": "lMCMNsVR"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-16T09:03:28.139Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "641093569e808e060df2309e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "To add application dependencies to layers, do the following:\n\nNodejs\n\n1. Install packages through your terminal to generate a `node_modules` folder\n2. Create a folder called `nodejs`\n3. Move the `node_modules`  fold into `nodejs` folder (`nodejs/node_modules`)\n4. zip the `nodejs` \n\n```\n$ zip -r archive.zip nodejs\n```\n5. Create a new layer\n6. Upload this zip file when creating the new layer\n7. Set Compatible architectures to `x86_64`\n8. Set Compatible runtimes to node latest supported (i.e Node.js 18.x)\n9. Add layer to Lambda function\n\nPython\n\n1. Install packages through your terminal to generate a `node_modules` folder\n2. Create a folder called `nodejs`\n3. Move the `node_modules`  fold into `nodejs` folder (`nodejs/node_modules`)\n4. rename site-packages to python\n4. zip the `nodejs` \n\n```\n$ cd virtualenvironment\n$ cd lib\n$ cd python3.8\n$ zip -r archive.zip python\n```\n5. Create a new layer\n6. Upload this zip file when creating the new layer\n7. Set Compatible architectures to `x86_64` (must be same as lambda)\n8. Set Compatible runtimes to node latest supported (i.e Python 3.8) - (must be same as lambda and dependency packages)\n9. Add layer to Lambda function (using custom layer)\n",
          "id": "640b0edac20a1d9168417223",
          "name": "Lambda Layers",
          "idShort": 145,
          "shortLink": "ZbJa16Uw"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-14T15:31:34.283Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "640b0edac20a1d916841722d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "640b0edac20a1d9168417223",
          "name": "Lambda Layers",
          "idShort": 145,
          "shortLink": "ZbJa16Uw"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-10T11:04:58.326Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "64071499dec8dfae6cf7eb4b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "In order for SQS to receive a message from SNS we need to add the following policy to `SQS` under access policy as the default policy won't allow the SNS topic to do anything with the queue\n\n```\n{\n  \"Statement\": [{\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"Service\": \"sns.amazonaws.com\"\n    },\n    \"Action\": \"sqs:SendMessage\",\n    \"Resource\": \u003Csqs arn\u003E\n    \"Condition\": {\n      \"ArnEquals\": {\n        \"aws:SourceArn\": \u003Csns arn\u003E\n      }\n    }\n  }]\n}\n```",
          "id": "640713d3098753bb0fb90919",
          "name": "SNS and SQS",
          "idShort": 144,
          "shortLink": "mZREK6Pq"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-07T10:40:25.650Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "640713d3098753bb0fb90923",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "640713d3098753bb0fb90919",
          "name": "SNS and SQS",
          "idShort": 144,
          "shortLink": "mZREK6Pq"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-07T10:37:07.252Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6400ce70d069ec4df484bc53",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "1. Create task definition with JSON\n\n```\n{\n    \"family\": \"sample-fargate\", \n    \"networkMode\": \"awsvpc\", \n    \"containerDefinitions\": [\n        {\n            \"name\": \"fargate-app\", \n            \"image\": \"public.ecr.aws/docker/library/httpd:latest\", \n            \"portMappings\": [\n                {\n                    \"containerPort\": 80, \n                    \"hostPort\": 80, \n                    \"protocol\": \"tcp\"\n                }\n            ], \n            \"essential\": true, \n            \"entryPoint\": [\n                \"sh\",\n\t\t\"-c\"\n            ], \n            \"command\": [\n                \"/bin/sh -c \\\"echo '\u003Chtml\u003E \u003Chead\u003E \u003Ctitle\u003EAmazon ECS Sample App\u003C/title\u003E \u003Cstyle\u003Ebody {margin-top: 40px; background-color: #333;} \u003C/style\u003E \u003C/head\u003E\u003Cbody\u003E \u003Cdiv style=color:white;text-align:center\u003E \u003Ch1\u003EAmazon ECS Sample App\u003C/h1\u003E \u003Ch2\u003ECongratulations!\u003C/h2\u003E \u003Cp\u003EYour application is now running on a container in Amazon ECS.\u003C/p\u003E \u003C/div\u003E\u003C/body\u003E\u003C/html\u003E' \u003E  /usr/local/apache2/htdocs/index.html && httpd-foreground\\\"\"\n            ]\n        }\n    ], \n    \"requiresCompatibilities\": [\n        \"FARGATE\"\n    ], \n    \"cpu\": \"256\", \n    \"memory\": \"512\"\n}\n```\n\n2. Create cluster\n3. Create service (found in cluster) \n    -\u003E only have to do the service section \n    -\u003E task will be created at the same time\n    -\u003E family group is the task definition name used above\n4. To get public ip\n    -\u003E Go into created cluster\n    -\u003E Select task tab\n    -\u003E click on task ID\n    -\u003E under configuration get public IP\n5. Put public IP in browser\n    -\u003E if nothing happens, check security group is allowing traffic to HTTP post 80",
          "id": "6400c948322220d36c7a173c",
          "name": "ECS on AWS Fargate",
          "idShort": 143,
          "shortLink": "igYE2Tg9"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-03-02T16:27:28.045Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6400c948322220d36c7a1746",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6400c948322220d36c7a173c",
          "name": "ECS on AWS Fargate",
          "idShort": 143,
          "shortLink": "igYE2Tg9"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-03-02T16:05:28.954Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "63fe12d259b0a9d8d6382940",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 1015807,
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands S3",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "pos": 786431
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-02-28T14:42:26.280Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "63fe12cc4d4931a3f417e429",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "63fe127d12ffbb42b9e7de2c"
          ],
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands S3",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "idLabels": []
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-02-28T14:42:20.890Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "63fe12c5c94ba7e1139cf506",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "text": "Check values for Sid is and Id and version",
        "textData": {
          "emoji": {

          }
        },
        "card": {
          "id": "63fe126ea28536fb7fd74b1c",
          "name": "S3: make bucket public",
          "idShort": 142,
          "shortLink": "9KSbnAVP"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "commentCard",
      "date": "2023-02-28T14:42:13.528Z",
      "limits": {
        "reactions": {
          "perAction": {
            "status": "ok",
            "disableAt": 900,
            "warnAt": 720
          },
          "uniquePerAction": {
            "status": "ok",
            "disableAt": 17,
            "warnAt": 14
          }
        }
      },
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "63fe12abd1af4dd9d51354ed",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "In the bucket policy put the following JSON\n\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Id\": \"Policy1453975719447\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1453975716525\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::test0022/*\"\n        }\n    ]\n}\n```",
          "id": "63fe126ea28536fb7fd74b1c",
          "name": "S3: make bucket public",
          "idShort": 142,
          "shortLink": "9KSbnAVP"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-02-28T14:41:47.115Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "63fe1275489f04bce920faf6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [],
          "id": "63fe126ea28536fb7fd74b1c",
          "name": "S3: make bucket public",
          "idShort": 142,
          "shortLink": "9KSbnAVP"
        },
        "old": {
          "idLabels": [
            "610a69cfc8246138301fa819"
          ]
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-02-28T14:40:53.616Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "63fe127332d828eba4e86204",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idLabels": [
            "610a69cfc8246138301fa819"
          ],
          "id": "63fe126ea28536fb7fd74b1c",
          "name": "S3: make bucket public",
          "idShort": 142,
          "shortLink": "9KSbnAVP"
        },
        "old": {
          "idLabels": []
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-02-28T14:40:51.296Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "63fe126ea28536fb7fd74b26",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "63fe126ea28536fb7fd74b1c",
          "name": "S3: make bucket public",
          "idShort": 142,
          "shortLink": "9KSbnAVP"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2023-02-28T14:40:46.626Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "63fe12511bf323f61a073a18",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html\n\nLists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\n\nCreate a bucket\n\n```\n$ aws s3 mb s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\nDelete a bucket\n\n```\n$ aws s3 rb s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```",
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands S3",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "desc": "Site: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html\n\nLists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2023-02-28T14:40:17.065Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6368eb2e66dc16025ada3d8f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Query:\n\n```\nfields @timestamp, @message\n  | filter strcontains(@message, \"POST /user\")\n  | sort @timestamp desc\n```",
          "id": "6368eb21226c610102be3f5c",
          "name": "CloudWatch Logs",
          "idShort": 141,
          "shortLink": "yEEgtLS0"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-11-07T11:25:34.907Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6368eb22226c610102be3f6c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6368eb21226c610102be3f5c",
          "name": "CloudWatch Logs",
          "idShort": 141,
          "shortLink": "yEEgtLS0"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-11-07T11:25:22.045Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "633408654f55ee01eb261211",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Docker leaves dangling images around that can take up your space. To clean up, use the following:\n\n`$ docker system prune -af`\n\nAnd then restart docker\n\n\nError looks as follows:\n\n```\n✖ Stack theia-osborn-computer-vision failed to deploy (1s)\nEnvironment: darwin, node 18.9.0, framework 3.15.2, plugin 6.2.2, SDK 4.3.2\nCredentials: Local, \"default\" profile\nDocs:        docs.serverless.com\nSupport:     forum.serverless.com\nBugs:        github.com/serverless/serverless/issues\n\nError:\nEncountered error during executing: docker build -t serverless-computer-vision-osborn:yolo -f /Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/computer-vision/services/yolo/Dockerfile --cache-from yolo:latest ./services/yolo/\nOutput of the command:\n#1 [internal] load build definition from Dockerfile\n#1 sha256:0e233c99cba4b8d57e96f8c904b9b5314f878124fb579246158ca2dbc864bca7\n#1 transferring dockerfile: 37B 0.0s done\n#1 DONE 0.0s\n\n#2 [internal] load .dockerignore\n#2 sha256:867fbfaf3abd8ed16e378f625431cb386e01a82431422ca07b7b1231cca6cae7\n#2 transferring context: 2B done\n#2 DONE 0.0s\n\n#3 [internal] load metadata for public.ecr.aws/lambda/python:3.9\n#3 sha256:833dd0d20048fb200a9cdd3c16ad5e1331ade0a00c362d1abd58477de594622f\n#3 ERROR: unexpected status code [manifests 3.9]: 400 Bad Request\n------\n \u003E [internal] load metadata for public.ecr.aws/lambda/python:3.9:\n------\nfailed to solve with frontend dockerfile.v0: failed to create LLB definition: unexpected status code [manifests 3.9]: 400 Bad Request\n```",
          "id": "61696cbc53726f5066b67bbb",
          "name": "To clean up after docker",
          "idShort": 42,
          "shortLink": "PYPTyZRi"
        },
        "old": {
          "desc": "Docker leaves dangling images around that can take up your space. To clean up, use the following:\n\n`$ docker system prune -af`\n\nAnd then restart docker"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-28T08:40:05.166Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6331a63d7a21c60196c71346",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Error:\n\n```\nError: EPERM: operation not permitted, unlink '/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/.build/node_modules'\n      at Object.unlinkSync (node:fs:1780:3)\n      at TypeScriptPlugin.\u003Canonymous\u003E (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:197:24)\n      at Generator.next (\u003Canonymous\u003E)\n      at /Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:8:71\n      at new Promise (\u003Canonymous\u003E)\n      at __awaiter (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:4:12)\n      at TypeScriptPlugin.copyDependencies (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:191:16)\n      at TypeScriptPlugin.\u003Canonymous\u003E (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:60:28)\n      at Generator.next (\u003Canonymous\u003E)\n      at fulfilled (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:5:58)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n     For debugging logs, run again after setting the \"SLS_DEBUG=*\" environment variable.\n```\n\n- Tnis came wih deploying theia websocket \n\n\nSOLUTION:\n\n```\nI deleted the websocket api build file that was created when trying to serverless deploy the websocket api\n```",
          "id": "6331a5ea873c1d1b948ed844",
          "name": "EPERM: operation not permitted, unlink \u003Cpath\u003E",
          "idShort": 140,
          "shortLink": "fYGrnCvD"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6331a5ddff4a2f030a90f568",
          "name": "Ungrouped Errors"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-26T13:16:45.090Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6331a5ea873c1d1b948ed84e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6331a5ea873c1d1b948ed844",
          "name": "EPERM: operation not permitted, unlink \u003Cpath\u003E",
          "idShort": 140,
          "shortLink": "fYGrnCvD"
        },
        "list": {
          "id": "6331a5ddff4a2f030a90f568",
          "name": "Ungrouped Errors"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-09-26T13:15:22.460Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6331a5ddff4a2f030a90f56c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "6331a5ddff4a2f030a90f568",
          "name": "Ungrouped Errors"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-09-26T13:15:09.706Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322f3f72bf70c03f2459e1c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Error:\n\n```\nzappa Runtime.ImportModuleError: Unable to import module 'handler': attempted relative import with no known parent package Traceback\n```\n\nSolution:\n\n",
          "id": "6322f3e5476efc0194eae49e",
          "name": "zappa Runtime.ImportModuleError: Unable to import module 'handler': attempted relative import with no known parent package Traceback",
          "idShort": 139,
          "shortLink": "8sPeyUyU"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-15T09:44:23.990Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322f3e5476efc0194eae4a8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6322f3e5476efc0194eae49e",
          "name": "zappa Runtime.ImportModuleError: Unable to import module 'handler': attempted relative import with no known parent package Traceback",
          "idShort": 139,
          "shortLink": "8sPeyUyU"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-09-15T09:44:05.091Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322db836265620070bfc28f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Error:\n\n```\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/osborncourtney/Development/DV/garage/lon-garage-meta-exp-backend/virtualenvironment/lib/python3.8/site-packages'\n```\n\nSolution:\n\nRun - \n```\n$ python3.8 -m venv virtualenvironment\n```",
          "id": "6322db426e2774011f04b808",
          "name": "FileNotFoundError: [Errno 2] No such file or directory: '/Users/osborncourtney/Development/DV/garage/lon-garage-meta-exp-backend/virtualenvironment/lib/python3.8/site-packages'",
          "idShort": 138,
          "shortLink": "dvnMS40I"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-15T08:00:03.493Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322db426e2774011f04b812",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6322db426e2774011f04b808",
          "name": "FileNotFoundError: [Errno 2] No such file or directory: '/Users/osborncourtney/Development/DV/garage/lon-garage-meta-exp-backend/virtualenvironment/lib/python3.8/site-packages'",
          "idShort": 138,
          "shortLink": "dvnMS40I"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-09-15T07:58:58.363Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322cd08c26f79033cd355c9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://florimondmanca.github.io/djangorestframework-api-key/guide/",
          "id": "6322cd046768ca01506fbbe9",
          "name": "Django Authorization",
          "idShort": 137,
          "shortLink": "QZ4ZbOhF"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-15T06:58:16.587Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322cd046768ca01506fbbf3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6322cd046768ca01506fbbe9",
          "name": "Django Authorization",
          "idShort": 137,
          "shortLink": "QZ4ZbOhF"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-09-15T06:58:12.582Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322ccdaa53c3101a9b1fc17",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "django REST framework - https://www.django-rest-framework.org/",
          "id": "6322ccc4188cd40195e512e5",
          "name": "Django Rest Frame work for API",
          "idShort": 136,
          "shortLink": "xihIDunz"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-15T06:57:30.630Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322ccc4188cd40195e512f0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6322ccc4188cd40195e512e5",
          "name": "Django Rest Frame work for API",
          "idShort": 136,
          "shortLink": "xihIDunz"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-09-15T06:57:08.894Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322cc89e2857d0146346da0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://pypi.org/project/python-dotenv/\n\nInstall dotenv\n\n```\n$ pip install python-dotenv\n```\n\nIn the file you are using the environment variables add the following:\n\n```\nimport os\nfrom pathlib import Path\nfrom dotenv import load_dotenv\n\nload_dotenv(os.path.join(BASE_DIR, '.env'))\n```\n\nEnvironment variables will look as follows:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': os.getenv('DATABASE_NAME'),\n        'USER': os.getenv('DATABASE_USER'),\n        'PASSWORD': os.getenv('DATABASE_PASSWORD'),\n        'HOST': os.getenv('DATABASE_HOST'),\n        'PORT': os.getenv('DATABASE_PORT') and int(os.getenv('DATABASE_PORT'))\n    }\n}\n```\n\nAdd variables and values to .env\n\n```\nDATABASE_NAME=name_db\nDATABASE_USER=name_root_user\nDATABASE_PASSWORD=password\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\n```\n",
          "id": "6322cbd05c777a00df0bb5d6",
          "name": "Setting up Environment variables & database using dotenv",
          "idShort": 135,
          "shortLink": "n1Bq5xU9"
        },
        "old": {
          "desc": "https://alicecampkin.medium.com/how-to-set-up-environment-variables-in-django-f3c4db78c55f\n\nInstall django-environ\n\n```\n$ pip install django-environ\n```\n\nIn the file you are using the environment variables add the following:\n\n```\nimport os\nfrom pathlib import Path\nfrom dotenv import load_dotenv\n\nload_dotenv(os.path.join(BASE_DIR, '.env'))\n```\n\nEnvironment variables will look as follows:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': os.getenv('DATABASE_NAME'),\n        'USER': os.getenv('DATABASE_USER'),\n        'PASSWORD': os.getenv('DATABASE_PASSWORD'),\n        'HOST': os.getenv('DATABASE_HOST'),\n        'PORT': os.getenv('DATABASE_PORT') and int(os.getenv('DATABASE_PORT'))\n    }\n}\n```\n\nAdd variables and values to .env\n\n```\nDATABASE_NAME=name_db\nDATABASE_USER=name_root_user\nDATABASE_PASSWORD=password\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-15T06:56:09.526Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322cc74953f9c005b612ddf",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Setting up Environment variables & database using dotenv",
          "id": "6322cbd05c777a00df0bb5d6",
          "idShort": 135,
          "shortLink": "n1Bq5xU9"
        },
        "old": {
          "name": "Setting up Environment variables & database using dot-env"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-15T06:55:48.056Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322cc3e460d84036bc19940",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://alicecampkin.medium.com/how-to-set-up-environment-variables-in-django-f3c4db78c55f\n\nInstall django-environ\n\n```\n$ pip install django-environ\n```\n\nIn the file you are using the environment variables add the following:\n\n```\nimport os\nfrom pathlib import Path\nfrom dotenv import load_dotenv\n\nload_dotenv(os.path.join(BASE_DIR, '.env'))\n```\n\nEnvironment variables will look as follows:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': os.getenv('DATABASE_NAME'),\n        'USER': os.getenv('DATABASE_USER'),\n        'PASSWORD': os.getenv('DATABASE_PASSWORD'),\n        'HOST': os.getenv('DATABASE_HOST'),\n        'PORT': os.getenv('DATABASE_PORT') and int(os.getenv('DATABASE_PORT'))\n    }\n}\n```\n\nAdd variables and values to .env\n\n```\nDATABASE_NAME=name_db\nDATABASE_USER=name_root_user\nDATABASE_PASSWORD=password\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\n```\n",
          "id": "6322cbd05c777a00df0bb5d6",
          "name": "Setting up Environment variables & database using dot-env",
          "idShort": 135,
          "shortLink": "n1Bq5xU9"
        },
        "old": {
          "desc": "https://alicecampkin.medium.com/how-to-set-up-environment-variables-in-django-f3c4db78c55f\n\nInstall django-environ\n\n```\n$ pip install django-environ\n```\n\nIn the file you are using the environment variables add the following:\n\n```\nimport environ\nenv = environ.Env()\nenviron.Env.read_env()\n```\n\nEnvironment variables will look as follows:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': env('DATABASE_NAME'),\n        'USER': env('DATABASE_USER'),\n        'PASSWORD': env('DATABASE_PASSWORD'),\n        'HOST': env('DATABASE_HOST'),\n        'PORT': env('DATABASE_PORT')\n    }\n}\n```\n\nAdd variables and values to .env\n\n```\nDATABASE_NAME=name_db\nDATABASE_USER=name_root_user\nDATABASE_PASSWORD=password\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-15T06:54:54.019Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322cbd05c777a00df0bb5e5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6322cbd05c777a00df0bb5d6",
          "name": "Setting up Environment variables & database using dot-env",
          "idShort": 135,
          "shortLink": "n1Bq5xU9"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "cardSource": {
          "id": "61f3c167940cca51160d2e8d",
          "name": "Setting up Environment variables & database using django-environ",
          "idShort": 92,
          "shortLink": "5BjIFcvy"
        }
      },
      "appCreator": null,
      "type": "copyCard",
      "date": "2022-09-15T06:53:04.621Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6322cbc05aca2a007e753db4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Setting up Environment variables & database using django-environ",
          "id": "61f3c167940cca51160d2e8d",
          "idShort": 92,
          "shortLink": "5BjIFcvy"
        },
        "old": {
          "name": "Setting up Environment variables & database"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-15T06:52:48.185Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6321f53d1386f10045d6bd65",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Removing network interfaces (Cannot delete VPC)",
          "id": "620e808340f3900d2851fc65",
          "idShort": 125,
          "shortLink": "jhNmtkmz"
        },
        "old": {
          "name": "Removing network interfaces"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-09-14T15:37:33.342Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6270c90a7b35e77fc56a7f02",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "curl -X GET -H \"Authorization: Bearer eyJraWQiOiJkX3dtY29GQXhLRURGV21SUFNBNHNkSlFsQ0R4UzhNUHNyMW1CYjY5NHdBIiwiYWxnIjoiUlMyNTYifQ.eyJ2ZXIiOjEsImp0aSI6IkFULnpmTDdjVUZRcVQ0M2hpVkdxUGFQWi1DWFVDTU9YX1NYYXRmaTVVSHZpYnMiLCJpc3MiOiJodHRwczovL2JjZ2Rldi5va3RhcHJldmlldy5jb20vb2F1dGgyL2RlZmF1bHQiLCJhdWQiOiJhcGk6Ly9kZWZhdWx0IiwiaWF0IjoxNjUxMjIyMTQ2LCJleHAiOjE2NTEyMjU3NDYsImNpZCI6IjBvYTE1eDNjd20wcFZMTTc3MGg4IiwidWlkIjoiMDB1eWJvZjllbGRrdmxHQUIwaDciLCJzY3AiOlsicHJvZmlsZSIsImVtYWlsIiwib3BlbmlkIl0sImF1dGhfdGltZSI6MTY1MTIxNTAwMSwic3ViIjoiQ291cnRuZXkuT3Nib3JuQGJjZ2R2LmNvbSIsIkhSSUQiOiI0MDE3ODUiLCJlbWFpbCI6IkNvdXJ0bmV5Lk9zYm9ybkBiY2dkdi5jb20ifQ.XPxM979MKcsMRpxY0n4ub7lvpyqMu4VEqY-OYRYL1CUT_AtlkAgXBG3-i58Su37RIiT9wsqtxRN02mdmnMza_y9Kold6VIoM7kokWjqEpbSxPr0XrMGT-JG1wcQ-ljGW_8vK8TBBimXdVOClh4vw0l5pDvhaZxmUj_tlj8U-8nYQWtTykLdUCSN_9iP7x3Iol_-hnaAAAXS_fbIjxHFov-vOxQeuPRY8FHQt2m9pNFrV1EfeOPKcEuz4aU4t_RjReUsu-DWfinjTPOSe0yXieLHTNwY7uOw0Xel5BDPrCOV8A9KrWREWu0_Yi79ZZBc26aWF6LCJvphfsl0vgEyErQ\" \"https://bcgdev.oktapreview.com/oauth2/default/v1/userinfo\"",
          "id": "6270c905d5794930788ce567",
          "name": "Curl request",
          "idShort": 134,
          "shortLink": "dYSX7Xah"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-05-03T06:17:46.048Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6270c906d5794930788ce56f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6270c905d5794930788ce567",
          "name": "Curl request",
          "idShort": 134,
          "shortLink": "dYSX7Xah"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-05-03T06:17:42.001Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6267daed9f2ad27c4fa7225a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "1. zappa undeploy production\n2. Go to terraform cloud -\u003E settings -\u003E destruction and deletion -\u003E click button `queue destroy plan` -\u003E destroy the infrastructure",
          "id": "6267da0944c47817fef50d8e",
          "name": "Django + Zappa + AWS",
          "idShort": 133,
          "shortLink": "szqrqMxZ"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6267d9ffc041996663dbd2f4",
          "name": "Deleting an app"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-04-26T11:43:41.134Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6267da0944c47817fef50d97",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6267da0944c47817fef50d8e",
          "name": "Django + Zappa + AWS",
          "idShort": 133,
          "shortLink": "szqrqMxZ"
        },
        "list": {
          "id": "6267d9ffc041996663dbd2f4",
          "name": "Deleting an app"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-04-26T11:39:53.323Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6267d9ffc041996663dbd2fa",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "6267d9ffc041996663dbd2f4",
          "name": "Deleting an app"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-04-26T11:39:43.227Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6260f7610309388a15e18841",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "If you have the file open on your screen but need to find the path to access in the terminal:\n\n- Drag and drop the file into your terminal\n\nSource \n\nhttps://askubuntu.com/questions/23413/how-can-you-quickly-get-the-complete-path-to-a-file-for-use-in-terminal",
          "id": "6260f732b3ea30708129fb6f",
          "name": "Find the path of a file",
          "idShort": 132,
          "shortLink": "kms4r11u"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-04-21T06:19:13.439Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6260f732b3ea30708129fb78",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6260f732b3ea30708129fb6f",
          "name": "Find the path of a file",
          "idShort": 132,
          "shortLink": "kms4r11u"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-04-21T06:18:26.470Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "626018a69dc39e62d6f3e650",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Saving images to S3 Django Admin + VPC",
          "id": "626018316805976168701de1",
          "idShort": 131,
          "shortLink": "zlHTy1QO"
        },
        "old": {
          "name": "Saving images to S3 Django Admin + RDS + VPC"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-04-20T14:28:54.700Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "626018a02fe2e3076571263e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Saving images to S3 Django Admin + RDS + VPC",
          "id": "626018316805976168701de1",
          "idShort": 131,
          "shortLink": "zlHTy1QO"
        },
        "old": {
          "name": "Saving images to S3 Django Admin + VPC"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-04-20T14:28:48.981Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "626018945862fa1cc89c4381",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\ntime out\n\n\n## VPC Endpoint for S3:\n\nhttps://aws.amazon.com/blogs/aws/new-vpc-endpoint-for-amazon-s3/\nhttps://docs.aws.amazon.com/vpc/latest/privatelink/vpce-gateway.html#vpc-endpoints-security\n\n\n",
          "id": "626018316805976168701de1",
          "name": "Saving images to S3 Django Admin + VPC",
          "idShort": 131,
          "shortLink": "zlHTy1QO"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-04-20T14:28:36.618Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62601858bf9b031271af1757",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Saving images to S3 Django Admin + VPC",
          "id": "626018316805976168701de1",
          "idShort": 131,
          "shortLink": "zlHTy1QO"
        },
        "old": {
          "name": "VPC Endpoint for S3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-04-20T14:27:36.989Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "626018316805976168701deb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "626018316805976168701de1",
          "name": "VPC Endpoint for S3",
          "idShort": 131,
          "shortLink": "zlHTy1QO"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-04-20T14:26:57.176Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "623441bf44862929918f4ad9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Useful link: \n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```",
          "id": "62335e70cd3e3f245f60cbbd",
          "name": "Import Export Resources",
          "idShort": 130,
          "shortLink": "VcVI8qIN"
        },
        "old": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n\nThe following code allows you to add and update fields the have been imported through import/export\n\nNote: ID is Primary Key\n\nInstead of having to use the primary key for adding and updating rows and their fields you can use strings\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    # ForeignKey Field\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    # ForeignKey Field\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    # Many 2 Many Field\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    # Many 2 Many Field\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    # Rows don't have an ID as this was not added to the spread sheet even \n    when the data was in the database. I therefore looked it up based on it's \n    name which is unique and got the id from there and added it to the data.\n    # This does me though that the name (or in this case tech_use_case) \n     cannot be updated in the spread sheet but instead in the database\n    \ndef before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-18T08:24:31.393Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6233600e45e05b776728b9c7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n\nThe following code allows you to add and update fields the have been imported through import/export\n\nNote: ID is Primary Key\n\nInstead of having to use the primary key for adding and updating rows and their fields you can use strings\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    # ForeignKey Field\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    # ForeignKey Field\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    # Many 2 Many Field\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    # Many 2 Many Field\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    # Rows don't have an ID as this was not added to the spread sheet even \n    when the data was in the database. I therefore looked it up based on it's \n    name which is unique and got the id from there and added it to the data.\n    # This does me though that the name (or in this case tech_use_case) \n     cannot be updated in the spread sheet but instead in the database\n    \ndef before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```",
          "id": "62335e70cd3e3f245f60cbbd",
          "name": "Import Export Resources",
          "idShort": 130,
          "shortLink": "VcVI8qIN"
        },
        "old": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n\nThe following code allows you to add and update fields the have been imported through import/export\n\nNote: ID is Primary Key\n\nInstead of having to use the primary key for adding and updating rows and their fields you can use strings\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    # ForeignKey Field\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    # ForeignKey Field\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    # Many 2 Many Field\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    # Many 2 Many Field\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    # Rows don't have an ID as this was not added to the spread sheet even when the data was in the database. I therefore looked it up based on it's name which is unique and got the id from there and added it to the data.\n# This does me though that the name (or in this case tech_use_case) cannot be updated in the spread sheet but instead in the database\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-17T16:21:34.465Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62335ff9e35b48613146bad9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n\nThe following code allows you to add and update fields the have been imported through import/export\n\nNote: ID is Primary Key\n\nInstead of having to use the primary key for adding and updating rows and their fields you can use strings\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    # ForeignKey Field\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    # ForeignKey Field\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    # Many 2 Many Field\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    # Many 2 Many Field\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    # Rows don't have an ID as this was not added to the spread sheet even when the data was in the database. I therefore looked it up based on it's name which is unique and got the id from there and added it to the data.\n# This does me though that the name (or in this case tech_use_case) cannot be updated in the spread sheet but instead in the database\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```",
          "id": "62335e70cd3e3f245f60cbbd",
          "name": "Import Export Resources",
          "idShort": 130,
          "shortLink": "VcVI8qIN"
        },
        "old": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n\nThe following code allows you to add and update fields the have been imported through import/export\n\nNote: ID is Primary Key\n\nInstead of having to use the primary key for adding and updating rows and their fields you can use strings\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    # ForeignKey Field\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    # ForeignKey Field\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    # Many 2 Many Field\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    # Many 2 Many Field\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-17T16:21:13.166Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62335f690d7e3f3493f0442a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n\nThe following code allows you to add and update fields the have been imported through import/export\n\nNote: ID is Primary Key\n\nInstead of having to use the primary key for adding and updating rows and their fields you can use strings\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    # ForeignKey Field\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    # ForeignKey Field\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    # Many 2 Many Field\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    # Many 2 Many Field\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```",
          "id": "62335e70cd3e3f245f60cbbd",
          "name": "Import Export Resources",
          "idShort": 130,
          "shortLink": "VcVI8qIN"
        },
        "old": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    # ForeignKey Field\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    # ForeignKey Field\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    # Many 2 Many Field\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    # Many 2 Many Field\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-17T16:18:49.500Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62335f0671efa6735e07ca4f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    # ForeignKey Field\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    # ForeignKey Field\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    # Many 2 Many Field\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    # Many 2 Many Field\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```",
          "id": "62335e70cd3e3f245f60cbbd",
          "name": "Import Export Resources",
          "idShort": 130,
          "shortLink": "VcVI8qIN"
        },
        "old": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-17T16:17:10.813Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62335edb17f9fa1fd2a3d26d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    # ForeignKey Field\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```",
          "id": "62335e70cd3e3f245f60cbbd",
          "name": "Import Export Resources",
          "idShort": 130,
          "shortLink": "VcVI8qIN"
        },
        "old": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-17T16:16:27.654Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62335ebaf85cf57ca4d96613",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Useful link: https://blog.devgenius.io/django-import-export-tricks-tips-562e45da35b6\n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```",
          "id": "62335e70cd3e3f245f60cbbd",
          "name": "Import Export Resources",
          "idShort": 130,
          "shortLink": "VcVI8qIN"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-17T16:15:54.438Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62335e70cd3e3f245f60cbc7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "62335e70cd3e3f245f60cbbd",
          "name": "Import Export Resources",
          "idShort": 130,
          "shortLink": "VcVI8qIN"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-03-17T16:14:40.718Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "623323a0b9bd1808c4adabde",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nclass Meta:\n        verbose_name = \"Universe\"\n        verbose_name_plural = \"Universes\"\n        ordering = [\"name\"]\n```\n\nThis appears to prevent flaky tests",
          "id": "623323851ed560295b86e11e",
          "name": "Add ordering fields to each model",
          "idShort": 129,
          "shortLink": "mnFnK4c8"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-17T12:03:44.498Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "623323851ed560295b86e128",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "623323851ed560295b86e11e",
          "name": "Add ordering fields to each model",
          "idShort": 129,
          "shortLink": "mnFnK4c8"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-03-17T12:03:17.216Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "622f83e7871aa75360649cb2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Have the model that is the through field model in the same file as the group model\n\nhttps://docs.djangoproject.com/en/4.0/topics/db/models/#extra-fields-on-many-to-many-relationships",
          "id": "622f83aa4255072ae852e7e4",
          "name": "Through field",
          "idShort": 128,
          "shortLink": "Jm3BUiAd"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-14T18:05:27.373Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "622f83aa4255072ae852e7ee",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "622f83aa4255072ae852e7e4",
          "name": "Through field",
          "idShort": 128,
          "shortLink": "Jm3BUiAd"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-03-14T18:04:26.036Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "622f33b6745b2a4a13eeb22c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\n```\n RuntimeWarning: Got an error checking a consistent migration history performed for database connection 'default': connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n```\n\nSOLUTION:\n\nRun:\n\n```\nbrew services start postgres\n```",
          "id": "622f3095edf5fc3b64b1a994",
          "name": "Error: Is the server running on that host and accepting TCP/IP connections?",
          "idShort": 127,
          "shortLink": "KKfGOJrJ"
        },
        "old": {
          "desc": "ERROR:\n\n```\n RuntimeWarning: Got an error checking a consistent migration history performed for database connection 'default': connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n```\n\nSOLUTION:"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-14T12:23:18.615Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "622f30ae383c6c241775aca7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\n```\n RuntimeWarning: Got an error checking a consistent migration history performed for database connection 'default': connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n```\n\nSOLUTION:",
          "id": "622f3095edf5fc3b64b1a994",
          "name": "Error: Is the server running on that host and accepting TCP/IP connections?",
          "idShort": 127,
          "shortLink": "KKfGOJrJ"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-03-14T12:10:22.455Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "622f3095edf5fc3b64b1a99e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "622f3095edf5fc3b64b1a994",
          "name": "Error: Is the server running on that host and accepting TCP/IP connections?",
          "idShort": 127,
          "shortLink": "KKfGOJrJ"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-03-14T12:09:57.717Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "621dde422bec952383aa2bc8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "idMember": "607d3a850d54e983ddb49f9b",
        "card": {
          "id": "610a7617e546015b3544c19f",
          "name": "Opening Config and Credentials Files",
          "idShort": 7,
          "shortLink": "Yc8mm5tJ"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "member": {
          "id": "607d3a850d54e983ddb49f9b",
          "name": "Osborn, Courtney"
        }
      },
      "appCreator": null,
      "type": "addMemberToCard",
      "date": "2022-03-01T08:50:10.758Z",
      "limits": null,
      "member": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      },
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62160602fe791f0e7c024ad7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "\"profile_name\": \"your-profile-name\", // AWS profile credentials to use. Default 'default'. Removing this setting will use the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables instead.\nhttps://github.com/zappa/Zappa",
          "id": "621605c6a44653541d920e0c",
          "name": "CI/CD Zappa",
          "idShort": 126,
          "shortLink": "0hgooqVi"
        },
        "old": {
          "desc": "\"profile_name\": \"your-profile-name\", // AWS profile credentials to use. Default 'default'. Removing this setting will use the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables instead."
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-23T10:01:38.204Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "621605e0e9fe265fa0709da6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "\"profile_name\": \"your-profile-name\", // AWS profile credentials to use. Default 'default'. Removing this setting will use the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables instead.",
          "id": "621605c6a44653541d920e0c",
          "name": "CI/CD Zappa",
          "idShort": 126,
          "shortLink": "0hgooqVi"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-23T10:01:04.454Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "621605c6a44653541d920e15",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "621605c6a44653541d920e0c",
          "name": "CI/CD Zappa",
          "idShort": 126,
          "shortLink": "0hgooqVi"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-23T10:00:38.485Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620f5090cbe4a34b3256f62b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "EC2 -\u003E Network interfaces -\u003E eni-0105f8a40d6efd5b8\n\nIn this look at description to see what the network interface is connected to -\u003E it has been a lambda for me \n\n```\nDescription\nAWS Lambda VPC ENI-lon-tech-universe-dev2-dev2-5683e9b4-f3b9-46de-be34-f83d19c16d3c\n```\n\nUndeploy zappa\n\n```\nzappa undeploy dev\n```\n\nThis will delete the lambda which means the VPC can be deleted",
          "id": "620e808340f3900d2851fc65",
          "name": "Removing network interfaces",
          "idShort": 125,
          "shortLink": "jhNmtkmz"
        },
        "old": {
          "desc": "EC2 -\u003E Network interfaces -\u003E eni-0105f8a40d6efd5b8\n\nIn this look at description to see what the network interface is connected to -\u003E it has been a lambda for me \n\n```\nDescription\nAWS Lambda VPC ENI-lon-tech-universe-dev2-dev2-5683e9b4-f3b9-46de-be34-f83d19c16d3c\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-18T07:53:52.557Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620e80e6d3b03b2a292a7130",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "EC2 -\u003E Network interfaces -\u003E eni-0105f8a40d6efd5b8\n\nIn this look at description to see what the network interface is connected to -\u003E it has been a lambda for me \n\n```\nDescription\nAWS Lambda VPC ENI-lon-tech-universe-dev2-dev2-5683e9b4-f3b9-46de-be34-f83d19c16d3c\n```",
          "id": "620e808340f3900d2851fc65",
          "name": "Removing network interfaces",
          "idShort": 125,
          "shortLink": "jhNmtkmz"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-17T17:07:50.753Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620e808340f3900d2851fc6e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "620e808340f3900d2851fc65",
          "name": "Removing network interfaces",
          "idShort": 125,
          "shortLink": "jhNmtkmz"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-17T17:06:11.120Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620e0e426cf310743cb4f10a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\n```\nTraceback (most recent call last):\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 3422, in handle\n    sys.exit(cli.handle())\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 588, in handle\n    self.dispatch_command(self.command, stage)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 619, in dispatch_command\n    self.load_settings(self.vargs.get(\"settings_file\"))\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 2619, in load_settings\n    self.zappa = Zappa(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/core.py\", line 346, in __init__\n    self.load_credentials(boto_session, profile_name)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/core.py\", line 3573, in load_credentials\n    self.boto_session = boto3.Session(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/boto3/session.py\", line 80, in __init__\n    self._setup_loader()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/boto3/session.py\", line 120, in _setup_loader\n    self._loader = self._session.get_component('data_loader')\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 714, in get_component\n    return self._components.get_component(name)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 991, in get_component\n    self._components[name] = factory()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 160, in \u003Clambda\u003E\n    lambda: create_loader(self.get_config_variable('data_path')))\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 267, in get_config_variable\n    return self.get_component('config_store').get_config_variable(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 374, in get_config_variable\n    return provider.provide()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 567, in provide\n    value = provider.provide()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 655, in provide\n    scoped_config = self._session.get_scoped_config()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 367, in get_scoped_config\n    raise ProfileNotFound(profile=profile_name)\nbotocore.exceptions.ProfileNotFound: The config profile (lon-tech-universe-dev2) could not be found\n```\n\nSOULUTION:\n\nhttps://stackoverflow.com/questions/34134879/aws-the-config-profile-myname-could-not-be-found\n\nJust add the profile to your credentials file:\n\n```\nopen ~/.aws/credentials\n```",
          "id": "620e0de1e661db6de948e37e",
          "name": "Error: The config profile (lon-tech-universe-dev2) could not be found",
          "idShort": 124,
          "shortLink": "CtgyqbR8"
        },
        "old": {
          "desc": "ERROR:\n\n```\nTraceback (most recent call last):\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 3422, in handle\n    sys.exit(cli.handle())\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 588, in handle\n    self.dispatch_command(self.command, stage)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 619, in dispatch_command\n    self.load_settings(self.vargs.get(\"settings_file\"))\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 2619, in load_settings\n    self.zappa = Zappa(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/core.py\", line 346, in __init__\n    self.load_credentials(boto_session, profile_name)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/core.py\", line 3573, in load_credentials\n    self.boto_session = boto3.Session(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/boto3/session.py\", line 80, in __init__\n    self._setup_loader()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/boto3/session.py\", line 120, in _setup_loader\n    self._loader = self._session.get_component('data_loader')\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 714, in get_component\n    return self._components.get_component(name)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 991, in get_component\n    self._components[name] = factory()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 160, in \u003Clambda\u003E\n    lambda: create_loader(self.get_config_variable('data_path')))\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 267, in get_config_variable\n    return self.get_component('config_store').get_config_variable(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 374, in get_config_variable\n    return provider.provide()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 567, in provide\n    value = provider.provide()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 655, in provide\n    scoped_config = self._session.get_scoped_config()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 367, in get_scoped_config\n    raise ProfileNotFound(profile=profile_name)\nbotocore.exceptions.ProfileNotFound: The config profile (lon-tech-universe-dev2) could not be found\n```\n\nSOULUTION:\n\nhttps://stackoverflow.com/questions/34134879/aws-the-config-profile-myname-could-not-be-found\n\nJust add the profile to your credentials file:\n\n```\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-17T08:58:42.216Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620e0e1f20b8f570cd9e7818",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\n```\nTraceback (most recent call last):\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 3422, in handle\n    sys.exit(cli.handle())\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 588, in handle\n    self.dispatch_command(self.command, stage)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 619, in dispatch_command\n    self.load_settings(self.vargs.get(\"settings_file\"))\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 2619, in load_settings\n    self.zappa = Zappa(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/core.py\", line 346, in __init__\n    self.load_credentials(boto_session, profile_name)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/core.py\", line 3573, in load_credentials\n    self.boto_session = boto3.Session(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/boto3/session.py\", line 80, in __init__\n    self._setup_loader()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/boto3/session.py\", line 120, in _setup_loader\n    self._loader = self._session.get_component('data_loader')\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 714, in get_component\n    return self._components.get_component(name)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 991, in get_component\n    self._components[name] = factory()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 160, in \u003Clambda\u003E\n    lambda: create_loader(self.get_config_variable('data_path')))\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 267, in get_config_variable\n    return self.get_component('config_store').get_config_variable(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 374, in get_config_variable\n    return provider.provide()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 567, in provide\n    value = provider.provide()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 655, in provide\n    scoped_config = self._session.get_scoped_config()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 367, in get_scoped_config\n    raise ProfileNotFound(profile=profile_name)\nbotocore.exceptions.ProfileNotFound: The config profile (lon-tech-universe-dev2) could not be found\n```\n\nSOULUTION:\n\nhttps://stackoverflow.com/questions/34134879/aws-the-config-profile-myname-could-not-be-found\n\nJust add the profile to your credentials file:\n\n```\n```",
          "id": "620e0de1e661db6de948e37e",
          "name": "Error: The config profile (lon-tech-universe-dev2) could not be found",
          "idShort": 124,
          "shortLink": "CtgyqbR8"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-17T08:58:07.188Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620e0de1e661db6de948e387",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "620e0de1e661db6de948e37e",
          "name": "Error: The config profile (lon-tech-universe-dev2) could not be found",
          "idShort": 124,
          "shortLink": "CtgyqbR8"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-17T08:57:05.878Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620dff9d030564214a8510d3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://www.codingforentrepreneurs.com/blog/rds-database-serverless-django-zappa-aws-lambda\n\nTo configure zappa_settings.json: `zappa init`",
          "id": "620dff3c1b23498e000cca6d",
          "name": "Zappa Setup",
          "idShort": 123,
          "shortLink": "x9Y4FI1B"
        },
        "old": {
          "desc": "Site: https://www.codingforentrepreneurs.com/blog/rds-database-serverless-django-zappa-aws-lambda"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-17T07:56:13.528Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620dff42fcf76f4b207ebdd4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://www.codingforentrepreneurs.com/blog/rds-database-serverless-django-zappa-aws-lambda",
          "id": "620dff3c1b23498e000cca6d",
          "name": "Zappa Setup",
          "idShort": 123,
          "shortLink": "x9Y4FI1B"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-17T07:54:42.940Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620dff3de033fb7e31ad3f87",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 16383.75,
          "id": "620dff3c1b23498e000cca6d",
          "name": "Zappa Setup",
          "idShort": 123,
          "shortLink": "x9Y4FI1B"
        },
        "old": {
          "pos": 327679
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-17T07:54:37.548Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620dff3c1b23498e000cca76",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "620dff3c1b23498e000cca6d",
          "name": "Zappa Setup",
          "idShort": 123,
          "shortLink": "x9Y4FI1B"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-17T07:54:36.086Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62068edf947c942ce2798b6b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 49151.25,
          "id": "62068ec3c7283e7a993731a8",
          "name": "Terraform Readme",
          "idShort": 122,
          "shortLink": "LJqdHYUP"
        },
        "old": {
          "pos": 983039
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-11T16:29:19.484Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62068edbde798169ab25642c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 32767.5,
          "id": "62068e6d2726676743539177",
          "name": "Terraform Commands (Make file)",
          "idShort": 121,
          "shortLink": "u9cwfZi2"
        },
        "old": {
          "pos": 917503
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-11T16:29:15.587Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62068ed46d881f8bd8034974",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# Infrastructure\n\n- This application uses AWS infrastructure which is built using Terraform\n\n## Prerequisite\n\n- Terraform\n\nTo install the above through Homebrew, install [Homebrew](https://brew.sh/) and run the following:\n\n```\n$ make install-prerequisites\n```\n\n## Developing Locally\n\n### Setup\n\n- In order to deploy the infrastructure you will need to set up your aws_access_key_id, aws_secret_access_key in your aws credentials file.\n\t- Use your own AWS credentials in order to do this.\n\nopen ~/.aws/credentials\n```\n[theia-surnamename] # i.e theia-doejohn\naws_access_key_id = \u003Caws access key id\u003E\naws_secret_access_key = \u003Caws secret access key\u003E\n```\n\n- You will also need to comment out line 2-9 in the infrastructure/main.tf file as this prevents Terraform being deployed locally\n\n### Commands\n\n#### Terraform Init\n\n- Prepare your working directory for other commands\n\n```\n$ make init\n```\n\n#### Terraform Reformat\n\n- Reformat your configuration in the standard style\n\n```\n$ make fmt\n```\n\n#### Terrafrom Validate\n\n- Check whether the configuration is valid\n\n```\n$ make validate\n```\n\n#### Terraform Plan\n\n- Show changes required by the current configuration\n\n```\n$ make plan ws_key=\u003Cyour secret key\u003E http_key=\u003Cyour secret key\u003E\n```\ne.g `$ make plan ws_key=123 http_key=123`\n\n\n#### Terraform Apply\n\n- Applies changes to create or updates infrastructure\n\n```\n$ make deploy ws_key=\u003Cyour secret key\u003E http_key=\u003Cyour secret key\u003E\n```\ne.g `$ make deploy ws_key=123 http_key=123`\n\n\n#### Destroy Terraform\n\n- Destroys all previously-created infrastructure\n\n**NOTE**: Empty S3 buckets before destroying the infrastructure otherwise terraform will error.\n\n```\n$ make destroy ws_key=\u003Cyour secret key\u003E http_key=\u003Cyour secret key\u003E\n```\ne.g `$ make destroy ws_key=123 http_key=123`\n\n\n## Deployment\n\n- Staging and production environments are deployed using terraform cloud and should NOT be done locally\n",
          "id": "62068ec3c7283e7a993731a8",
          "name": "Terraform Readme",
          "idShort": 122,
          "shortLink": "LJqdHYUP"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-11T16:29:08.325Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62068ec3c7283e7a993731b1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "62068ec3c7283e7a993731a8",
          "name": "Terraform Readme",
          "idShort": 122,
          "shortLink": "LJqdHYUP"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-11T16:28:51.540Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62068ea669e16e0e76353f45",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Terraform Commands (Make file)",
          "id": "62068e6d2726676743539177",
          "idShort": 121,
          "shortLink": "u9cwfZi2"
        },
        "old": {
          "name": "Terraform Commands"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-11T16:28:22.525Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62068ea1492309703b590cb2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "FILE_PATH=$(shell pwd)\nSPLIT_PATH=$(subst /, ,$(FILE_PATH))\nUSERS_NAME=$(word 2,$(SPLIT_PATH))\nWEBSOCKET_AUTHORIZATION_KEY=$(ws_key)\nHTTP_AUTHORIZATION_KEY=$(http_key)\n\ninstall-prerequisites:\n\tbrew install terraform@1.0\n\n# Init Infrastructure\n\ninit:\n\tterraform init\n\n# Reformat Infrastructure\n\nfmt:\n\tterraform fmt\n\n# Validate Infrastructure\n\nvalidate:\n\tterraform validate\n\n# Plan Infrastructure\n\nplan:\n\tTF_VAR_WEBSOCKET_AUTHORIZATION_SECRET_VALUE='${WEBSOCKET_AUTHORIZATION_KEY}' \\\n\tTF_VAR_HTTP_AUTHORIZATION_SECRET_VALUE='${HTTP_AUTHORIZATION_KEY}' \\\n\tTF_VAR_ENV='${USERS_NAME}' terraform plan\n\n# Deploy Infrastructure\n\ndeploy:\n\tTF_VAR_WEBSOCKET_AUTHORIZATION_SECRET_VALUE='${WEBSOCKET_AUTHORIZATION_KEY}' \\\n\tTF_VAR_HTTP_AUTHORIZATION_SECRET_VALUE='${HTTP_AUTHORIZATION_KEY}' \\\n\tTF_VAR_ENV='${USERS_NAME}' terraform apply\n\n# Destroy Infrastructure\n\ndestroy:\n\tTF_VAR_WEBSOCKET_AUTHORIZATION_SECRET_VALUE='${WEBSOCKET_AUTHORIZATION_KEY}' \\\n\tTF_VAR_HTTP_AUTHORIZATION_SECRET_VALUE='${HTTP_AUTHORIZATION_KEY}' \\\n\tTF_VAR_ENV='${USERS_NAME}' terraform destroy",
          "id": "62068e6d2726676743539177",
          "name": "Terraform Commands",
          "idShort": 121,
          "shortLink": "u9cwfZi2"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-11T16:28:17.714Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62068e6d2726676743539180",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "62068e6d2726676743539177",
          "name": "Terraform Commands",
          "idShort": 121,
          "shortLink": "u9cwfZi2"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-11T16:27:25.487Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6204cbea8cefea6b4a03e015",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "###** To see all third party libraries in the virtual environment**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\n### **Installed third party packages along with their version numbers**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\n### **Add output to requirements.txt**\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\n### Install Dependencies\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip install -r requirements.txt\n```\n**e.g** (venv) $ pip install -r requirements.txt",
          "id": "620272b3a286b78031ba114e",
          "name": "Requirement.txt",
          "idShort": 113,
          "shortLink": "XbFngdsh"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-10T08:25:14.437Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6204ca1cd1953d4fc0eb01a7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html\n\nLists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n",
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands S3",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "desc": "Site: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html\n\nLists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\nCopy from one bucket and move to another\n\n```\n$ aws s3 cp s3://lon-garage-meta-exp-zappa-static-development s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-10T08:17:32.593Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6204c7395be6757770e995bf",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html\n\nLists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\nCopy from one bucket and move to another\n\n```\n$ aws s3 cp s3://lon-garage-meta-exp-zappa-static-development s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```",
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands S3",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "desc": "Site: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html\n\nLists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\nCopy from one bucket and move to another\n\n```\n$ aws s3 cp s3://bucket-name/example s3://my-bucket/\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-10T08:05:13.943Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6204c71bfb483661f7e3c451",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html\n\nLists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\nCopy from one bucket and move to another\n\n```\n$ aws s3 cp s3://bucket-name/example s3://my-bucket/\n```",
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands S3",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "desc": "Lists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\nCopy from one bucket and move to another\n\n```\n$ aws s3 cp s3://bucket-name/example s3://my-bucket/\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-10T08:04:43.265Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6204c70f89617f4efc1cd7a8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "CI commands S3",
          "id": "6204c65b92b0645aeca07de2",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "name": "CI commands"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-10T08:04:31.985Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6204c70b321daa1d6acad92b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Lists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\nCopy from one bucket and move to another\n\n```\n$ aws s3 cp s3://bucket-name/example s3://my-bucket/\n```",
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "desc": "Lists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-10T08:04:27.178Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6204c6a6757cd50f352eb25a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Lists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```",
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "desc": "Lists all S3 buckets \n\n```\naws s3 ls\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-10T08:02:46.379Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6204c675716cb11eb648673f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Lists all S3 buckets \n\n```\naws s3 ls\n```",
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-10T08:01:57.445Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6204c65b92b0645aeca07deb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6204c65b92b0645aeca07de2",
          "name": "CI commands",
          "idShort": 120,
          "shortLink": "ZJK1vFld"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-10T08:01:31.929Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6203ab3a76cfda3c72d7e5b2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json\n\n```\nmain/\n     __init__.py\n     settings.py\n     urls.py\n      asgi.py\n      wsgi.py\nmanage.py\nzappa_settings.json\n```\n\nzappa_settings.json file content:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nI tried using this file structure\n\n```\ndjango-app/\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n    manage.py\nzappa_settings.json\n```\n\nwith this config:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"django-app.main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nBut the result was this error:\n\n```\nModuleNotFoundError: No module named 'main'\n```",
          "id": "62039aea6f01ce5b47270290",
          "name": "Error: ModuleNotFoundError: No module named 'main'",
          "idShort": 119,
          "shortLink": "agTh9JB4"
        },
        "old": {
          "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json\n\n```\nmain/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\nmanage.py\nzappa_settings.json\n```\n\nzappa_settings.json file content:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nI tried using this file structure\n\n```\ndjango-app/\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n    manage.py\nzappa_settings.json\n```\n\nwith this config:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"django-app.main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nBut the result was this error:\n\n```\nModuleNotFoundError: No module named 'main'\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T11:53:30.872Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6203ab282d5acc2b929770f1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json\n\n```\nmain/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\nmanage.py\nzappa_settings.json\n```\n\nzappa_settings.json file content:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nI tried using this file structure\n\n```\ndjango-app/\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n    manage.py\nzappa_settings.json\n```\n\nwith this config:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"django-app.main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nBut the result was this error:\n\n```\nModuleNotFoundError: No module named 'main'\n```",
          "id": "62039aea6f01ce5b47270290",
          "name": "Error: ModuleNotFoundError: No module named 'main'",
          "idShort": 119,
          "shortLink": "agTh9JB4"
        },
        "old": {
          "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\nzappa_settings.json\n```\n\nzappa_settings.json file content:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nI tried using this file structure\n\n```\ndjango-app/\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n    manage.py\nzappa_settings.json\n```\n\nwith this config:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"django-app.main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nBut the result was this error:\n\n```\nModuleNotFoundError: No module named 'main'\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T11:53:12.860Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6203ab0e0c3b624c0f334671",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\nzappa_settings.json\n```\n\nzappa_settings.json file content:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nI tried using this file structure\n\n```\ndjango-app/\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n    manage.py\nzappa_settings.json\n```\n\nwith this config:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"django-app.main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nBut the result was this error:\n\n```\nModuleNotFoundError: No module named 'main'\n```",
          "id": "62039aea6f01ce5b47270290",
          "name": "Error: ModuleNotFoundError: No module named 'main'",
          "idShort": 119,
          "shortLink": "agTh9JB4"
        },
        "old": {
          "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\nzappa_settings.json\n```\n\nzappa_settings.json file content:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T11:52:46.015Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6203aa8a45fd6e34e2652f0f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\nzappa_settings.json\n```\n\nzappa_settings.json file content:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```",
          "id": "62039aea6f01ce5b47270290",
          "name": "Error: ModuleNotFoundError: No module named 'main'",
          "idShort": 119,
          "shortLink": "agTh9JB4"
        },
        "old": {
          "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T11:50:34.875Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6203a2f56492aa187a946a8b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json",
          "id": "62039aea6f01ce5b47270290",
          "name": "Error: ModuleNotFoundError: No module named 'main'",
          "idShort": 119,
          "shortLink": "agTh9JB4"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T11:18:13.390Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62039aea6f01ce5b47270299",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "62039aea6f01ce5b47270290",
          "name": "Error: ModuleNotFoundError: No module named 'main'",
          "idShort": 119,
          "shortLink": "agTh9JB4"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-09T10:43:54.562Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62039941e8956637856bb912",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "### Error\n\n```\nImproperlyConfigured: Error loading psycopg2 module: No module named 'psycopg2._psycopg'\n```\n\n### Solution\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install aws-psycopg2\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```",
          "id": "62029fb976d0528a7182900a",
          "name": "Error No module named 'psycopg2._psycopg'",
          "idShort": 117,
          "shortLink": "TKXAVv9X"
        },
        "old": {
          "desc": "### Error\n\n```\nImproperlyConfigured: Error loading psycopg2 module: No module named 'psycopg2._psycopg'\n```\n\n### Solution\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install aws-psycopg2\n(lon-tech-universe-test-4) (base) DVL-W6\n\n\n\n0YMHTDF:vetest osborncourtney$ zappa update dev\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T10:36:49.053Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62039912b36dd025aebaf097",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "### Error\n\n```\nImproperlyConfigured: Error loading psycopg2 module: No module named 'psycopg2._psycopg'\n```\n\n### Solution\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install aws-psycopg2\n(lon-tech-universe-test-4) (base) DVL-W6\n\n\n\n0YMHTDF:vetest osborncourtney$ zappa update dev\n```",
          "id": "62029fb976d0528a7182900a",
          "name": "Error No module named 'psycopg2._psycopg'",
          "idShort": 117,
          "shortLink": "TKXAVv9X"
        },
        "old": {
          "desc": "### Error\n\n```\nImproperlyConfigured: Error loading psycopg2 module: No module named 'psycopg2._psycopg'\n```\n\n### Solution\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install aws-psycopg2\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T10:36:02.724Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620389f0f70ed484136f9180",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 32767.5,
          "id": "620288985e3c7e89e1a380f0",
          "name": "Zappa Commands",
          "idShort": 116,
          "shortLink": "lypneAJU"
        },
        "old": {
          "pos": 131071
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T09:31:28.049Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620389ec4caaae652fb278e2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Zappa Commands",
          "id": "620288985e3c7e89e1a380f0",
          "idShort": 116,
          "shortLink": "lypneAJU"
        },
        "old": {
          "name": "Commands"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T09:31:24.542Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620389b3bcd3ba8e9f2fdf82",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Deploy Zappa\n\n```\n(lon-tech-universe-test-4) $ zappa deploy dev\n```\n\n## Deployment status\n\n```\n(lon-tech-universe-test-4) $ zappa status dev\n```\n\n## Updating Code / Environment\n\n```\n(lon-tech-universe-test-4) $ zappa update dev\n```\n## Un-deploy Project\n\n```\n(lon-tech-universe-test-4) $ zappa undeploy dev\n```\n\n## Log-like tail\n\n```\n(lon-tech-universe-test-4) $ zappa tail dev\n```",
          "id": "620288985e3c7e89e1a380f0",
          "name": "Commands",
          "idShort": 116,
          "shortLink": "lypneAJU"
        },
        "old": {
          "desc": "## Deploy Zappa\n\n```\n(lon-tech-universe-test-4) $ zappa deploy dev\n```\n\n## Deployment status\n\n```\n(lon-tech-universe-test-4) $ zappa status dev\n```\n\n## Updating Code / Environment\n(lon-tech-universe-test-4) $ zappa update dev\n\n## Un-deploy Project\n(lon-tech-universe-test-4) $ zappa undeploy dev\n\n## Log-like tail\n(lon-tech-universe-test-4) $ zappa tail dev"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T09:30:27.054Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6203899f1e90fc3432e8f488",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Deploy Zappa\n\n```\n(lon-tech-universe-test-4) $ zappa deploy dev\n```\n\n## Deployment status\n\n```\n(lon-tech-universe-test-4) $ zappa status dev\n```\n\n## Updating Code / Environment\n(lon-tech-universe-test-4) $ zappa update dev\n\n## Un-deploy Project\n(lon-tech-universe-test-4) $ zappa undeploy dev\n\n## Log-like tail\n(lon-tech-universe-test-4) $ zappa tail dev",
          "id": "620288985e3c7e89e1a380f0",
          "name": "Commands",
          "idShort": 116,
          "shortLink": "lypneAJU"
        },
        "old": {
          "desc": "## Deployment status\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa status dev\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T09:30:07.919Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6203823700730b2c525a2099",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Error\n\n```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```\n\n## Solution\n\n- You need to down grade your Django version\n\n1. Create requirments.txt file \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip freeze \u003E requirements.txt\n```\n\n2. Change Django version in `requirements.txt` from `Django==4.0.2` to `Django==2.1.2`\n\n3. Install dependencies \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install -r requirements.txt\n```\n\n4. Run\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```\n\n## Result\n\n```\nYour updated Zappa deployment is live!: https://e6dl76w3cd.execute-api.eu-west-2.amazonaws.com/dev\n```",
          "id": "620281527cce6813798d9f3f",
          "name": "Error '/' yielded a 500 response code",
          "idShort": 115,
          "shortLink": "6WhtF8lt"
        },
        "old": {
          "desc": "## Error\n\n```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```\n\n## Solution\n\n- You need to down grade your Django version\n\n1. Create requirments.txt file \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip freeze \u003E requirements.txt\n```\n\n2. Change Django version in `requirements.txt` to `Django==2.1.2`\n\n3. Install dependencies \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install -r requirements.txt\n```\n\n4. Run\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```\n\n## Result\n\n```\nYour updated Zappa deployment is live!: https://e6dl76w3cd.execute-api.eu-west-2.amazonaws.com/dev\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-09T08:58:31.731Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202abbbb8866f2f9fd8aa28",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "DO NOT USE DATASHS IN THE DB NAME",
          "id": "6202aba2108863738ca26291",
          "idShort": 118,
          "shortLink": "VLtxFVXI"
        },
        "old": {
          "name": "Don't uses dashes in the DB name"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T17:43:23.836Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202aba2108863738ca2629a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6202aba2108863738ca26291",
          "name": "Don't uses dashes in the DB name",
          "idShort": 118,
          "shortLink": "VLtxFVXI"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-08T17:42:58.561Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202a15bc68cea5ab1ed46a1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "### Error\n\n```\nImproperlyConfigured: Error loading psycopg2 module: No module named 'psycopg2._psycopg'\n```\n\n### Solution\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install aws-psycopg2\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```",
          "id": "62029fb976d0528a7182900a",
          "name": "Error No module named 'psycopg2._psycopg'",
          "idShort": 117,
          "shortLink": "TKXAVv9X"
        },
        "old": {
          "desc": "### Error\n\n```\nImproperlyConfigured: Error loading psycopg2 module: No module named 'psycopg2._psycopg'\n```\n\n### Solution\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install aws-psycopg2\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T16:59:07.235Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202a0c18974d53b946a5e95",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "### Error\n\n```\nImproperlyConfigured: Error loading psycopg2 module: No module named 'psycopg2._psycopg'\n```\n\n### Solution\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install aws-psycopg2\n```",
          "id": "62029fb976d0528a7182900a",
          "name": "Error No module named 'psycopg2._psycopg'",
          "idShort": 117,
          "shortLink": "TKXAVv9X"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T16:56:33.031Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62029fc8909103733515a845",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Error No module named 'psycopg2._psycopg'",
          "id": "62029fb976d0528a7182900a",
          "idShort": 117,
          "shortLink": "TKXAVv9X"
        },
        "old": {
          "name": "Error"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T16:52:24.065Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62029fb976d0528a71829013",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "62029fb976d0528a7182900a",
          "name": "Error",
          "idShort": 117,
          "shortLink": "TKXAVv9X"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-08T16:52:09.877Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620288ae5fe44b1602b2682e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Deployment status\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa status dev\n```",
          "id": "620288985e3c7e89e1a380f0",
          "name": "Commands",
          "idShort": 116,
          "shortLink": "lypneAJU"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T15:13:50.872Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620288985e3c7e89e1a380f9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "620288985e3c7e89e1a380f0",
          "name": "Commands",
          "idShort": 116,
          "shortLink": "lypneAJU"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-08T15:13:28.836Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202862d0edd5f4f633b34c6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Error\n\n```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```\n\n## Solution\n\n- You need to down grade your Django version\n\n1. Create requirments.txt file \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip freeze \u003E requirements.txt\n```\n\n2. Change Django version in `requirements.txt` to `Django==2.1.2`\n\n3. Install dependencies \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install -r requirements.txt\n```\n\n4. Run\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```\n\n## Result\n\n```\nYour updated Zappa deployment is live!: https://e6dl76w3cd.execute-api.eu-west-2.amazonaws.com/dev\n```",
          "id": "620281527cce6813798d9f3f",
          "name": "Error '/' yielded a 500 response code",
          "idShort": 115,
          "shortLink": "6WhtF8lt"
        },
        "old": {
          "desc": "## Error\n\n```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```\n\n## Solution\n\n- You need to down grade your Django version\n\n1. Create requirments.txt file \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip freeze \u003E requirements.txt\n```\n\n2. Change Django version in `requirements.txt` to `Django==2.1.2`\n\n3. Install dependencies \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install -r requirements.txt\n```\n\n4. Run\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T15:03:09.803Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620285ec1e7e4e84fe950812",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Error\n\n```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```\n\n## Solution\n\n- You need to down grade your Django version\n\n1. Create requirments.txt file \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip freeze \u003E requirements.txt\n```\n\n2. Change Django version in `requirements.txt` to `Django==2.1.2`\n\n3. Install dependencies \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install -r requirements.txt\n```\n\n4. Run\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```",
          "id": "620281527cce6813798d9f3f",
          "name": "Error '/' yielded a 500 response code",
          "idShort": 115,
          "shortLink": "6WhtF8lt"
        },
        "old": {
          "desc": "## Error\n\n```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```\n\n## Solution\n\n- You need to down grade your Django version\n\n1. Create requirments.txt file \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip freeze \u003E requirements.txt\n```\n\n2. Change Django version in `requirements.txt` to `Django==2.1.2`\n\n3. Install dependencies \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install -r requirements.txt\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T15:02:04.098Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620285d444c04b86b54609d0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Error\n\n```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```\n\n## Solution\n\n- You need to down grade your Django version\n\n1. Create requirments.txt file \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip freeze \u003E requirements.txt\n```\n\n2. Change Django version in `requirements.txt` to `Django==2.1.2`\n\n3. Install dependencies \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install -r requirements.txt\n```",
          "id": "620281527cce6813798d9f3f",
          "name": "Error '/' yielded a 500 response code",
          "idShort": 115,
          "shortLink": "6WhtF8lt"
        },
        "old": {
          "desc": "```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T15:01:40.628Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202829a354c3b3724d6c9a0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "text": "(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install pysqlite3\n",
        "textData": {
          "emoji": {

          }
        },
        "card": {
          "id": "620281527cce6813798d9f3f",
          "name": "Error '/' yielded a 500 response code",
          "idShort": 115,
          "shortLink": "6WhtF8lt"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "commentCard",
      "date": "2022-02-08T14:47:54.793Z",
      "limits": {
        "reactions": {
          "perAction": {
            "status": "ok",
            "disableAt": 900,
            "warnAt": 720
          },
          "uniquePerAction": {
            "status": "ok",
            "disableAt": 17,
            "warnAt": 14
          }
        }
      },
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202827f1e7e4e84fe90d9e3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "pos": 868351,
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "old": {
          "pos": 917503
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2022-02-08T14:47:27.153Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202827c379437893790f5bb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "pos": 884735,
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "old": {
          "pos": 1245183
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2022-02-08T14:47:24.332Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620282682185f804b807f2aa",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```",
          "id": "620281527cce6813798d9f3f",
          "name": "Error '/' yielded a 500 response code",
          "idShort": 115,
          "shortLink": "6WhtF8lt"
        },
        "old": {
          "desc": "```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:47:04.436Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202815e870a23378c20d64b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```",
          "id": "620281527cce6813798d9f3f",
          "name": "Error '/' yielded a 500 response code",
          "idShort": 115,
          "shortLink": "6WhtF8lt"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:42:38.633Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202815e9c99aa3ecc89d905",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Error '/' yielded a 500 response code",
          "id": "620281527cce6813798d9f3f",
          "idShort": 115,
          "shortLink": "6WhtF8lt"
        },
        "old": {
          "name": "Error"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:42:38.436Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620281527cce6813798d9f4e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "620281527cce6813798d9f3f",
          "name": "Error",
          "idShort": 115,
          "shortLink": "6WhtF8lt"
        },
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-08T14:42:26.277Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202814e1674783d80fefed0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "6202814e1674783d80fefeca",
          "name": "Zappa"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-02-08T14:42:22.249Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62028138deb9ba733e1e341d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n\nInstall django and zappa\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip install django zappa\n```\n\nNow see https://trello.com/c/QIFLy18N/88-install-django-and-create-project-and-apps\n\n",
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n\nNow see https://trello.com/c/QIFLy18N/88-install-django-and-create-project-and-apps\n\nInstall django and zappa\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip install django zappa\n```\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:42:00.427Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202812bb8031a58fad1d6ba",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n\nNow see https://trello.com/c/QIFLy18N/88-install-django-and-create-project-and-apps\n\nInstall django and zappa\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip install django zappa\n```\n\n",
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n\nNow see https://trello.com/c/QIFLy18N/88-install-django-and-create-project-and-apps\n\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:41:47.861Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027de85d52de601b1429f8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\n###** To see all third party libraries in the virtual environment**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\n### **Installed third party packages along with their version numbers**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\n### **Add output to requirements.txt**\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\n### Install Dependencies\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip install -r requirements.txt\n```\n**e.g** (venv) $ pip install -r requirements.txt\n\n## **Access environment for the first time**\n\n###** Create virtual environment and install dependencies**\n```\n$ source venv/bin/activate\n(\u003Cvirtual-environment-name\u003E) pip install -r requirements.txt\n```\n\n### **Nuke old environments **\n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\n###** Find virtual environments on your computer**\n\n```\n$ find $HOME -name \"*activate\" -type f\n```\n\n### Install and add virtual environments\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip install -r requirements.txt\n```\n\n###**Uninstall and remove the virtual environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip uninstall -r requirements.txt -y\n(\u003Cvirtual-environment-name\u003E) $ deactivate\n$ rm -r \u003Cvirtual-environment-name\u003E/\n```",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\n###** To see all third party libraries in the virtual environment**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\n### **Installed third party packages along with their version numbers**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\n### **Add output to requirements.txt**\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\n## **Access environment for the first time**\n\n###** Create virtual environment and install dependencies**\n```\n$ source venv/bin/activate\n(\u003Cvirtual-environment-name\u003E) pip install -r requirements.txt\n```\n\n### **Nuke old environments **\n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\n###** Find virtual environments on your computer**\n\n```\n$ find $HOME -name \"*activate\" -type f\n```\n\n### Install and add virtual environments\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n\n###**Uninstall and remove the virtual environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip uninstall -r requirements.txt -y\n(\u003Cvirtual-environment-name\u003E) $ deactivate\n$ rm -r \u003Cvirtual-environment-name\u003E/\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:27:52.515Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027d7e02611186ae8a7528",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\n###** To see all third party libraries in the virtual environment**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\n### **Installed third party packages along with their version numbers**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\n### **Add output to requirements.txt**\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\n## **Access environment for the first time**\n\n###** Create virtual environment and install dependencies**\n```\n$ source venv/bin/activate\n(\u003Cvirtual-environment-name\u003E) pip install -r requirements.txt\n```\n\n### **Nuke old environments **\n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\n###** Find virtual environments on your computer**\n\n```\n$ find $HOME -name \"*activate\" -type f\n```\n\n### Install and add virtual environments\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n\n###**Uninstall and remove the virtual environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip uninstall -r requirements.txt -y\n(\u003Cvirtual-environment-name\u003E) $ deactivate\n$ rm -r \u003Cvirtual-environment-name\u003E/\n```",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\n###** To see all third party libraries in the virtual environment**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\n### **Installed third party packages along with their version numbers**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\n### **Add output to requirements.txt**\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\n## **Access environment for the first time**\n\n###** Create virtual environment and install dependencies**\n```\n$ source venv/bin/activate\n(\u003Cvirtual-environment-name\u003E) pip install -r requirements.txt\n```\n\n### **Nuke old environments **\n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\n###** Find virtual environments on your computer**\n\n```\n$ find $HOME -name \"*activate\" -type f\n```\n\n###**Uninstall and remove the virtual environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip uninstall -r requirements.txt -y\n(\u003Cvirtual-environment-name\u003E) $ deactivate\n$ rm -r \u003Cvirtual-environment-name\u003E/\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:26:06.562Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027c5faf652d152e0cec27",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n\nNow see https://trello.com/c/QIFLy18N/88-install-django-and-create-project-and-apps\n\n\n",
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n\nNow see https://trello.com/c/QIFLy18N/88-install-django-and-create-project-and-apps\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:21:19.849Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027c596f77cc66dca37137",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n\nNow see https://trello.com/c/QIFLy18N/88-install-django-and-create-project-and-apps\n",
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:21:13.352Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027b8f60d7d47368cbb9d8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n",
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:17:51.457Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027b89c60189702f1610f9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n",
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:17:45.105Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027b81462c318658bc00b3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n",
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:17:37.408Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027b709e83e24fd7adec0c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n",
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:17:20.806Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027b3dca431566e65c8c45",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```",
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:16:29.219Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027afbcb6841271526de6a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 98303.5,
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "old": {
          "pos": 983039
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:15:23.463Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027af90f17eb13eeca1940",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "62027af90f17eb13eeca1937",
          "name": "Setup (including virtual environment)",
          "idShort": 114,
          "shortLink": "U4LPI8iW"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-08T14:15:21.155Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027921aa02845fdb252552",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\n###** To see all third party libraries in the virtual environment**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\n### **Installed third party packages along with their version numbers**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\n### **Add output to requirements.txt**\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\n## **Access environment for the first time**\n\n###** Create virtual environment and install dependencies**\n```\n$ source venv/bin/activate\n(\u003Cvirtual-environment-name\u003E) pip install -r requirements.txt\n```\n\n### **Nuke old environments **\n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\n###** Find virtual environments on your computer**\n\n```\n$ find $HOME -name \"*activate\" -type f\n```\n\n###**Uninstall and remove the virtual environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip uninstall -r requirements.txt -y\n(\u003Cvirtual-environment-name\u003E) $ deactivate\n$ rm -r \u003Cvirtual-environment-name\u003E/\n```",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\nInstalled third party packages along with their version numbers\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\nAdd output to requirements.txt\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(\u003Cvirtual-environment-name\u003E) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\nFind virtual environments on your computer\n\n```\n$ find $HOME -name \"*activate\" -type f\n```\n\nUninstall and remove the virtual environment\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip uninstall -r requirements.txt -y\n(\u003Cvirtual-environment-name\u003E) $ deactivate\n$ rm -r \u003Cvirtual-environment-name\u003E/\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:07:29.753Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620278ddf7c56352ddd39966",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\nInstalled third party packages along with their version numbers\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\nAdd output to requirements.txt\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(\u003Cvirtual-environment-name\u003E) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\nFind virtual environments on your computer\n\n```\n$ find $HOME -name \"*activate\" -type f\n```\n\nUninstall and remove the virtual environment\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip uninstall -r requirements.txt -y\n(\u003Cvirtual-environment-name\u003E) $ deactivate\n$ rm -r \u003Cvirtual-environment-name\u003E/\n```",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\nFind virtual environments on your computer\n\n```\n$ find $HOME -name \"*activate\" -type f\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:06:21.358Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202777baee7665fe0ecf776",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\nFind virtual environments on your computer\n\n```\n$ find $HOME -name \"*activate\" -type f\n```",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\nFind virtual environments on your computer\n\n```\n$ find $HOME -name \"*activate\" -type f\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T14:00:27.347Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202766e0fbf188930c07082",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\nFind virtual environments on your computer\n\n```\n$ find $HOME -name \"*activate\" -type f\n```",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:55:58.983Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620275a4ff962b13c675cab8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ rm -r venv/\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:52:36.083Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027427994efa6263dd93f1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n\nNuke old environments \n\n```\n$ rm -r venv/\n```\n",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:46:15.901Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620274012e9e1f2ede9a0dd1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\nTo see all third party libraries in the virtual environment\n\n```\n$ pip list\n```\n\nInstalled third party packages along with their version numbers\n\n```\n# pip freeze\n```\n\nAdd output to requirements.txt\n\n```\n# pip freeze \u003E requirements.txt\n```\n\nAccess environment for the first time\n\nCreate virtual environment and install dependencies\n```\n$ source venv/bin/activate\n(virtual-environmenn) pip install -r requirements.txt\n```\n",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:45:37.721Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620272b3a286b78031ba115a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "620272b3a286b78031ba114e",
          "name": "Requirement.txt",
          "idShort": 113,
          "shortLink": "XbFngdsh"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-08T13:40:03.588Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202727f97ad6e661a422315",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:39:11.635Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "62027233b0d139836e9dca8a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:37:55.575Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620272291e228929e555f54f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:37:45.468Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202722213dfec6029c18195",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n**Activate virtual Environment**\n\n```\n$ source venv/bin/activate\n```\n",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\nActivate virtual Environment\n\n```\n$ source venv/bin/activate\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:37:38.903Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6202721b166b6b65ee4056d3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\nActivate virtual Environment\n\n```\n$ source venv/bin/activate\n```\n",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ "
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:37:31.550Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620271e9d81a715a9a89fd8e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ ",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\nCreate virtual environment\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ "
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:36:41.954Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620271e45737d47a41b37983",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\nCreate virtual environment\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ ",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\nCreate virtual environment\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\ne.g python3 -m venv venv/ "
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:36:36.412Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620271d9a4e81117abcc78de",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\nCreate virtual environment\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cenvironment-name\u003E\n```\n\ne.g python3 -m venv venv/ ",
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-08T13:36:25.750Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "620271879d9b708564eba6ca",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "620271879d9b708564eba6c1",
          "name": "Virtual Environments",
          "idShort": 112,
          "shortLink": "g5Whs7ER"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-08T13:35:03.220Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa9f998fbc020b7e96588d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "\nMakefile\nmake drop-all-tables\n\n```\ndrop-all-tables\n   python scripts/drop-all-tables.py\n```\n\nscripts/drop-all-tables.py\n\n```\nimport psycopg2\n\nconn = psycopg2.connect(\n   database=\"meta-universe-db\", user='meta-universe-root-user', password='tech-universe-password', host='127.0.0.1', port= '5432'\n)\n\ncursor = conn.cursor()\ncursor.execute(\"DROP TABLE IF EXISTS buisness_opportunity_buisnessopportunitymodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS xaxis_xaxismodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS yaxis_yaxismodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS tech_techmodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS exemplars_exemplarmodel_tech CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS exemplars_exemplarmodel CASCADE\")\n\nprint(\"Tables DROPPED successfully........\")\nconn.commit()\nconn.close()\n\n```",
          "id": "61fa9f1ee4cb4739f82cb66c",
          "name": "Create drop table script",
          "idShort": 111,
          "shortLink": "wWksjrel"
        },
        "old": {
          "desc": "\n#Makefile\nmake drop-all-tables\n\n#scripts/drop-all-tables.py\n\n```\nimport psycopg2\n\nconn = psycopg2.connect(\n   database=\"meta-universe-db\", user='meta-universe-root-user', password='tech-universe-password', host='127.0.0.1', port= '5432'\n)\n\ncursor = conn.cursor()\ncursor.execute(\"DROP TABLE IF EXISTS buisness_opportunity_buisnessopportunitymodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS xaxis_xaxismodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS yaxis_yaxismodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS tech_techmodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS exemplars_exemplarmodel_tech CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS exemplars_exemplarmodel CASCADE\")\n\nprint(\"Tables DROPPED successfully........\")\nconn.commit()\nconn.close()\n\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-02T15:13:29.799Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa9f610243c73781c63f4c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "\n#Makefile\nmake drop-all-tables\n\n#scripts/drop-all-tables.py\n\n```\nimport psycopg2\n\nconn = psycopg2.connect(\n   database=\"meta-universe-db\", user='meta-universe-root-user', password='tech-universe-password', host='127.0.0.1', port= '5432'\n)\n\ncursor = conn.cursor()\ncursor.execute(\"DROP TABLE IF EXISTS buisness_opportunity_buisnessopportunitymodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS xaxis_xaxismodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS yaxis_yaxismodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS tech_techmodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS exemplars_exemplarmodel_tech CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS exemplars_exemplarmodel CASCADE\")\n\nprint(\"Tables DROPPED successfully........\")\nconn.commit()\nconn.close()\n\n```",
          "id": "61fa9f1ee4cb4739f82cb66c",
          "name": "Create drop table script",
          "idShort": 111,
          "shortLink": "wWksjrel"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-02T15:12:33.049Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa9f1ee4cb4739f82cb67a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61fa9f1ee4cb4739f82cb66c",
          "name": "Create drop table script",
          "idShort": 111,
          "shortLink": "wWksjrel"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-02T15:11:26.677Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa9f131e85ef6b771e0525",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://www.tutorialspoint.com/python_data_access/python_postgresql_create_table.htm",
          "id": "61fa9f0f9782d05f75521bc1",
          "name": "Postgres Database information",
          "idShort": 110,
          "shortLink": "XhhipqxK"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-02T15:11:15.583Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa9f0f9782d05f75521bcb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61fa9f0f9782d05f75521bc1",
          "name": "Postgres Database information",
          "idShort": 110,
          "shortLink": "XhhipqxK"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-02T15:11:11.959Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa5e3aad976d06799da85e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Use the following code:\n\n```\nfunction onEdit(e){\n  console.log(\"old\", e.oldValue)\n  console.log(\"value\", e.value)\n  if (e.range.columnStart !== 7 ) {\n    return;\n  }\n  if (e.value && e.oldValue && e.value === e.oldValue ){\n    return;\n  }\n  if (e.value && e.oldValue && !e.oldValue.includes(e.value)){\n    console.log(\"inside here\")\n    e.range.setValue(`${e.oldValue}, ${e.value}`);\n  } else if (e.oldValue && e.oldValue.includes(e.value)) {\n    console.log(\"OR inside here\")\n    if (e.oldValue.includes(e.value)) {\n      return\n    }\n    \n    e.range.setValue(e.value);\n    \n  }\n}\n```\n\nVideo: https://www.youtube.com/watch?v=cBRD8bZbT2k\n\nCode Notes: \n\n- **First If statement says which column it affects - update this if the column changes**\n\nNotes:\n\n- It is not yet perfect\n- To delete one value, you will have to delete all of them and start again\n- It takes a little time to load the change so be patient\n\n",
          "id": "61fa4a6effefb06e4d02c43a",
          "name": "To select multiple values from drop down",
          "idShort": 109,
          "shortLink": "x8LJx3St"
        },
        "old": {
          "desc": "Use the following code:\n\n```\nfunction onEdit(e){\n  if (e.range.columnStart !== 7 ) {\n    return;\n  }\n  if (e.value && e.oldValue && !e.oldValue.includes(e.value)){\n    e.range.setValue(`${e.oldValue}, ${e.value}`);\n  } else if (e.oldValue.includes(e.value)) {\n    e.range.setValue(e.oldValue);\n  }\n}\n```\n\nVideo: https://www.youtube.com/watch?v=cBRD8bZbT2k\n\nCode Notes: \n\n- **First If statement says which column it affects - update this if the column changes**\n\nNotes:\n\n- It is not yet perfect\n- To delete one value, you will have to delete all of them and start again\n- It takes a little time to load the change so be patient\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61fa4a511fac4f4cbaf83b8c",
          "name": "Google Spread Sheet"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-02T10:34:34.952Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa4b0c022cc554bd7c7377",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Use the following code:\n\n```\nfunction onEdit(e){\n  if (e.range.columnStart !== 7 ) {\n    return;\n  }\n  if (e.value && e.oldValue && !e.oldValue.includes(e.value)){\n    e.range.setValue(`${e.oldValue}, ${e.value}`);\n  } else if (e.oldValue.includes(e.value)) {\n    e.range.setValue(e.oldValue);\n  }\n}\n```\n\nVideo: https://www.youtube.com/watch?v=cBRD8bZbT2k\n\nCode Notes: \n\n- **First If statement says which column it affects - update this if the column changes**\n\nNotes:\n\n- It is not yet perfect\n- To delete one value, you will have to delete all of them and start again\n- It takes a little time to load the change so be patient\n\n",
          "id": "61fa4a6effefb06e4d02c43a",
          "name": "To select multiple values from drop down",
          "idShort": 109,
          "shortLink": "x8LJx3St"
        },
        "old": {
          "desc": "Use the following code:\n\n```\nfunction onEdit(e){\n  if (e.range.columnStart !== 7 ) {\n    return;\n  }\n  // if (e.value && e.oldValue && e.value == e.oldValue ){\n  //   return;\n  // }\n  if (e.value && e.oldValue && !e.oldValue.includes(e.value)){\n    e.range.setValue(`${e.oldValue}, ${e.value}`);\n  } else if (e.oldValue.includes(e.value)) {\n    e.range.setValue(e.oldValue);\n  }\n}\n```\n\nVideo: https://www.youtube.com/watch?v=cBRD8bZbT2k\n\nCode Notes: \n\n- **First If statement says which column it affects - update this if the column changes**\n\nNotes:\n\n- It is not yet perfect\n- To delete one value, you will have to delete all of them and start again\n- It takes a little time to load the change so be patient\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61fa4a511fac4f4cbaf83b8c",
          "name": "Google Spread Sheet"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-02T09:12:44.379Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa4af86118c263cced742e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Use the following code:\n\n```\nfunction onEdit(e){\n  if (e.range.columnStart !== 7 ) {\n    return;\n  }\n  // if (e.value && e.oldValue && e.value == e.oldValue ){\n  //   return;\n  // }\n  if (e.value && e.oldValue && !e.oldValue.includes(e.value)){\n    e.range.setValue(`${e.oldValue}, ${e.value}`);\n  } else if (e.oldValue.includes(e.value)) {\n    e.range.setValue(e.oldValue);\n  }\n}\n```\n\nVideo: https://www.youtube.com/watch?v=cBRD8bZbT2k\n\nCode Notes: \n\n- **First If statement says which column it affects - update this if the column changes**\n\nNotes:\n\n- It is not yet perfect\n- To delete one value, you will have to delete all of them and start again\n- It takes a little time to load the change so be patient\n\n",
          "id": "61fa4a6effefb06e4d02c43a",
          "name": "To select multiple values from drop down",
          "idShort": 109,
          "shortLink": "x8LJx3St"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61fa4a511fac4f4cbaf83b8c",
          "name": "Google Spread Sheet"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-02T09:12:24.652Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa4a6effefb06e4d02c443",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61fa4a6effefb06e4d02c43a",
          "name": "To select multiple values from drop down",
          "idShort": 109,
          "shortLink": "x8LJx3St"
        },
        "list": {
          "id": "61fa4a511fac4f4cbaf83b8c",
          "name": "Google Spread Sheet"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-02T09:10:06.607Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa4a511fac4f4cbaf83b92",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61fa4a511fac4f4cbaf83b8c",
          "name": "Google Spread Sheet"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-02-02T09:09:37.975Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa4a4bca8b4763e8c9d1a1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "name": "Microsoft Excel Spread Sheets",
          "id": "61f934a2cb019a8417dccc3d"
        },
        "old": {
          "name": "Excel Spread Sheets"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2022-02-02T09:09:31.272Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa2f56df7ee636331e2274",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "To use Microsoft Visual Basic you need a developer tab, to get this, do the following:\n\n-\u003E Click Excel on top bar (next to the apple icon)\n-\u003E Click preferences\n-\u003E Click Ribbon\n-\u003E Tick the box developer\n-\u003E You should now see it on the bar with home, insert ect.\n     (If you don't see it move it up the list)\n-\u003E Click save \n\n",
          "id": "61fa2e4b19fcd6766fcb2927",
          "name": "Add Developer Tab & Access Microsoft Visual Basic",
          "idShort": 108,
          "shortLink": "ML5dw40D"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f934a2cb019a8417dccc3d",
          "name": "Excel Spread Sheets"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-02T07:14:30.378Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa2e91220b250e04d46b8b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Add Developer Tab & Access Microsoft Visual Basic",
          "id": "61fa2e4b19fcd6766fcb2927",
          "idShort": 108,
          "shortLink": "ML5dw40D"
        },
        "old": {
          "name": "Add developer Tab & Access"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f934a2cb019a8417dccc3d",
          "name": "Excel Spread Sheets"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-02T07:11:13.755Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa2e8ab998736fe1685c20",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Add developer Tab & Access",
          "id": "61fa2e4b19fcd6766fcb2927",
          "idShort": 108,
          "shortLink": "ML5dw40D"
        },
        "old": {
          "name": "Add developer Tab"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f934a2cb019a8417dccc3d",
          "name": "Excel Spread Sheets"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-02T07:11:06.672Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa2e4b19fcd6766fcb2930",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61fa2e4b19fcd6766fcb2927",
          "name": "Add developer Tab",
          "idShort": 108,
          "shortLink": "ML5dw40D"
        },
        "list": {
          "id": "61f934a2cb019a8417dccc3d",
          "name": "Excel Spread Sheets"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-02T07:10:03.400Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61fa2e42e4f51e861e74389e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "name": "Excel Spread Sheets",
          "id": "61f934a2cb019a8417dccc3d"
        },
        "old": {
          "name": "Google Sheets"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2022-02-02T07:09:54.343Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f947a24554000eb7884a8f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Error:\n\nNo installed app with label \u003Capp name\u003E\n\ne.g\n\n```\nNo installed app with label 'yaxis'\n```\n\nAdd \u003Cproject name\u003E to settings.py\n\ne.g\n\nmain/settings.py\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'import_export',\n\n    'maturitylevel',\n    'yaxis', \u003C-------\n]\n```",
          "id": "61f9472efa79473bedd8b06b",
          "name": "Error: No installed app with label \u003Capp name\u003E",
          "idShort": 107,
          "shortLink": "xcGvg2fT"
        },
        "old": {
          "desc": "Error:\n\ne.g\n\n```\nNo installed app with label 'yaxis'\n```\n\nAdd \u003Cproject name\u003E to settings.py\n\ne.g\n\nmain/settings.py\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'import_export',\n\n    'maturitylevel',\n    'yaxis', \u003C-------\n]\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T14:45:54.531Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f947922826395660378335",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Error:\n\ne.g\n\n```\nNo installed app with label 'yaxis'\n```\n\nAdd \u003Cproject name\u003E to settings.py\n\ne.g\n\nmain/settings.py\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'import_export',\n\n    'maturitylevel',\n    'yaxis', \u003C-------\n]\n```",
          "id": "61f9472efa79473bedd8b06b",
          "name": "Error: No installed app with label \u003Capp name\u003E",
          "idShort": 107,
          "shortLink": "xcGvg2fT"
        },
        "old": {
          "desc": "Error:\n\ne.g\n\n```\nNo installed app with label 'yaxis'\n```\n\nAdd \u003Cproject name\u003E to settings.py\n\ne.g\n\nmain/settings.py\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'import_export',\n\n    'maturitylevel',\n    'yaxis',\n]\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T14:45:38.929Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f94789b8ef408612f37f58",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Error:\n\ne.g\n\n```\nNo installed app with label 'yaxis'\n```\n\nAdd \u003Cproject name\u003E to settings.py\n\ne.g\n\nmain/settings.py\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'import_export',\n\n    'maturitylevel',\n    'yaxis',\n]\n```",
          "id": "61f9472efa79473bedd8b06b",
          "name": "Error: No installed app with label \u003Capp name\u003E",
          "idShort": 107,
          "shortLink": "xcGvg2fT"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T14:45:29.599Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f9472efa79473bedd8b074",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f9472efa79473bedd8b06b",
          "name": "Error: No installed app with label \u003Capp name\u003E",
          "idShort": 107,
          "shortLink": "xcGvg2fT"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-01T14:43:58.939Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f936c2f3f46258d28085a2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://support.microsoft.com/en-us/office/create-a-drop-down-list-7693307a-59ef-400a-b769-c5402dce407b#ID0EBBH=macOS",
          "id": "61f934aba9132a0368dff968",
          "name": "Create a drop down list",
          "idShort": 106,
          "shortLink": "UDwLltmc"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f934a2cb019a8417dccc3d",
          "name": "Google Sheets"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T13:33:54.314Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f934aba9132a0368dff971",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f934aba9132a0368dff968",
          "name": "Create a drop down list",
          "idShort": 106,
          "shortLink": "UDwLltmc"
        },
        "list": {
          "id": "61f934a2cb019a8417dccc3d",
          "name": "Google Sheets"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-01T13:24:59.289Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f934a2cb019a8417dccc43",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61f934a2cb019a8417dccc3d",
          "name": "Google Sheets"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-02-01T13:24:50.190Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90c5a0f78df2bb64989b3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Notes:\n\n### Blank or Missing fields in the excel spread sheet:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```\n\n### How to prevent adding duplicates with import:\n",
          "id": "61f90bb62eb830426db03b13",
          "name": "Import Export",
          "idShort": 105,
          "shortLink": "hYp2o4fu"
        },
        "old": {
          "desc": "## Notes:\n\n### Blank or Missing fields in the excel spread sheet:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:32:58.731Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90c4b562cea790e45c106",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Notes:\n\n### Blank or Missing fields in the excel spread sheet:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```",
          "id": "61f90bb62eb830426db03b13",
          "name": "Import Export",
          "idShort": 105,
          "shortLink": "hYp2o4fu"
        },
        "old": {
          "desc": "## Notes:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:32:43.740Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90c287734382c177c7a85",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- Adding import export\n- How to prevent adding duplicates with import",
          "id": "61f90b0cd9ebac54f0cd91f9",
          "name": "Things to write about",
          "idShort": 103,
          "shortLink": "NAHilQQv"
        },
        "old": {
          "desc": "- Adding import export\n- Description not allowed to be null\n- How to prevent adding duplicates with import"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:32:08.482Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90c1c93db176448a6fea4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## Notes:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```",
          "id": "61f90bb62eb830426db03b13",
          "name": "Import Export",
          "idShort": 105,
          "shortLink": "hYp2o4fu"
        },
        "old": {
          "desc": "# Notes:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:31:56.243Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90c181326b30a382688c0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# Notes:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```",
          "id": "61f90bb62eb830426db03b13",
          "name": "Import Export",
          "idShort": 105,
          "shortLink": "hYp2o4fu"
        },
        "old": {
          "desc": "Notes:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:31:52.453Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90c0ecfbe4017f85f03a2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Notes:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```",
          "id": "61f90bb62eb830426db03b13",
          "name": "Import Export",
          "idShort": 105,
          "shortLink": "hYp2o4fu"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:31:42.742Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90bb62eb830426db03b1c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f90bb62eb830426db03b13",
          "name": "Import Export",
          "idShort": 105,
          "shortLink": "hYp2o4fu"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-01T10:30:14.523Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90badc38ae34ad5ccf08d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- Adding import export\n- Description not allowed to be null\n- How to prevent adding duplicates with import",
          "id": "61f90b0cd9ebac54f0cd91f9",
          "name": "Things to write about",
          "idShort": 103,
          "shortLink": "NAHilQQv"
        },
        "old": {
          "desc": "- Adding import export\n- Error with excel up load\n- Description not allowed to be null\n- How to prevent adding duplicates with import"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:30:05.798Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90ba14ea9138778dfcefe",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "##Error:\n\nStopIteration encountered while trying to read file: Tech Universe.xlsx\n\n##Solution:\n\nIt appears the file is corrupted create a new excel sheet",
          "id": "61f90b4e36669b3819b0f61e",
          "name": "Error: Import -\u003E StopIteration encountered while trying to read file: Tech Universe.xlsx",
          "idShort": 104,
          "shortLink": "HfY5rowZ"
        },
        "old": {
          "desc": "Error:\n\nStopIteration encountered while trying to read file: Tech Universe.xlsx\n\nSolution:\n\nIt appears the file is corrupted create a new excel sheet"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:29:53.661Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90b9b8c6e0208263c5447",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Error:\n\nStopIteration encountered while trying to read file: Tech Universe.xlsx\n\nSolution:\n\nIt appears the file is corrupted create a new excel sheet",
          "id": "61f90b4e36669b3819b0f61e",
          "name": "Error: Import -\u003E StopIteration encountered while trying to read file: Tech Universe.xlsx",
          "idShort": 104,
          "shortLink": "HfY5rowZ"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:29:47.821Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90b7c0b73c62c51bfda00",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Error: Import -\u003E StopIteration encountered while trying to read file: Tech Universe.xlsx",
          "id": "61f90b4e36669b3819b0f61e",
          "idShort": 104,
          "shortLink": "HfY5rowZ"
        },
        "old": {
          "name": "Error: Import -\u003E"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:29:16.583Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90b5f833926175e7bf638",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- Adding import export\n- Error with excel up load\n- Description not allowed to be null\n- How to prevent adding duplicates with import",
          "id": "61f90b0cd9ebac54f0cd91f9",
          "name": "Things to write about",
          "idShort": 103,
          "shortLink": "NAHilQQv"
        },
        "old": {
          "desc": "- Adding import export\n- Error with excel up load\n- Description not allowed to be null"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:28:47.759Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90b4e36669b3819b0f627",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f90b4e36669b3819b0f61e",
          "name": "Error: Import -\u003E",
          "idShort": 104,
          "shortLink": "HfY5rowZ"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-01T10:28:30.065Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90b309aec07870a9828a0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "- Adding import export\n- Error with excel up load\n- Description not allowed to be null",
          "id": "61f90b0cd9ebac54f0cd91f9",
          "name": "Things to write about",
          "idShort": 103,
          "shortLink": "NAHilQQv"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T10:28:00.448Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f90b0cd9ebac54f0cd9202",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f90b0cd9ebac54f0cd91f9",
          "name": "Things to write about",
          "idShort": 103,
          "shortLink": "NAHilQQv"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-01T10:27:24.245Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8f2a2fbfc8a41b52ade38",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f8f29285244d89760ef576",
          "name": "Django App Setup",
          "idShort": 102,
          "shortLink": "aMz3Ugfs"
        },
        "checklist": {
          "id": "61f8f2a2fbfc8a41b52ade2d",
          "name": "Order of setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addChecklistToCard",
      "date": "2022-02-01T08:43:14.277Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8f29893ca9b35fbda396b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "pos": 16383.75,
          "id": "61f8f28c5d8a9d60dd0e65ee",
          "name": "Setup"
        },
        "old": {
          "pos": 1114111
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2022-02-01T08:43:04.916Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8f29285244d89760ef57f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f8f29285244d89760ef576",
          "name": "Django App Setup",
          "idShort": 102,
          "shortLink": "aMz3Ugfs"
        },
        "list": {
          "id": "61f8f28c5d8a9d60dd0e65ee",
          "name": "Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-01T08:42:58.986Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8f28c5d8a9d60dd0e65f4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61f8f28c5d8a9d60dd0e65ee",
          "name": "Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-02-01T08:42:52.628Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8ef634e79857870c870f2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "## ERROR:\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 367, in get_value\n    value = self.ENVIRON[var]\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/os.py\", line 675, in __getitem__\n    raise KeyError(key) from None\nKeyError: 'DATABASE_NAME'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"manage.py\", line 22, in \u003Cmodule\u003E\n    main()\n  File \"manage.py\", line 18, in main\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/__init__.py\", line 419, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/__init__.py\", line 413, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/base.py\", line 354, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 61, in execute\n    super().execute(*args, **options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/base.py\", line 398, in execute\n    output = self.handle(*args, **options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 68, in handle\n    if not settings.DEBUG and not settings.ALLOWED_HOSTS:\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 82, in __getattr__\n    self._setup(name)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 69, in _setup\n    self._wrapped = Settings(settings_module)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 170, in __init__\n    mod = importlib.import_module(self.SETTINGS_MODULE)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/importlib/__init__.py\", line 127, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 1014, in _gcd_import\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 991, in _find_and_load\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 975, in _find_and_load_unlocked\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 671, in _load_unlocked\n  File \"\u003Cfrozen importlib._bootstrap_external\u003E\", line 848, in exec_module\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 219, in _call_with_frames_removed\n  File \"/Users/osborncourtney/Development/DV/garage/lon-meta-universe/django-app/main/settings.py\", line 83, in \u003Cmodule\u003E\n    'NAME': env('DATABASE_NAME'),\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 175, in __call__\n    return self.get_value(\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 371, in get_value\n    raise ImproperlyConfigured(error_msg)\ndjango.core.exceptions.ImproperlyConfigured: Set the DATABASE_NAME environment variable\nmake: *** [run] Error 1\n```\n\n## SOLUTION:\n\n- Put your `.env` file in the same folder as the settings.py",
          "id": "61f8ef22dccf1f5effa55a06",
          "name": "Error: Set the DATABASE_NAME environment variable",
          "idShort": 101,
          "shortLink": "CQvUWnar"
        },
        "old": {
          "desc": "ERROR:\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 367, in get_value\n    value = self.ENVIRON[var]\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/os.py\", line 675, in __getitem__\n    raise KeyError(key) from None\nKeyError: 'DATABASE_NAME'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"manage.py\", line 22, in \u003Cmodule\u003E\n    main()\n  File \"manage.py\", line 18, in main\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/__init__.py\", line 419, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/__init__.py\", line 413, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/base.py\", line 354, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 61, in execute\n    super().execute(*args, **options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/base.py\", line 398, in execute\n    output = self.handle(*args, **options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 68, in handle\n    if not settings.DEBUG and not settings.ALLOWED_HOSTS:\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 82, in __getattr__\n    self._setup(name)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 69, in _setup\n    self._wrapped = Settings(settings_module)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 170, in __init__\n    mod = importlib.import_module(self.SETTINGS_MODULE)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/importlib/__init__.py\", line 127, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 1014, in _gcd_import\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 991, in _find_and_load\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 975, in _find_and_load_unlocked\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 671, in _load_unlocked\n  File \"\u003Cfrozen importlib._bootstrap_external\u003E\", line 848, in exec_module\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 219, in _call_with_frames_removed\n  File \"/Users/osborncourtney/Development/DV/garage/lon-meta-universe/django-app/main/settings.py\", line 83, in \u003Cmodule\u003E\n    'NAME': env('DATABASE_NAME'),\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 175, in __call__\n    return self.get_value(\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 371, in get_value\n    raise ImproperlyConfigured(error_msg)\ndjango.core.exceptions.ImproperlyConfigured: Set the DATABASE_NAME environment variable\nmake: *** [run] Error 1\n```\n\nSOLUTION:\n\n- Put your `.env` file in the same folder as the settings.py"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T08:29:23.870Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8ef5523db3b649a152d0f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 367, in get_value\n    value = self.ENVIRON[var]\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/os.py\", line 675, in __getitem__\n    raise KeyError(key) from None\nKeyError: 'DATABASE_NAME'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"manage.py\", line 22, in \u003Cmodule\u003E\n    main()\n  File \"manage.py\", line 18, in main\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/__init__.py\", line 419, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/__init__.py\", line 413, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/base.py\", line 354, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 61, in execute\n    super().execute(*args, **options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/base.py\", line 398, in execute\n    output = self.handle(*args, **options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 68, in handle\n    if not settings.DEBUG and not settings.ALLOWED_HOSTS:\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 82, in __getattr__\n    self._setup(name)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 69, in _setup\n    self._wrapped = Settings(settings_module)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 170, in __init__\n    mod = importlib.import_module(self.SETTINGS_MODULE)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/importlib/__init__.py\", line 127, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 1014, in _gcd_import\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 991, in _find_and_load\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 975, in _find_and_load_unlocked\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 671, in _load_unlocked\n  File \"\u003Cfrozen importlib._bootstrap_external\u003E\", line 848, in exec_module\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 219, in _call_with_frames_removed\n  File \"/Users/osborncourtney/Development/DV/garage/lon-meta-universe/django-app/main/settings.py\", line 83, in \u003Cmodule\u003E\n    'NAME': env('DATABASE_NAME'),\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 175, in __call__\n    return self.get_value(\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 371, in get_value\n    raise ImproperlyConfigured(error_msg)\ndjango.core.exceptions.ImproperlyConfigured: Set the DATABASE_NAME environment variable\nmake: *** [run] Error 1\n```\n\nSOLUTION:\n\n- Put your `.env` file in the same folder as the settings.py",
          "id": "61f8ef22dccf1f5effa55a06",
          "name": "Error: Set the DATABASE_NAME environment variable",
          "idShort": 101,
          "shortLink": "CQvUWnar"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T08:29:09.718Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8ef22dccf1f5effa55a0f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f8ef22dccf1f5effa55a06",
          "name": "Error: Set the DATABASE_NAME environment variable",
          "idShort": 101,
          "shortLink": "CQvUWnar"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-02-01T08:28:18.505Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8ed925c354f0e7e0c3080",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Setting up Environment variables & database",
          "id": "61f3c167940cca51160d2e8d",
          "idShort": 92,
          "shortLink": "5BjIFcvy"
        },
        "old": {
          "name": "Setting up Environment variables"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T08:21:38.179Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8ebcd49d2fb29d37a754d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n",
          "id": "61f40225e1c29e6a4ce854a3",
          "name": "Database setup locally Readme",
          "idShort": 96,
          "shortLink": "kdrh8NGK"
        },
        "old": {
          "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n\n\n# .example.env File\n\n```\nDATABASE_NAME=\nDATABASE_USER=\nDATABASE_PASSWORD=\nDATABASE_HOST=\nDATABASE_PORT=\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T08:14:05.811Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8eb250d5d30296e50dfe5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Makefile: Access and Setup Postgres Commands",
          "id": "61f3b06d3cc6e730629a9eef",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "name": "Access and Setup Postgres Commands"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T08:11:17.866Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f8e50e62db474473fbadc4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project-name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-project/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nCreating an app\n\n- What’s the difference between a project and an app? An app is a web application that does something – e.g., a blog system, a database of public records or a small poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects.\n\nRun:\n\n```\n$ python manage.py startapp app-name\n```\n\nFile structure:\n\n```\napp-name/\n    __init__.py\n    admin.py\n    apps.py\n    migrations/\n        __init__.py\n    models.py\n    tests.py\n    views.py\n```",
          "id": "61f3adf92ec6571d01f6efd3",
          "name": "Install Django and Create Project and Apps",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "old": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-project/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nCreating an app\n\n- What’s the difference between a project and an app? An app is a web application that does something – e.g., a blog system, a database of public records or a small poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects.\n\nRun:\n\n```\n$ python manage.py startapp app-name\n```\n\nFile structure:\n\n```\napp-name/\n    __init__.py\n    admin.py\n    apps.py\n    migrations/\n        __init__.py\n    models.py\n    tests.py\n    views.py\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-02-01T07:45:18.112Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f7c685f2900273718be7b4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.djangoproject.com/en/dev/ref/contrib/admin/#inlinemodeladmin-objects",
          "id": "61f7c682983dc46c3a34d6e9",
          "name": "Show related tables in admin view",
          "idShort": 100,
          "shortLink": "bkb8S7oD"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-31T11:22:45.749Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f7c682983dc46c3a34d6f2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f7c682983dc46c3a34d6e9",
          "name": "Show related tables in admin view",
          "idShort": 100,
          "shortLink": "bkb8S7oD"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-31T11:22:42.235Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f40cf69f2b0b8e5d6e213e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "To see all rows in a table in the code use:\n\n```\nPresentation.objects.all()\n```\n\nTo return in JSON format\n\n```\nfrom django.core import serializers\ndata = serializers.serialize('json', Presentation.objects.all())\nreturn HttpResponse(data, mimetype='application/json')\n```",
          "id": "61f3ef55e483da0c469339bb",
          "name": "View Data returned database object",
          "idShort": 95,
          "shortLink": "5cC3nZJN"
        },
        "old": {
          "desc": "To see all rows in a table in the code use:\n\n```\nPresentation.objects.all()\n```\n\nTo see it presented in JSON format\n\n```\ndata = serializers.serialize('json', Presentation.objects.all())\n```\n\nThen to return json, use:\n\n```\nreturn HttpResponse(data, mimetype='application/json')\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T15:34:14.519Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f4075d09f15b24ec85e573",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Install Django and Create Project and Apps",
          "id": "61f3adf92ec6571d01f6efd3",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "old": {
          "name": "Install and Setup Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T15:10:21.434Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f4073d844d1d50153e958e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Setup Postgresql Database from scratch",
          "id": "61f3c5713ec9506942d8ed57",
          "idShort": 93,
          "shortLink": "DHY86hIg"
        },
        "old": {
          "name": "Setup Database from scratch"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T15:09:49.487Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f40437da314e6493f9959e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# Django App\n\n## Running Locally\n\n1. [Setup Postgresql Database Locally](./docs/DATABASE_SETUP.md)\n2. [Run Migration](#run-migration)\n3. [Create Super](#create-super-user)\n4. [Run Server](#run-server)\n\n### Run Migration\n\n```\n$ make migrate\n```\n\n### Create Super User\n\n- This will allow you access to the admin panel\n\n```\n$ make create_su\n```\n\n### Run Server\n\n```\n$ make run\n```\n\n- Go to http://127.0.0.1:8000/admin\n\n\n## Using Production\n\nUrl is currently: https://gyxb0e5ab7.execute-api.eu-west-2.amazonaws.com/production/\n\n### Admin\n\nhttps://gyxb0e5ab7.execute-api.eu-west-2.amazonaws.com/production/admin\n\n- Get user name and password from garage 1password\n\n### Endpoints\n\nhttps://gyxb0e5ab7.execute-api.eu-west-2.amazonaws.com/production/\n\nMethod: GET\nHeaders:\n\tAuthorization: Api-Key \u003CApi Key\u003E\n\nApi Key\n\n- You can generate on in django admin",
          "id": "61f40431b090b54f7d38ac68",
          "name": "Readme Django Postgresql Template",
          "idShort": 99,
          "shortLink": "Gr37HeKp"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T14:56:55.830Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f40431b090b54f7d38ac71",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f40431b090b54f7d38ac68",
          "name": "Readme Django Postgresql Template",
          "idShort": 99,
          "shortLink": "Gr37HeKp"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T14:56:49.030Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f40403b3ebb7140c6dd72a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# Postgresql Commands\n\nHere are some of the basic \n\nTo see all databases\n\n```\n$ psql postgres\n```\n\nList all databases:\n\n```\n# \\l\n```\n\nConnect to database:\n\n```\n# \\c \u003Cdatabase name\u003E\n```\n\nShow tables:\n\n```\n# \\dt\n```\n\nMore information of tables:\n\n```\n# \\dt+\n```\n\nQuit:\n\n```\n#\\q\n```",
          "id": "61f403fe0ce1be817a855b6c",
          "name": "Postgresql Command Readme",
          "idShort": 98,
          "shortLink": "En1dKXxC"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T14:56:03.627Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f403fe0ce1be817a855b75",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f403fe0ce1be817a855b6c",
          "name": "Postgresql Command Readme",
          "idShort": 98,
          "shortLink": "En1dKXxC"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T14:55:58.833Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f40309f96e468a342b5d81",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# .example.env File\n\n```\nDATABASE_NAME=\nDATABASE_USER=\nDATABASE_PASSWORD=\nDATABASE_HOST=\nDATABASE_PORT=\n```",
          "id": "61f40304a78572677bf0a543",
          "name": ".example.env.file",
          "idShort": 97,
          "shortLink": "1malVU43"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T14:51:53.485Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f40304a78572677bf0a54c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f40304a78572677bf0a543",
          "name": ".example.env.file",
          "idShort": 97,
          "shortLink": "1malVU43"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T14:51:48.463Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f402f32706680c1430b83f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Database setup locally Readme",
          "id": "61f40225e1c29e6a4ce854a3",
          "idShort": 96,
          "shortLink": "kdrh8NGK"
        },
        "old": {
          "name": "Database setup locally"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T14:51:31.204Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f402daebd21233b2a73f69",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n\n\n# .example.env File\n\n```\nDATABASE_NAME=\nDATABASE_USER=\nDATABASE_PASSWORD=\nDATABASE_HOST=\nDATABASE_PORT=\n```\n",
          "id": "61f40225e1c29e6a4ce854a3",
          "name": "Database setup locally",
          "idShort": 96,
          "shortLink": "kdrh8NGK"
        },
        "old": {
          "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n\n\n# .env File\n\n```\nDATABASE_NAME=\nDATABASE_USER=\nDATABASE_PASSWORD=\nDATABASE_HOST=\nDATABASE_PORT=\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T14:51:06.479Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f402c42ef8e138cce3c9b1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n\n\n# .env File\n\n```\nDATABASE_NAME=\nDATABASE_USER=\nDATABASE_PASSWORD=\nDATABASE_HOST=\nDATABASE_PORT=\n```\n",
          "id": "61f40225e1c29e6a4ce854a3",
          "name": "Database setup locally",
          "idShort": 96,
          "shortLink": "kdrh8NGK"
        },
        "old": {
          "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n\n# .env File\n\n```\nDATABASE_NAME=\nDATABASE_USER=\nDATABASE_PASSWORD=\nDATABASE_HOST=\nDATABASE_PORT=\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T14:50:44.104Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f402bb90a453480d2be204",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n\n# .env File\n\n```\nDATABASE_NAME=\nDATABASE_USER=\nDATABASE_PASSWORD=\nDATABASE_HOST=\nDATABASE_PORT=\n```\n",
          "id": "61f40225e1c29e6a4ce854a3",
          "name": "Database setup locally",
          "idShort": 96,
          "shortLink": "kdrh8NGK"
        },
        "old": {
          "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T14:50:35.775Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f4024809edcc4e25430142",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n",
          "id": "61f40225e1c29e6a4ce854a3",
          "name": "Database setup locally",
          "idShort": 96,
          "shortLink": "kdrh8NGK"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T14:48:40.512Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f40246b67130537d4fa19c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Database setup locally",
          "id": "61f40225e1c29e6a4ce854a3",
          "idShort": 96,
          "shortLink": "kdrh8NGK"
        },
        "old": {
          "name": "Python and postgres Makefile"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T14:48:38.035Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f40225e1c29e6a4ce854ad",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f40225e1c29e6a4ce854a3",
          "name": "Python and postgres Makefile",
          "idShort": 96,
          "shortLink": "kdrh8NGK"
        },
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T14:48:05.245Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f40215fcb06742bdbdab9a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61f40215fcb06742bdbdab94",
          "name": "Work Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-01-28T14:47:49.498Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3f081e1667d328d431994",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "To see all rows in a table in the code use:\n\n```\nPresentation.objects.all()\n```\n\nTo see it presented in JSON format\n\n```\ndata = serializers.serialize('json', Presentation.objects.all())\n```\n\nThen to return json, use:\n\n```\nreturn HttpResponse(data, mimetype='application/json')\n```",
          "id": "61f3ef55e483da0c469339bb",
          "name": "View Data returned database object",
          "idShort": 95,
          "shortLink": "5cC3nZJN"
        },
        "old": {
          "desc": "To see all rows in a table in the code use:\n\n```\nPresentation.objects.all()\n```\n\nTo see it presented in JSON format\n\n```\ndata = serializers.serialize('json', Presentation.objects.all())\n```\n\nThen to return json, use:\n\n```\nHttpResponse(data, mimetype='application/json')\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T13:32:49.076Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3f078b609708838ff4615",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "To see all rows in a table in the code use:\n\n```\nPresentation.objects.all()\n```\n\nTo see it presented in JSON format\n\n```\ndata = serializers.serialize('json', Presentation.objects.all())\n```\n\nThen to return json, use:\n\n```\nHttpResponse(data, mimetype='application/json')\n```",
          "id": "61f3ef55e483da0c469339bb",
          "name": "View Data returned database object",
          "idShort": 95,
          "shortLink": "5cC3nZJN"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T13:32:40.021Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3ef55e483da0c469339c4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f3ef55e483da0c469339bb",
          "name": "View Data returned database object",
          "idShort": 95,
          "shortLink": "5cC3nZJN"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T13:27:49.717Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3e9c4eb131d521e1168f5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://florimondmanca.github.io/djangorestframework-api-key/guide/",
          "id": "61f3e9b63f0c3c8191970cd4",
          "name": "Add Authorization to api endpoint",
          "idShort": 94,
          "shortLink": "bfFXUspx"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T13:04:04.737Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3e9b63f0c3c8191970cdd",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f3e9b63f0c3c8191970cd4",
          "name": "Add Authorization to api endpoint",
          "idShort": 94,
          "shortLink": "bfFXUspx"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T13:03:50.873Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3dcf19f2b9f50b7500e3f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-project/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nCreating an app\n\n- What’s the difference between a project and an app? An app is a web application that does something – e.g., a blog system, a database of public records or a small poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects.\n\nRun:\n\n```\n$ python manage.py startapp app-name\n```\n\nFile structure:\n\n```\napp-name/\n    __init__.py\n    admin.py\n    apps.py\n    migrations/\n        __init__.py\n    models.py\n    tests.py\n    views.py\n```",
          "id": "61f3adf92ec6571d01f6efd3",
          "name": "Install and Setup Django",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "old": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-project/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nCreating an app\n\n- What’s the difference between a project and an app? An app is a web application that does something – e.g., a blog system, a database of public records or a small poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects."
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T12:09:21.327Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3dcbb524450238fa0ea63",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-project/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nCreating an app\n\n- What’s the difference between a project and an app? An app is a web application that does something – e.g., a blog system, a database of public records or a small poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects.",
          "id": "61f3adf92ec6571d01f6efd3",
          "name": "Install and Setup Django",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "old": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-project/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T12:08:27.907Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3dbb009edcc4e252d626d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-project/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```",
          "id": "61f3adf92ec6571d01f6efd3",
          "name": "Install and Setup Django",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "old": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-porject/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T12:04:00.006Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3dbaabba319511d681016",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-porject/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```",
          "id": "61f3adf92ec6571d01f6efd3",
          "name": "Install and Setup Django",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "old": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T12:03:54.313Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c7305733d541a95cd8be",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Connect to see all DBs:  \n\n```\n$ psql postgres\n```\n\nList all databases:\n\n```\n# \\l\n```\n\nConnect to database: \n\n```\n# \\c \u003Cdatabase name\u003E\n```\n\nShow tables:\n\n```\n# \\dt\n```\n\nMore information of tables: \n\n```\n# \\dt+\n```\n\nSee table:\n\n```\n# select * from table name;\n```\n\n- DO NOT FORGET THE SEMI COLON -\u003E or you won't see anything\n\nQuit:\n\n```\n#\\q\n```",
          "id": "61f3b1a5bafa5d65a0703000",
          "name": "Database commands",
          "idShort": 91,
          "shortLink": "9XJgbnvX"
        },
        "old": {
          "desc": "List all databases:\n\n```\n# \\l\n```\n\nConnect to database: \n\n```\n# \\c \u003Cdatabase name\u003E\n```\n\nShow tables:\n\n```\n# \\dt\n```\n\nMore information of tables: \n\n```\n# \\dt+\n```\n\nQuit:\n\n```\n#\\q\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:36:32.685Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c698be70a1222f97ab95",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions](https://trello.com/c/5BjIFcvy/92-setting-up-environment-variables)\n\n- You can create your model.\n- Then you will need to add the name of the folder of your model to main/settings.py installes apps:\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'presentation' # This is the model\n]\n```\n\n- Then run the following:\n\n```\n$ python manage.py makemigrations presentation\n```\n\n- And then run:\n\n```\n$ python manage.py migrate\n```\n\nYou should now see the table in your database using [these instructions](https://trello.com/c/9XJgbnvX/91-database-commands)",
          "id": "61f3c5713ec9506942d8ed57",
          "name": "Setup Database from scratch",
          "idShort": 93,
          "shortLink": "DHY86hIg"
        },
        "old": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions](https://trello.com/c/5BjIFcvy/92-setting-up-environment-variables)\n\n- You can create your model.\n- Then you will need to add the name of the folder of your model to main/settings.py installes apps:\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'presentation' # This is the model\n]\n```\n\n- Then run the following:\n\n```\n$ python manage.py makemigrations presentation\n```\n\n- And then run:\n\n```\n$ python manage.py migrate\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:34:00.711Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c669745ad50bb7de0c57",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions](https://trello.com/c/5BjIFcvy/92-setting-up-environment-variables)\n\n- You can create your model.\n- Then you will need to add the name of the folder of your model to main/settings.py installes apps:\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'presentation' # This is the model\n]\n```\n\n- Then run the following:\n\n```\n$ python manage.py makemigrations presentation\n```\n\n- And then run:\n\n```\n$ python manage.py migrate\n```",
          "id": "61f3c5713ec9506942d8ed57",
          "name": "Setup Database from scratch",
          "idShort": 93,
          "shortLink": "DHY86hIg"
        },
        "old": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions](https://trello.com/c/5BjIFcvy/92-setting-up-environment-variables)\n\n- You can create your model.\n- Then you will need to add the name of the folder of your model to main/settings.py installes apps:\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'presentation' # This is the model\n]\n```\n\n- Then run the following:\n\n```\n$ python manage.py makemigrations presentation\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:33:13.950Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c64d0fdf9f22a1a7c5f9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions](https://trello.com/c/5BjIFcvy/92-setting-up-environment-variables)\n\n- You can create your model.\n- Then you will need to add the name of the folder of your model to main/settings.py installes apps:\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'presentation' # This is the model\n]\n```\n\n- Then run the following:\n\n```\n$ python manage.py makemigrations presentation\n```",
          "id": "61f3c5713ec9506942d8ed57",
          "name": "Setup Database from scratch",
          "idShort": 93,
          "shortLink": "DHY86hIg"
        },
        "old": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions](https://trello.com/c/5BjIFcvy/92-setting-up-environment-variables)\n\n- You can create your model.\n- Then you will need to add the name of the folder of your model to main/settings.py installes apps:\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'presentation' # This is the model\n]\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:32:45.104Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c62f3822b4578b66b551",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions](https://trello.com/c/5BjIFcvy/92-setting-up-environment-variables)\n\n- You can create your model.\n- Then you will need to add the name of the folder of your model to main/settings.py installes apps:\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'presentation' # This is the model\n]\n```",
          "id": "61f3c5713ec9506942d8ed57",
          "name": "Setup Database from scratch",
          "idShort": 93,
          "shortLink": "DHY86hIg"
        },
        "old": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions]()\n\nYou can create your model "
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:32:15.495Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c5e2c325f91df0bc9514",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions]()\n\nYou can create your model ",
          "id": "61f3c5713ec9506942d8ed57",
          "name": "Setup Database from scratch",
          "idShort": 93,
          "shortLink": "DHY86hIg"
        },
        "old": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:30:58.003Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c5b36c1b4d440a52ee0a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)",
          "id": "61f3c5713ec9506942d8ed57",
          "name": "Setup Database from scratch",
          "idShort": 93,
          "shortLink": "DHY86hIg"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:30:11.529Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c5713ec9506942d8ed60",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f3c5713ec9506942d8ed57",
          "name": "Setup Database from scratch",
          "idShort": 93,
          "shortLink": "DHY86hIg"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T10:29:05.588Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c3d0a12fdd09db6ac3d4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Start db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew",
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Access and Setup Postgres Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "desc": "Start db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:22:08.377Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c3766f049e260d962e96",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/",
          "id": "61f3adf92ec6571d01f6efd3",
          "name": "Install and Setup Django",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "old": {
          "desc": "https://docs.djangoproject.com/en/4.0/topics/install/"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:20:38.454Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c3400f29f245a0a8be25",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://alicecampkin.medium.com/how-to-set-up-environment-variables-in-django-f3c4db78c55f\n\nInstall django-environ\n\n```\n$ pip install django-environ\n```\n\nIn the file you are using the environment variables add the following:\n\n```\nimport environ\nenv = environ.Env()\nenviron.Env.read_env()\n```\n\nEnvironment variables will look as follows:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': env('DATABASE_NAME'),\n        'USER': env('DATABASE_USER'),\n        'PASSWORD': env('DATABASE_PASSWORD'),\n        'HOST': env('DATABASE_HOST'),\n        'PORT': env('DATABASE_PORT')\n    }\n}\n```\n\nAdd variables and values to .env\n\n```\nDATABASE_NAME=name_db\nDATABASE_USER=name_root_user\nDATABASE_PASSWORD=password\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\n```\n",
          "id": "61f3c167940cca51160d2e8d",
          "name": "Setting up Environment variables",
          "idShort": 92,
          "shortLink": "5BjIFcvy"
        },
        "old": {
          "desc": "https://alicecampkin.medium.com/how-to-set-up-environment-variables-in-django-f3c4db78c55f\n\nInstall django-environ\n\n```\n$ pip install django-environ\n```\n\nIn the file you are using the environment variables add the following:\n\n```\nimport environ\nenv = environ.Env()\nenviron.Env.read_env()\n```\n\nEnvironment variables will look as follows:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': env('DATABASE_NAME'),\n        'USER': env('DATABASE_USER'),\n        'PASSWORD': env('DATABASE_PASSWORD'),\n        'HOST': env('DATABASE_HOST'),\n        'PORT': env('DATABASE_PORT')\n    }\n}\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:19:44.989Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c316b8a55d391fa30656",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://alicecampkin.medium.com/how-to-set-up-environment-variables-in-django-f3c4db78c55f\n\nInstall django-environ\n\n```\n$ pip install django-environ\n```\n\nIn the file you are using the environment variables add the following:\n\n```\nimport environ\nenv = environ.Env()\nenviron.Env.read_env()\n```\n\nEnvironment variables will look as follows:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': env('DATABASE_NAME'),\n        'USER': env('DATABASE_USER'),\n        'PASSWORD': env('DATABASE_PASSWORD'),\n        'HOST': env('DATABASE_HOST'),\n        'PORT': env('DATABASE_PORT')\n    }\n}\n```\n",
          "id": "61f3c167940cca51160d2e8d",
          "name": "Setting up Environment variables",
          "idShort": 92,
          "shortLink": "5BjIFcvy"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T10:19:02.485Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3c167940cca51160d2e96",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f3c167940cca51160d2e8d",
          "name": "Setting up Environment variables",
          "idShort": 92,
          "shortLink": "5BjIFcvy"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T10:11:51.065Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b3a69a8b7633e1322181",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Start db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```",
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Access and Setup Postgres Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "desc": "Start db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nAccess db\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nCreate db\n\n```\n$ createdb -O sports_api_db_user sports_api_db\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T09:13:10.358Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b2a16f049e260d91dfd8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "List all databases:\n\n```\n# \\l\n```\n\nConnect to database: \n\n```\n# \\c \u003Cdatabase name\u003E\n```\n\nShow tables:\n\n```\n# \\dt\n```\n\nMore information of tables: \n\n```\n# \\dt+\n```\n\nQuit:\n\n```\n#\\q\n```",
          "id": "61f3b1a5bafa5d65a0703000",
          "name": "Database commands",
          "idShort": 91,
          "shortLink": "9XJgbnvX"
        },
        "old": {
          "desc": "List all databases:\n\n```\n# \\l\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T09:08:49.983Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b2062c736c17a1afe752",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "List all databases:\n\n```\n# \\l\n```",
          "id": "61f3b1a5bafa5d65a0703000",
          "name": "Database commands",
          "idShort": 91,
          "shortLink": "9XJgbnvX"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T09:06:14.638Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b1a5bafa5d65a0703009",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f3b1a5bafa5d65a0703000",
          "name": "Database commands",
          "idShort": 91,
          "shortLink": "9XJgbnvX"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T09:04:37.364Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b19865e6756bdeb60d17",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Access and Setup Postgres Commands",
          "id": "61f3b06d3cc6e730629a9eef",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "name": "Commands"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T09:04:24.761Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b12b6f859d501377f863",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Start db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nAccess db\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nCreate db\n\n```\n$ createdb -O sports_api_db_user sports_api_db\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```",
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "desc": "Start db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nAccess db\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T09:02:35.517Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b0cfc6a97965473cfd91",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Start db:\n\n```\n$ brew services start postgresql\n```\n\nStop db:\n\n```\n$ brew services stop postgresql\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nAccess db\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```",
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T09:01:03.647Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b06d3cc6e730629a9ef8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f3b06d3cc6e730629a9eef",
          "name": "Commands",
          "idShort": 90,
          "shortLink": "TQJkyQNA"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T08:59:25.743Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b03972565c5f5b228781",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\n```\nError: Failure while executing; `/bin/launchctl bootstrap gui/501 /Users/osborncourtney/Library/LaunchAgents/homebrew.mxcl.postgresql.plist` exited with 5.\n```\n\nRan:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nGot\n\n```\nFailure while executing; `/usr/local/opt/postgresql/bin/pg_upgrade\n```\n\nSOLUTION:\n\nRun:\n\n```\n$ brew services stop postgresql\n$ brew postgresql-upgrade-database\n$ brew services start postgresql\n```\n\nhttps://stackoverflow.com/questions/52539100/why-did-this-postgres-database-upgrade-fail\n\n",
          "id": "61f3af37eaa32e497b10b4d6",
          "name": "Error: Failure while executing;",
          "idShort": 89,
          "shortLink": "RCLDIL9T"
        },
        "old": {
          "desc": "ERROR:\n\n```\nError: Failure while executing; `/bin/launchctl bootstrap gui/501 /Users/osborncourtney/Library/LaunchAgents/homebrew.mxcl.postgresql.plist` exited with 5.\n```\n\nRan:\n\n```\n```\n\nGot\n\n```\nFailure while executing; `/usr/local/opt/postgresql/bin/pg_upgrade\n```\n\nSOLUTION:\n\nRun:\n\n```\nbrew services stop postgresql\nbrew postgresql-upgrade-database\nbrew services start postgresql\n```\n\nhttps://stackoverflow.com/questions/52539100/why-did-this-postgres-database-upgrade-fail\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T08:58:33.683Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3b017984c637418bc3f94",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\n```\nError: Failure while executing; `/bin/launchctl bootstrap gui/501 /Users/osborncourtney/Library/LaunchAgents/homebrew.mxcl.postgresql.plist` exited with 5.\n```\n\nRan:\n\n```\n```\n\nGot\n\n```\nFailure while executing; `/usr/local/opt/postgresql/bin/pg_upgrade\n```\n\nSOLUTION:\n\nRun:\n\n```\nbrew services stop postgresql\nbrew postgresql-upgrade-database\nbrew services start postgresql\n```\n\nhttps://stackoverflow.com/questions/52539100/why-did-this-postgres-database-upgrade-fail\n\n",
          "id": "61f3af37eaa32e497b10b4d6",
          "name": "Error: Failure while executing;",
          "idShort": 89,
          "shortLink": "RCLDIL9T"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T08:57:59.662Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3af37eaa32e497b10b4df",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f3af37eaa32e497b10b4d6",
          "name": "Error: Failure while executing;",
          "idShort": 89,
          "shortLink": "RCLDIL9T"
        },
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T08:54:15.074Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3af27997ed6344c23daa0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61f3af27997ed6344c23da9a",
          "name": "Postgres Database"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-01-28T08:53:59.012Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3ae0a92490341d66c3f77",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.djangoproject.com/en/4.0/topics/install/",
          "id": "61f3adf92ec6571d01f6efd3",
          "name": "Install and Setup Django",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T08:49:14.215Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3adf92ec6571d01f6efdc",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f3adf92ec6571d01f6efd3",
          "name": "Install and Setup Django",
          "idShort": 88,
          "shortLink": "QIFLy18N"
        },
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-28T08:48:57.963Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3adee70f14912fe191e44",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "idList": "61f3adec575c9c33c9c86e73",
          "id": "61f11c9e2a4ff919ed5b0cbf",
          "name": "Upgrade Django version",
          "idShort": 86,
          "shortLink": "ikoZdyIk"
        },
        "old": {
          "idList": "61f00805bc5d66175df5ae79"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "listBefore": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "listAfter": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-28T08:48:46.988Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f3adec575c9c33c9c86e79",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61f3adec575c9c33c9c86e73",
          "name": "Django"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-01-28T08:48:44.578Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f166f4b9f8b01368f35736",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html",
          "id": "61f166e734000d3e374464cb",
          "name": "Configuration and credential file settings",
          "idShort": 87,
          "shortLink": "Ee0pf5jT"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-26T15:21:24.646Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f166e734000d3e374464d3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f166e734000d3e374464cb",
          "name": "Configuration and credential file settings",
          "idShort": 87,
          "shortLink": "Ee0pf5jT"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-26T15:21:11.509Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f11dd3fa5b877f4fa37857",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://docs.djangoproject.com/en/4.0/howto/upgrade-version/\n\n```\npython -m django --version\n```\n\n-\u003E 3.2.11\n\n```\npython -m pip install -U Django\n```\n\n-\u003E Successfully installed Django-4.0.1 backports.zoneinfo-0.2.1\n\n```\npython -m django --version\n```\n\n-\u003E 4.0.1",
          "id": "61f11c9e2a4ff919ed5b0cbf",
          "name": "Upgrade Django version",
          "idShort": 86,
          "shortLink": "ikoZdyIk"
        },
        "old": {
          "desc": "```\npython -m django --version\n```\n\n-\u003E 3.2.11\n\n```\npython -m pip install -U Django\n```\n\n-\u003E Successfully installed Django-4.0.1 backports.zoneinfo-0.2.1\n\n```\npython -m django --version\n```\n\n-\u003E 4.0.1"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-26T10:09:23.523Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f11dbc1b98ab13f99a2414",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\npython -m django --version\n```\n\n-\u003E 3.2.11\n\n```\npython -m pip install -U Django\n```\n\n-\u003E Successfully installed Django-4.0.1 backports.zoneinfo-0.2.1\n\n```\npython -m django --version\n```\n\n-\u003E 4.0.1",
          "id": "61f11c9e2a4ff919ed5b0cbf",
          "name": "Upgrade Django version",
          "idShort": 86,
          "shortLink": "ikoZdyIk"
        },
        "old": {
          "desc": "```\npython -m django --version\n```\n\n-\u003E 3.2.11"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-26T10:09:00.497Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f11d9421f971406c4780e6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Upgrade Django version",
          "id": "61f11c9e2a4ff919ed5b0cbf",
          "idShort": 86,
          "shortLink": "ikoZdyIk"
        },
        "old": {
          "name": "Django version"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-26T10:08:20.649Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f11cb2ac7dfb42cacaacf4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\npython -m django --version\n```\n\n-\u003E 3.2.11",
          "id": "61f11c9e2a4ff919ed5b0cbf",
          "name": "Django version",
          "idShort": 86,
          "shortLink": "ikoZdyIk"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-26T10:04:34.383Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f11c9e2a4ff919ed5b0cc7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f11c9e2a4ff919ed5b0cbf",
          "name": "Django version",
          "idShort": 86,
          "shortLink": "ikoZdyIk"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-26T10:04:14.891Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f11b5e248edb37d7f43315",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Run:\n\n```\n$ source deactivate\n```",
          "id": "61f11b4e9bb4672b99ba319f",
          "name": "Deactivate virtual environment",
          "idShort": 85,
          "shortLink": "WtO3ltyI"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-26T09:58:54.353Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f11b4e9bb4672b99ba31a7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f11b4e9bb4672b99ba319f",
          "name": "Deactivate virtual environment",
          "idShort": 85,
          "shortLink": "WtO3ltyI"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-26T09:58:38.495Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f00942dc7ef8769c9c3ed1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Site: https://stackoverflow.com/questions/45577194/failed-to-activate-virtualenv-with-pyenv/45578839\n\nERROR:\n\n```\nFailed to activate virtualenv.\n\nPerhaps pyenv-virtualenv has not been loaded into your shell properly.\nPlease restart current shell and try again.\n```\n\nTHE SOLUTION:\n\n```\n$ open ~/.bash_profile\n```\n\nAdd the following to the bash_profile\n\n```\n$ eval \"$(pyenv init -)\"\n$ eval \"$(pyenv virtualenv-init -)\"\n```\n\nSave and open a new terminal, you should see the following:\n\n```\n(metaxp-venv) (base) DVL-W60YMHTDF:lon-garage-meta-exp-infra osborncourtney$\n```\n",
          "id": "61f0081eece2c73f2e530ae7",
          "name": "Error: Failed to activate virtualenv.",
          "idShort": 84,
          "shortLink": "S4ghwDM2"
        },
        "old": {
          "desc": "ERROR:\n\n```\nFailed to activate virtualenv.\n\nPerhaps pyenv-virtualenv has not been loaded into your shell properly.\nPlease restart current shell and try again.\n```\n\nTHE SOLUTION:\n\n```\n$ open ~/.bash_profile\n```\n\nAdd the following to the bash_profile\n\n```\n$ eval \"$(pyenv init -)\"\n$ eval \"$(pyenv virtualenv-init -)\"\n```\n\nSave and open a new terminal, you should see the following:\n\n```\n(metaxp-venv) (base) DVL-W60YMHTDF:lon-garage-meta-exp-infra osborncourtney$\n```\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-25T14:29:22.955Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f008ee03baab8dd42942f7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\n```\nFailed to activate virtualenv.\n\nPerhaps pyenv-virtualenv has not been loaded into your shell properly.\nPlease restart current shell and try again.\n```\n\nTHE SOLUTION:\n\n```\n$ open ~/.bash_profile\n```\n\nAdd the following to the bash_profile\n\n```\n$ eval \"$(pyenv init -)\"\n$ eval \"$(pyenv virtualenv-init -)\"\n```\n\nSave and open a new terminal, you should see the following:\n\n```\n(metaxp-venv) (base) DVL-W60YMHTDF:lon-garage-meta-exp-infra osborncourtney$\n```\n",
          "id": "61f0081eece2c73f2e530ae7",
          "name": "Error: Failed to activate virtualenv.",
          "idShort": 84,
          "shortLink": "S4ghwDM2"
        },
        "old": {
          "desc": "ERROR:\n\n```\nFailed to activate virtualenv.\n\nPerhaps pyenv-virtualenv has not been loaded into your shell properly.\nPlease restart current shell and try again.\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-25T14:27:58.641Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f00826072a337b3bac37f0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "ERROR:\n\n```\nFailed to activate virtualenv.\n\nPerhaps pyenv-virtualenv has not been loaded into your shell properly.\nPlease restart current shell and try again.\n```",
          "id": "61f0081eece2c73f2e530ae7",
          "name": "Error: Failed to activate virtualenv.",
          "idShort": 84,
          "shortLink": "S4ghwDM2"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-25T14:24:38.479Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f0081eece2c73f2e530aef",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61f0081eece2c73f2e530ae7",
          "name": "Error: Failed to activate virtualenv.",
          "idShort": 84,
          "shortLink": "S4ghwDM2"
        },
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-25T14:24:30.422Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61f00805bc5d66175df5ae7f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61f00805bc5d66175df5ae79",
          "name": "Python"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-01-25T14:24:05.117Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61eea12674945e09e6166e01",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Make sure you are in the root directory",
          "id": "61eea1181a25306f3e97e4c6",
          "name": "Error: getwd: invalid argument",
          "idShort": 83,
          "shortLink": "Yh6H4B7q"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-24T12:52:54.382Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61eea1181a25306f3e97e4ce",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61eea1181a25306f3e97e4c6",
          "name": "Error: getwd: invalid argument",
          "idShort": 83,
          "shortLink": "Yh6H4B7q"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-24T12:52:40.396Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ee7696b71e7a5c1d4f5abb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61ee7696b71e7a5c1d4f5ab3",
          "name": "Setup",
          "idShort": 82,
          "shortLink": "BqeWvR4L"
        },
        "list": {
          "id": "61ee7695680ed5898b0af044",
          "name": "Raspberry Pi"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-24T09:51:18.601Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ee7696af78b52b861955b4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "pos": 98303,
          "id": "61ee7695680ed5898b0af044",
          "name": "Raspberry Pi"
        },
        "old": {
          "pos": 851967
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2022-01-24T09:51:18.526Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ee7695680ed5898b0af04a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61ee7695680ed5898b0af044",
          "name": "Raspberry Pi"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-01-24T09:51:17.168Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61eabfea4710307674059c21",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Input (environment) variables -\u003E pros and cons",
          "id": "61eabadbbc34fd71a056defc",
          "idShort": 81,
          "shortLink": "6sdE3GLO"
        },
        "old": {
          "name": "Input (environment) variables"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-21T14:15:06.758Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61eabfe0d3580250a45cd8f4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://www.terraform.io/language/values/variables\n\nTerraform config file\n\nSetting variables options:\n\n- TF_VAR\n   -\u003E Append command.Env with each individual variable\n\n```\n\tcommand.Env = os.Environ()\n\tcommand.Env = append(command.Env, environmentVariable)\n\tcommand.Env = append(command.Env, awsAccountIdVariable)\n\tcommand.Env = append(command.Env, AwsRegionVariable )\n\tcommand.Env = append(command.Env, projectNameVariable)\n\tcommand.Dir = directory\n\tcommand.Stdout = os.Stdout\n\tcommand.Stderr = os.Stderr\n\tcommand.Stdin = os.Stdin\n\tcommand.Run()\n``` \n\nPros:\n\nYou can get exactly what you need, so if your config is not explicitly written the way terraform is expecting, it doesn't matter as you are providing the values \n\nCons: \n\n- It becomes very bulky setting each individually\n- When using Github workflow you are replying on having terraform cloud or you will have to set each variable in the workflow yml and put the value  in Github. You are also required to add each value to terraform cloud. This means the config file is there but not being used.\n- Passing the entire config through when only some of the values are used can be confusing -\u003E It is better to explicit\n- Bulky to create a struct in each command with the variables that need to be used in the command\n\n- var-config=\u003Cpath\u003E\n  -\u003E You create a json file with all the variables you need and terraform uses that\n\n\nPros: \n\n- All variables are in one file\n- You do not need to pass the configuration file through reducing the multiple parameters\n\n\nCons:\n\n- If you have additional variables in the config file that you are not using in Terrafom you get the following in the terminal\n\n```\n│ Warning: Value for undeclared variable\n│\n│ The root module does not declare a variable named \"AuthorizationKey\" but a value was found in file\n│ \"../websocket-generator-config.json\". If you meant to use this value, add a \"variable\" block to the configuration.\n│\n│ To silence these warnings, use TF_VAR_... environment variables to provide certain \"global\" settings to all\n│ configurations in your organization. To reduce the verbosity of these warnings, use the -compact-warnings option.\n╵\n╷\n│ Warning: Value for undeclared variable\n│\n│ The root module does not declare a variable named \"Environments\" but a value was found in file\n│ \"../websocket-generator-config.json\". If you meant to use this value, add a \"variable\" block to the configuration.\n│\n│ To silence these warnings, use TF_VAR_... environment variables to provide certain \"global\" settings to all\n│ configurations in your organization. To reduce the verbosity of these warnings, use the -compact-warnings option.\n╵\n╷\n│ Warning: Values for undeclared variables\n│\n│ In addition to the other similar warnings shown, 4 other variable(s) defined without being declared.\n╵\n```\n\n- You can't get environment specific variables when all environment variables are in the same config\n\n```\n\"development\": {\n    \"AwsAccountId\": \"1234\"\n  }\n```",
          "id": "61eabadbbc34fd71a056defc",
          "name": "Input (environment) variables",
          "idShort": 81,
          "shortLink": "6sdE3GLO"
        },
        "old": {
          "desc": "https://www.terraform.io/language/values/variables"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-21T14:14:56.651Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61eabade44b4cb5efbdf5ed4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://www.terraform.io/language/values/variables",
          "id": "61eabadbbc34fd71a056defc",
          "name": "Input (environment) variables",
          "idShort": 81,
          "shortLink": "6sdE3GLO"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-21T13:53:34.634Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61eabadbbc34fd71a056df04",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61eabadbbc34fd71a056defc",
          "name": "Input (environment) variables",
          "idShort": 81,
          "shortLink": "6sdE3GLO"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-21T13:53:31.438Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ea7e6c43e595054e744433",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://learn.hashicorp.com/tutorials/terraform/github-actions?utm_source=WEBSITE&utm_medium=WEB_IO&utm_offer=ARTICLE_PAGE&utm_content=DOCS",
          "id": "61ea7e6840390616243d9249",
          "name": "Github Action Workflow",
          "idShort": 80,
          "shortLink": "MdvqvtLh"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-21T09:35:40.327Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ea7e6840390616243d9251",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61ea7e6840390616243d9249",
          "name": "Github Action Workflow",
          "idShort": 80,
          "shortLink": "MdvqvtLh"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-21T09:35:36.767Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e9332cebba605fe1b8f851",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "If file path comes back as undefined in the build, make sure you have `:=` not just `=`",
          "id": "61e9330f642d36379afdd04b",
          "name": "File path undefined",
          "idShort": 79,
          "shortLink": "ThhTT5IG"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-20T10:02:20.935Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e9330f642d36379afdd053",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61e9330f642d36379afdd04b",
          "name": "File path undefined",
          "idShort": 79,
          "shortLink": "ThhTT5IG"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-20T10:01:51.201Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e929651693ee1370410507",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "ERROR on make build -\u003E can't find package",
          "id": "61e91acffdc7b269d4c3a44e",
          "idShort": 78,
          "shortLink": "Bth6TXi6"
        },
        "old": {
          "name": "ERROR on make build"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-20T09:20:37.322Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e91b29c4efe48ae97d3fb3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\ngo install github.com/CourtneyLO/websocket-generator\n../../../../go/src/github.com/spf13/viper/internal/encoding/hcl/codec.go:8:2: cannot find package \"github.com/hashicorp/hcl/hcl/printer\" in any of:\n\t/usr/local/Cellar/go/1.17.5/libexec/src/github.com/hashicorp/hcl/hcl/printer (from $GOROOT)\n\t/Users/osborncourtney/go/src/github.com/hashicorp/hcl/hcl/printer (from $GOPATH)\n```\n\nRun:\n\n```\n$  export GO111MODULE=on\n```\n\nand then try running `make build` again",
          "id": "61e91acffdc7b269d4c3a44e",
          "name": "ERROR on make build",
          "idShort": 78,
          "shortLink": "Bth6TXi6"
        },
        "old": {
          "desc": "```\ngo install github.com/CourtneyLO/websocket-generator\n../../../../go/src/github.com/spf13/viper/internal/encoding/hcl/codec.go:8:2: cannot find package \"github.com/hashicorp/hcl/hcl/printer\" in any of:\n\t/usr/local/Cellar/go/1.17.5/libexec/src/github.com/hashicorp/hcl/hcl/printer (from $GOROOT)\n\t/Users/osborncourtney/go/src/github.com/hashicorp/hcl/hcl/printer (from $GOPATH)\n```\n\nRun:\n\n```\n$\n```\n\nand then try running `make build` again"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-20T08:19:53.730Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e91b13b009d539d6df6edb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\ngo install github.com/CourtneyLO/websocket-generator\n../../../../go/src/github.com/spf13/viper/internal/encoding/hcl/codec.go:8:2: cannot find package \"github.com/hashicorp/hcl/hcl/printer\" in any of:\n\t/usr/local/Cellar/go/1.17.5/libexec/src/github.com/hashicorp/hcl/hcl/printer (from $GOROOT)\n\t/Users/osborncourtney/go/src/github.com/hashicorp/hcl/hcl/printer (from $GOPATH)\n```\n\nRun:\n\n```\n$\n```\n\nand then try running `make build` again",
          "id": "61e91acffdc7b269d4c3a44e",
          "name": "ERROR on make build",
          "idShort": 78,
          "shortLink": "Bth6TXi6"
        },
        "old": {
          "desc": "```\ngo install github.com/CourtneyLO/websocket-generator\n../../../../go/src/github.com/spf13/viper/internal/encoding/hcl/codec.go:8:2: cannot find package \"github.com/hashicorp/hcl/hcl/printer\" in any of:\n\t/usr/local/Cellar/go/1.17.5/libexec/src/github.com/hashicorp/hcl/hcl/printer (from $GOROOT)\n\t/Users/osborncourtney/go/src/github.com/hashicorp/hcl/hcl/printer (from $GOPATH)\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-20T08:19:31.036Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e91af3e5068608626267e8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "ERROR on make build",
          "id": "61e91acffdc7b269d4c3a44e",
          "idShort": 78,
          "shortLink": "Bth6TXi6"
        },
        "old": {
          "name": "ERROR: cannot find package \"github.com/hashicorp/hcl/hcl/printer\""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-20T08:18:59.025Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e91ae7b2500f6cda5a00ce",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\ngo install github.com/CourtneyLO/websocket-generator\n../../../../go/src/github.com/spf13/viper/internal/encoding/hcl/codec.go:8:2: cannot find package \"github.com/hashicorp/hcl/hcl/printer\" in any of:\n\t/usr/local/Cellar/go/1.17.5/libexec/src/github.com/hashicorp/hcl/hcl/printer (from $GOROOT)\n\t/Users/osborncourtney/go/src/github.com/hashicorp/hcl/hcl/printer (from $GOPATH)\n```",
          "id": "61e91acffdc7b269d4c3a44e",
          "name": "ERROR: cannot find package \"github.com/hashicorp/hcl/hcl/printer\"",
          "idShort": 78,
          "shortLink": "Bth6TXi6"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-20T08:18:47.260Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e91adc64cd5d0a94777e2b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "ERROR: cannot find package \"github.com/hashicorp/hcl/hcl/printer\"",
          "id": "61e91acffdc7b269d4c3a44e",
          "idShort": 78,
          "shortLink": "Bth6TXi6"
        },
        "old": {
          "name": "ERROR:"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-20T08:18:36.401Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e91ad61595f78d15347434",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "ERROR:",
          "id": "61e91acffdc7b269d4c3a44e",
          "idShort": 78,
          "shortLink": "Bth6TXi6"
        },
        "old": {
          "name": "ERROR: go install github.com/CourtneyLO/websocket-generator ../../../../go/src/github.com/spf13/viper/internal/encoding/hcl/codec.go:8:2: cannot find package \"github.com/hashicorp/hcl/hcl/printer\" in any of:"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-20T08:18:30.863Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e91acffdc7b269d4c3a456",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61e91acffdc7b269d4c3a44e",
          "name": "ERROR: go install github.com/CourtneyLO/websocket-generator ../../../../go/src/github.com/spf13/viper/internal/encoding/hcl/codec.go:8:2: cannot find package \"github.com/hashicorp/hcl/hcl/printer\" in any of:",
          "idShort": 78,
          "shortLink": "Bth6TXi6"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-20T08:18:23.525Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e7ecfd96e52e0effd2fb1d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nif answer == \"quit\" || answer == \"q\" {\n\t\tgoodbyeMessage.Println(\"Exiting WebSocket Generator, no configuration file has been created. Bye \" + goodbyeEmoji)\n\t\tos.Exit(-1)\n\t}\n```",
          "id": "61e7eceacaffc161d1d275bc",
          "name": "Exit out of current script",
          "idShort": 77,
          "shortLink": "eiBx11qs"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-19T10:50:37.203Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e7eceacaffc161d1d275c4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61e7eceacaffc161d1d275bc",
          "name": "Exit out of current script",
          "idShort": 77,
          "shortLink": "eiBx11qs"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-19T10:50:18.444Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e7ecce8560d15257182313",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nresult, error := prompt.Run()\n\nif errors.Is(error, promptui.ErrInterrupt) {\n\t\t\tgoodbyeMessage.Println(\"Exiting WebSocket Generator, no configuration file has been created. Bye \" + goodbyeEmoji)\n\t\t\tos.Exit(-1)\n\t\t}\n```",
          "id": "61e7ecb3e8361b5a27ce00b8",
          "name": "Promptui Control C",
          "idShort": 76,
          "shortLink": "j9hdLklJ"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-19T10:49:50.390Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e7ecbac27215681886a2d3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Promptui Control C",
          "id": "61e7ecb3e8361b5a27ce00b8",
          "idShort": 76,
          "shortLink": "j9hdLklJ"
        },
        "old": {
          "name": "Promptui Command C"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-19T10:49:30.271Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e7ecb3e8361b5a27ce00c0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61e7ecb3e8361b5a27ce00b8",
          "name": "Promptui Command C",
          "idShort": 76,
          "shortLink": "j9hdLklJ"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-19T10:49:23.428Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e58233a88de81bcc40a0d5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nExecution failed due to configuration error: Malformed Lambda proxy response\n```\n\nThis error means that we need to add a return object containing a status code and body in any WebSocket lambda handler including the connect and disconnect lambda to ensue it works properly. \n\n```\nreturn { statusCode: 200, body: \"Disconnected\" };\n```",
          "id": "61e5814ae3e6e36d8efa7a8c",
          "name": "Websocket: Execution failed due to configuration error: Malformed Lambda proxy response",
          "idShort": 75,
          "shortLink": "7Y3SL3hA"
        },
        "old": {
          "desc": "```\nExecution failed due to configuration error: Malformed Lambda proxy response\n```\n\nThis error means that we need to add a return object containing a status code and body in the connect and disconnect lambda to ensue it works properly. \n\n```\nreturn { statusCode: 200, body: \"Disconnected\" };\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-17T14:50:27.668Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e581c8a8c0a90572fc173d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nExecution failed due to configuration error: Malformed Lambda proxy response\n```\n\nThis error means that we need to add a return object containing a status code and body in the connect and disconnect lambda to ensue it works properly. \n\n```\nreturn { statusCode: 200, body: \"Disconnected\" };\n```",
          "id": "61e5814ae3e6e36d8efa7a8c",
          "name": "Websocket: Execution failed due to configuration error: Malformed Lambda proxy response",
          "idShort": 75,
          "shortLink": "7Y3SL3hA"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-17T14:48:40.534Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e5814ae3e6e36d8efa7a94",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61e5814ae3e6e36d8efa7a8c",
          "name": "Websocket: Execution failed due to configuration error: Malformed Lambda proxy response",
          "idShort": 75,
          "shortLink": "7Y3SL3hA"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-17T14:46:34.886Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61e55a07b1fd946cd6672a53",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Run the following:\n\n```\n$ export GO111MODULE=off\n```\n\n```\n$ go get github.com/CourtneyLO/websocket-generator\n```\n\nThen check to see if your src file is in the go file\n\n\n**Note**:\n\n`go get` will complain but it should still add the src file\n\n```\n$ go install github.com/CourtneyLO/websocket-generator@latest\n```\n\nWill complain as  `GO111MODULE` is set to off therefor `go get` has to be used\n\nONCE COMPLETED:\n\nRun:\n\n```\n$ export GO111MODULE=on\n```\n\nSo that make build will work in the package\n",
          "id": "61dd4bdaa72fcd7dbb4f3286",
          "name": "Get SRC file to download",
          "idShort": 71,
          "shortLink": "cmHl0299"
        },
        "old": {
          "desc": "Run the following:\n\n```\n$ export GO111MODULE=off\n```\n\n```\n$ go get github.com/CourtneyLO/websocket-generator\n```\n\nThen check to see if your src file is in the go file\n\n\n**Note**:\n\n`go get` will complain but it should still add the src file\n\n```\n$ go install github.com/CourtneyLO/websocket-generator@latest\n```\n\nWill complain as  `GO111MODULE` is set to off therefor `go get` has to be used\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-17T11:59:03.273Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ded10c78e3f975229507a7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n│ Error: Backend configuration changed\n│\n│ A change in the backend configuration has been detected, which may require migrating existing state.\n│\n│ If you wish to attempt automatic migration of the state, use \"terraform init -migrate-state\".\n│ If you wish to store the current configuration with no changes to the state, use \"terraform init -reconfigure\".\n```\n\nThis error means I made an init without commenting out the following in the main file:\n\n```\n  backend \"remote\" {\n    organization = \"BCGDV\"\n  \n    workspaces {\n      prefix = \"iot-playground-\"\n    }\n  }\n```\n\nIf this happens, comment this out and remove all terraform files and run the `make init`/`terraform init` again",
          "id": "61ded0add04b1c676bf29ada",
          "name": "Backend configuration changed",
          "idShort": 74,
          "shortLink": "YLQxIykS"
        },
        "old": {
          "desc": "```\n│ Error: Backend configuration changed\n│\n│ A change in the backend configuration has been detected, which may require migrating existing state.\n│\n│ If you wish to attempt automatic migration of the state, use \"terraform init -migrate-state\".\n│ If you wish to store the current configuration with no changes to the state, use \"terraform init -reconfigure\".\n```\n\nThis error means I made an init without commenting out the following in the main file:\n\n```\n  backend \"remote\" {\n    organization = \"BCGDV\"\n  \n    workspaces {\n      prefix = \"iot-playground-\"\n    }\n  }\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-12T13:01:00.420Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ded0e167297121b14b1c5b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n│ Error: Backend configuration changed\n│\n│ A change in the backend configuration has been detected, which may require migrating existing state.\n│\n│ If you wish to attempt automatic migration of the state, use \"terraform init -migrate-state\".\n│ If you wish to store the current configuration with no changes to the state, use \"terraform init -reconfigure\".\n```\n\nThis error means I made an init without commenting out the following in the main file:\n\n```\n  backend \"remote\" {\n    organization = \"BCGDV\"\n  \n    workspaces {\n      prefix = \"iot-playground-\"\n    }\n  }\n```",
          "id": "61ded0add04b1c676bf29ada",
          "name": "Backend configuration changed",
          "idShort": 74,
          "shortLink": "YLQxIykS"
        },
        "old": {
          "desc": "```\n│ Error: Backend configuration changed\n│\n│ A change in the backend configuration has been detected, which may require migrating existing state.\n│\n│ If you wish to attempt automatic migration of the state, use \"terraform init -migrate-state\".\n│ If you wish to store the current configuration with no changes to the state, use \"terraform init -reconfigure\".\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-12T13:00:17.098Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ded0bd7c547a5d0774969e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n│ Error: Backend configuration changed\n│\n│ A change in the backend configuration has been detected, which may require migrating existing state.\n│\n│ If you wish to attempt automatic migration of the state, use \"terraform init -migrate-state\".\n│ If you wish to store the current configuration with no changes to the state, use \"terraform init -reconfigure\".\n```",
          "id": "61ded0add04b1c676bf29ada",
          "name": "Backend configuration changed",
          "idShort": 74,
          "shortLink": "YLQxIykS"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-12T12:59:41.229Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ded0add04b1c676bf29ae2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61ded0add04b1c676bf29ada",
          "name": "Backend configuration changed",
          "idShort": 74,
          "shortLink": "YLQxIykS"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-12T12:59:25.299Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ded0467a51800c70faf5a5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$(info $(HOME))\n```\n\n=\u003E /Users/osborncourtney",
          "id": "61ded02d88409621c222f2f6",
          "name": "Print Home directory",
          "idShort": 73,
          "shortLink": "Ko0kvLKR"
        },
        "old": {
          "desc": "```\n$(info $(HOME))\n```\n\n-\u003E /Users/osborncourtney"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-12T12:57:42.198Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ded03fef3fe716772d5751",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$(info $(HOME))\n```\n\n-\u003E /Users/osborncourtney",
          "id": "61ded02d88409621c222f2f6",
          "name": "Print Home directory",
          "idShort": 73,
          "shortLink": "Ko0kvLKR"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-12T12:57:35.554Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61ded02d88409621c222f2fe",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61ded02d88409621c222f2f6",
          "name": "Print Home directory",
          "idShort": 73,
          "shortLink": "Ko0kvLKR"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-12T12:57:17.502Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dd5fede7b81a11dd12bea7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nconst mockDate = new Date(1466424490000)\nconst spy = jest\n  .spyOn(global, 'Date')\n  .mockImplementation(() =\u003E mockDate)\n```",
          "id": "61dd5fdb8d69704f25ff20ed",
          "name": "Mock date",
          "idShort": 72,
          "shortLink": "8jfENmAv"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61dd5fd7bacfba716d84e024",
          "name": "Jest"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-11T10:46:05.557Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dd5fdb8d69704f25ff20f5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61dd5fdb8d69704f25ff20ed",
          "name": "Mock date",
          "idShort": 72,
          "shortLink": "8jfENmAv"
        },
        "list": {
          "id": "61dd5fd7bacfba716d84e024",
          "name": "Jest"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-11T10:45:47.889Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dd5fd7bacfba716d84e02a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61dd5fd7bacfba716d84e024",
          "name": "Jest"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2022-01-11T10:45:43.448Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dd4ccdd152cb43ceb1bc53",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Run the following:\n\n```\n$ export GO111MODULE=off\n```\n\n```\n$ go get github.com/CourtneyLO/websocket-generator\n```\n\nThen check to see if your src file is in the go file\n\n\n**Note**:\n\n`go get` will complain but it should still add the src file\n\n```\n$ go install github.com/CourtneyLO/websocket-generator@latest\n```\n\nWill complain as  `GO111MODULE` is set to off therefor `go get` has to be used\n",
          "id": "61dd4bdaa72fcd7dbb4f3286",
          "name": "Get SRC file to download",
          "idShort": 71,
          "shortLink": "cmHl0299"
        },
        "old": {
          "desc": "Run the following:\n\n```\n$ export GO111MODULE=off\n```\n\n```\n$ go get github.com/CourtneyLO/websocket-generator\n```\n\nThen check to see if your src file is in the go file\n\n\nNote:\n\n`go get` will complain but it should still add the src file\n\n```\n$ go install github.com/CourtneyLO/websocket-generator@latest\n```\n\nWill complain as  `GO111MODULE` is set to off therefor `go get` has to be used\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-11T09:24:29.430Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dd4cc3bc96ef484192cf5c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Run the following:\n\n```\n$ export GO111MODULE=off\n```\n\n```\n$ go get github.com/CourtneyLO/websocket-generator\n```\n\nThen check to see if your src file is in the go file\n\n\nNote:\n\n`go get` will complain but it should still add the src file\n\n```\n$ go install github.com/CourtneyLO/websocket-generator@latest\n```\n\nWill complain as  `GO111MODULE` is set to off therefor `go get` has to be used\n",
          "id": "61dd4bdaa72fcd7dbb4f3286",
          "name": "Get SRC file to download",
          "idShort": 71,
          "shortLink": "cmHl0299"
        },
        "old": {
          "desc": "Run the following:\n\n```\n$ export GO111MODULE=off\n```\n\n```\n$ go get github.com/CourtneyLO/websocket-generator\n```\n\nThen check to see if your src file is in the go file\n\n\nNote:\n\n```\n$ go install github.com/CourtneyLO/websocket-generator@latest\n```\n\nWill complain as  `GO111MODULE` is set to off therefor `go get` has to be used\n\n`go get` will complain too but it should still add the src file"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-11T09:24:19.219Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dd4cabe939bf7da452062e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Run the following:\n\n```\n$ export GO111MODULE=off\n```\n\n```\n$ go get github.com/CourtneyLO/websocket-generator\n```\n\nThen check to see if your src file is in the go file\n\n\nNote:\n\n```\n$ go install github.com/CourtneyLO/websocket-generator@latest\n```\n\nWill complain as  `GO111MODULE` is set to off therefor `go get` has to be used\n\n`go get` will complain too but it should still add the src file",
          "id": "61dd4bdaa72fcd7dbb4f3286",
          "name": "Get SRC file to download",
          "idShort": 71,
          "shortLink": "cmHl0299"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-11T09:23:55.076Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dd4bdaa72fcd7dbb4f328e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61dd4bdaa72fcd7dbb4f3286",
          "name": "Get SRC file to download",
          "idShort": 71,
          "shortLink": "cmHl0299"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-11T09:20:26.890Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc700abaa1eb6456b7b73d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Check go version:\n\n```\n$ go version\n```\n=\u003E go version go1.16.13 darwin/amd64\n\nInstall new version\n\n```\n$ brew install go@1.17\n```\n\nUnlink go \n\n```\nbrew unlink go\n```\n\nForce link\n\n```\nbrew link --force go@1.17\n```\n\n```\n$ go version\n```\n=\u003E go version go1.17.5 darwin/amd64",
          "id": "61dc6f6b2f8fe37c5c40e2fd",
          "name": "Changing go version",
          "idShort": 70,
          "shortLink": "LzN44XGA"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T17:42:34.594Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc6f6b2f8fe37c5c40e305",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61dc6f6b2f8fe37c5c40e2fd",
          "name": "Changing go version",
          "idShort": 70,
          "shortLink": "LzN44XGA"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-10T17:39:55.853Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc6f583e9899197b111418",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ export GOROOT=/usr/local/opt/go/libexec\n```\n(https://stackoverflow.com/questions/46693653/compile-version-go1-9-does-not-match-go-tool-version-go1-9-1)\n\n```\n$ export PATH=$PATH:$GOROOT/bin\n```",
          "id": "61dc616e5d097b69bf85d02f",
          "name": "Setting GOROOT and PATH",
          "idShort": 69,
          "shortLink": "HtKjopRA"
        },
        "old": {
          "desc": "```\n$ export GOROOT=/usr/local/opt/go/libexec\n```\n(https://stackoverflow.com/questions/46693653/compile-version-go1-9-does-not-match-go-tool-version-go1-9-1)\n```\n$ export PATH=$PATH:$GOROOT/bin\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T17:39:36.557Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc6f545e631030e01a047e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ export GOROOT=/usr/local/opt/go/libexec\n```\n(https://stackoverflow.com/questions/46693653/compile-version-go1-9-does-not-match-go-tool-version-go1-9-1)\n```\n$ export PATH=$PATH:$GOROOT/bin\n```",
          "id": "61dc616e5d097b69bf85d02f",
          "name": "Setting GOROOT and PATH",
          "idShort": 69,
          "shortLink": "HtKjopRA"
        },
        "old": {
          "desc": "```\n$ export GOROOT=/usr/local/opt/go/libexec\n```\n\n```\n$ export PATH=$PATH:$GOROOT/bin\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T17:39:32.486Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc6f15fa5fad7c800a75a4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ export GOROOT=/usr/local/opt/go/libexec\n```\n\n```\n$ export PATH=$PATH:$GOROOT/bin\n```",
          "id": "61dc616e5d097b69bf85d02f",
          "name": "Setting GOROOT and PATH",
          "idShort": 69,
          "shortLink": "HtKjopRA"
        },
        "old": {
          "desc": "```\n$ export GOROOT=/usr/local/go\n```\n\n```\n$ export PATH=$PATH:$GOROOT/bin\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T17:38:29.871Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc6f0e43e81067e85b8da5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ export GOROOT=/usr/local/go\n```\n\n```\n$ export PATH=$PATH:$GOROOT/bin\n```",
          "id": "61dc616e5d097b69bf85d02f",
          "name": "Setting GOROOT and PATH",
          "idShort": 69,
          "shortLink": "HtKjopRA"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T17:38:22.792Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc616e5d097b69bf85d037",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61dc616e5d097b69bf85d02f",
          "name": "Setting GOROOT and PATH",
          "idShort": 69,
          "shortLink": "HtKjopRA"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-10T16:40:14.919Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc59872f4f9e1802649e4e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Tagging",
          "id": "61d84e8fca9c7476f254b58f",
          "idShort": 63,
          "shortLink": "V5ZOlDmH"
        },
        "old": {
          "name": "Taging"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T16:06:31.149Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc09566018d66727dfc45c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Run the following :\n\n```\nexport GO111MODULE=off\n```",
          "id": "61dc092223c1ba0f97aeec42",
          "name": "Go Get Not Downloading to SRC Folder",
          "idShort": 68,
          "shortLink": "tYqiBq2j"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T10:24:22.361Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc092223c1ba0f97aeec4a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61dc092223c1ba0f97aeec42",
          "name": "Go Get Not Downloading to SRC Folder",
          "idShort": 68,
          "shortLink": "tYqiBq2j"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-10T10:23:30.404Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc0904377de83f4b25ba78",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "To setup the go path \n\n```\nexport GOPATH=$HOME/go\n```",
          "id": "61dc08f5be39766e8c07cf16",
          "name": "To set go path",
          "idShort": 67,
          "shortLink": "3KSqxuMJ"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T10:23:00.586Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc08f5be39766e8c07cf1f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61dc08f5be39766e8c07cf16",
          "name": "To set go path",
          "idShort": 67,
          "shortLink": "3KSqxuMJ"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-10T10:22:45.754Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc08edf0336f662281f2d4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "To see the current go path:\n\n```\n$ go env GOPATH\n```",
          "id": "61dc08d92b406067f512aff8",
          "name": "Check go path",
          "idShort": 66,
          "shortLink": "SKFLMZp7"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T10:22:37.282Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dc08d92b406067f512b000",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61dc08d92b406067f512aff8",
          "name": "Check go path",
          "idShort": 66,
          "shortLink": "SKFLMZp7"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-10T10:22:17.089Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dbfba556c28d4a11e40faf",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install go\n\n```\n$ brew update && brew install golang\n```\n\nAdd the workspace's bin subdirectory to your PATH\n\n```\n$ export PATH=$PATH:$(go env GOPATH)/bin\n```\n\n",
          "id": "61dbfb4dd0064907e2332c45",
          "name": "Go Setup",
          "idShort": 65,
          "shortLink": "shEk6cXG"
        },
        "old": {
          "desc": "Install go\n\n```\nbrew update && brew install golang\n```\n\nAdd the workspace's bin subdirectory to your PATH\n\n```\nexport PATH=$PATH:$(go env GOPATH)/bin\n```\n\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T09:25:57.599Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dbfb991ac18f38e7f8df31",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Install go\n\n```\nbrew update && brew install golang\n```\n\nAdd the workspace's bin subdirectory to your PATH\n\n```\nexport PATH=$PATH:$(go env GOPATH)/bin\n```\n\n",
          "id": "61dbfb4dd0064907e2332c45",
          "name": "Go Setup",
          "idShort": 65,
          "shortLink": "shEk6cXG"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-10T09:25:45.516Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61dbfb4dd0064907e2332c4d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61dbfb4dd0064907e2332c45",
          "name": "Go Setup",
          "idShort": 65,
          "shortLink": "shEk6cXG"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-10T09:24:29.594Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d84fc020f1c626c24b0318",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\ngo get github.com/CourtneyLO/websocket-generator@v0.2.0\n```",
          "id": "61d84fba68bde9235bb677ca",
          "name": "Get a specific package version",
          "idShort": 64,
          "shortLink": "NOzhBfob"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-07T14:35:44.696Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d84fba68bde9235bb677d2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61d84fba68bde9235bb677ca",
          "name": "Get a specific package version",
          "idShort": 64,
          "shortLink": "NOzhBfob"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-07T14:35:38.173Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d84fae8935b98515e9aef1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ git tag v0.1.0\n$ git push origin v0.1.0\n```",
          "id": "61d84e8fca9c7476f254b58f",
          "name": "Taging",
          "idShort": 63,
          "shortLink": "V5ZOlDmH"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-07T14:35:26.635Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d84e90ca9c7476f254b597",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61d84e8fca9c7476f254b58f",
          "name": "Taging",
          "idShort": 63,
          "shortLink": "V5ZOlDmH"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-07T14:30:40.003Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d5ad405d4e801266d949d4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ terraform workspace list\n```",
          "id": "61d5ad39b4b759182fc4444f",
          "name": "List Terraform work spaces",
          "idShort": 62,
          "shortLink": "EWqdbHSC"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-05T14:37:52.295Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d5ad39b4b759182fc4445a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61d5ad39b4b759182fc4444f",
          "name": "List Terraform work spaces",
          "idShort": 62,
          "shortLink": "EWqdbHSC"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-05T14:37:45.871Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d583fec2a8841c253a52fb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\ngoroutine 1 [running]:\nwebsocket-generator/cmd.terraformExecCommand(0x138c1da, 0x4, 0xc0000e0580, 0x2, 0x2)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/terraform.go:52 +0xe1f\nwebsocket-generator/cmd.InitTerraform(...)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/terraform.go:105\nwebsocket-generator/cmd.glob..func2(0x160cf80, 0xc0000e0580, 0x2, 0x2)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/create.go:16 +0xfa\ngithub.com/spf13/cobra.(*Command).execute(0x160cf80, 0xc0000e0520, 0x2, 0x2, 0x160cf80, 0xc0000e0520)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:860 +0x2c2\ngithub.com/spf13/cobra.(*Command).ExecuteC(0x160e380, 0x10014b0, 0x0, 0x0)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:974 +0x375\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:902\nwebsocket-generator/cmd.Execute()\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/root.go:25 +0x2d\nmain.main()\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/main.go:8 +0x25\n```\n\nError is with configFile[environmentLowerCase].(map[string]interface{})[\"AWSAccountID\"]",
          "id": "61d582fa27df514269202f1f",
          "name": "ERROR: websocket-generator/cmd.terraformExecCommand",
          "idShort": 61,
          "shortLink": "IWaWUGYd"
        },
        "old": {
          "desc": "```\ngoroutine 1 [running]:\nwebsocket-generator/cmd.terraformExecCommand(0x138c1da, 0x4, 0xc0000e0580, 0x2, 0x2)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/terraform.go:52 +0xe1f\nwebsocket-generator/cmd.InitTerraform(...)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/terraform.go:105\nwebsocket-generator/cmd.glob..func2(0x160cf80, 0xc0000e0580, 0x2, 0x2)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/create.go:16 +0xfa\ngithub.com/spf13/cobra.(*Command).execute(0x160cf80, 0xc0000e0520, 0x2, 0x2, 0x160cf80, 0xc0000e0520)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:860 +0x2c2\ngithub.com/spf13/cobra.(*Command).ExecuteC(0x160e380, 0x10014b0, 0x0, 0x0)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:974 +0x375\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:902\nwebsocket-generator/cmd.Execute()\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/root.go:25 +0x2d\nmain.main()\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/main.go:8 +0x25\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-05T11:41:50.987Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d583ef946848012cd093ce",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "ERROR: websocket-generator/cmd.terraformExecCommand",
          "id": "61d582fa27df514269202f1f",
          "idShort": 61,
          "shortLink": "IWaWUGYd"
        },
        "old": {
          "name": "ERROR:"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-05T11:41:35.637Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d583030cd3fb586aa825c1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\ngoroutine 1 [running]:\nwebsocket-generator/cmd.terraformExecCommand(0x138c1da, 0x4, 0xc0000e0580, 0x2, 0x2)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/terraform.go:52 +0xe1f\nwebsocket-generator/cmd.InitTerraform(...)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/terraform.go:105\nwebsocket-generator/cmd.glob..func2(0x160cf80, 0xc0000e0580, 0x2, 0x2)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/create.go:16 +0xfa\ngithub.com/spf13/cobra.(*Command).execute(0x160cf80, 0xc0000e0520, 0x2, 0x2, 0x160cf80, 0xc0000e0520)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:860 +0x2c2\ngithub.com/spf13/cobra.(*Command).ExecuteC(0x160e380, 0x10014b0, 0x0, 0x0)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:974 +0x375\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:902\nwebsocket-generator/cmd.Execute()\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/root.go:25 +0x2d\nmain.main()\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/main.go:8 +0x25\n```",
          "id": "61d582fa27df514269202f1f",
          "name": "ERROR:",
          "idShort": 61,
          "shortLink": "IWaWUGYd"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-05T11:37:39.970Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d582fa27df514269202f27",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61d582fa27df514269202f1f",
          "name": "ERROR:",
          "idShort": 61,
          "shortLink": "IWaWUGYd"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-05T11:37:30.490Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d5620c5b4eae12262d1216",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nfunc ReadFile(fileName string) map[string]interface{} {\n\tjsonFile, errorJsonFile := os.Open(fileName)\n\tif errorJsonFile != nil {\n\t\tfmt.Println(\"Open command in ReadFile failed with the following error\", errorJsonFile)\n\t}\n\tdefer jsonFile.Close()\n\n\tbyteValue, _ := ioutil.ReadAll(jsonFile)\n\n\tvar result map[string]interface{}\n\tjson.Unmarshal(byteValue, &result)\n\n\treturn result\n}\n```",
          "id": "61d561fc97e8550219f0ca1e",
          "name": "Read file with map response",
          "idShort": 60,
          "shortLink": "HRyOulpO"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2022-01-05T09:17:00.502Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61d561fc97e8550219f0ca26",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61d561fc97e8550219f0ca1e",
          "name": "Read file with map response",
          "idShort": 60,
          "shortLink": "HRyOulpO"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2022-01-05T09:16:44.759Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61c1ef68fcd5e4128e966e55",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\ntype QuestionDetails struct {\n\tQuestionLabel   string\n\tDefaultResponse string\n\tResponseLabel   string\n}\n\nQuestionsConfig := map[string]QuestionDetails{\n\t\t\"InfrastructureFilePath\":  {\n\t\t\tQuestionLabel: \"Infrastructure Code Location Path. Default value is \u003Ccurrent-directory\u003E/infrastructure\",\n\t\t\tDefaultResponse: \"infrastructure\",\n\t\t\tResponseLabel: \"Your Infrastructure Code Location Path:\",\n\t\t},\n\t\t\"WebsocketFilePath\":  {\n\t\t\tQuestionLabel: \"WebSocket Code Location Path. Default value is \u003Ccurrent-directory\u003E/websocket\",\n\t\t\tDefaultResponse: \"websocket\",\n\t\t\tResponseLabel: \"Your WebSocket Code Location Path:\",\n\t\t},\n\t\t\"AWSRegion\":  {\n\t\t\tQuestionLabel: \"AWS Region. Default value is eu-west-2\",\n\t\t\tDefaultResponse: \"eu-west-2\",\n\t\t\tResponseLabel: \"Your AWS Region:\",\n\t\t},\n\t\t\"AuthorizationKey\":  {\n\t\t\tQuestionLabel: \"Authorization Key Name. Default value is Authorization\",\n\t\t\tDefaultResponse: \"Authorization\",\n\t\t\tResponseLabel: \"Your Authorization Query Parameter Key is:\",\n\t\t},\n\t\t\"Environment\":  {\n\t\t\tQuestionLabel: \"Environment Name. Default value is Development\",\n\t\t\tDefaultResponse: \"Development\",\n\t\t\tResponseLabel: \"Environment Choosen:\",\n\t\t},\n\t\t\"AWSAccountID\":  {\n\t\t\tQuestionLabel: \"AWS Account ID\",\n\t\t\tDefaultResponse: \"\",\n\t\t\tResponseLabel: \"Your AWS Account ID:\",\n\t\t},\n\t}\n```",
          "id": "61c1ef50c3c6712f6593e2a0",
          "name": "Creating mapped structs",
          "idShort": 59,
          "shortLink": "ga9Y4lW8"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-21T15:14:48.091Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61c1ef50c3c6712f6593e2a8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61c1ef50c3c6712f6593e2a0",
          "name": "Creating mapped structs",
          "idShort": 59,
          "shortLink": "ga9Y4lW8"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-12-21T15:14:24.631Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61b1e81b5cc96140de52de50",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ terraform workspace new local\n```\n\nDocs: https://betterprogramming.pub/managing-multiple-environments-in-terraform-5b389da3a2ef",
          "id": "61b1e7ec89ca4b8f4a5edda4",
          "name": "Creating a new workspace so you can develop more than one environment locally",
          "idShort": 58,
          "shortLink": "P3FvNYYZ"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-09T11:27:23.715Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61b1e7ec89ca4b8f4a5eddad",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61b1e7ec89ca4b8f4a5edda4",
          "name": "Creating a new workspace so you can develop more than one environment locally",
          "idShort": 58,
          "shortLink": "P3FvNYYZ"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-12-09T11:26:36.513Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61af84270cf7e65f63e1c490",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "`terraform plan -var-file=./config.json`",
          "id": "61af84117f4c3a2b0246dd79",
          "name": "To use a config file for variables",
          "idShort": 57,
          "shortLink": "ZaO0Skua"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-07T15:56:23.067Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61af84117f4c3a2b0246dd82",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61af84117f4c3a2b0246dd79",
          "name": "To use a config file for variables",
          "idShort": 57,
          "shortLink": "ZaO0Skua"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-12-07T15:56:01.302Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61aa207ce0ee92772fa78f03",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "To un-stage the initial commit locally\n```\ngit update-ref -d HEAD\n```",
          "id": "61aa205bc8a921633cfb20b1",
          "name": "Remove the initial commit",
          "idShort": 56,
          "shortLink": "LRDa0gdL"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-03T13:49:48.950Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61aa205bc8a921633cfb20ba",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61aa205bc8a921633cfb20b1",
          "name": "Remove the initial commit",
          "idShort": 56,
          "shortLink": "LRDa0gdL"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-12-03T13:49:15.110Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61aa2031692aa366d4191d7f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "git rm --cached -r \u003Cfolder name\u003E\n\nTo force this command use `-f` at the end",
          "id": "61aa1ff3c4083908e919f8b4",
          "name": "Remove cached folders",
          "idShort": 55,
          "shortLink": "7cVjZ5ck"
        },
        "old": {
          "desc": "git rm --cached -r \u003Cfolder name\u003E"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-03T13:48:33.494Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61aa2024f962890fe83870b9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "git rm --cached -r \u003Cfolder name\u003E",
          "id": "61aa1ff3c4083908e919f8b4",
          "name": "Remove cached folders",
          "idShort": 55,
          "shortLink": "7cVjZ5ck"
        },
        "old": {
          "desc": "git rm --cached \u003Cfile name\u003E"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-03T13:48:20.069Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61aa20100d3d9d06f8bfabad",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "git rm --cached \u003Cfile name\u003E\n\nTo force this command use `-f` at the end",
          "id": "616ec44d83b6dc116748ed09",
          "name": "Remove cached files",
          "idShort": 43,
          "shortLink": "184YtCQj"
        },
        "old": {
          "desc": "git rm --cached \u003Cfile name\u003E"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-03T13:48:00.170Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61aa1ff3c4083908e919f8c3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61aa1ff3c4083908e919f8b4",
          "name": "Remove cached folders",
          "idShort": 55,
          "shortLink": "7cVjZ5ck"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "cardSource": {
          "id": "616ec44d83b6dc116748ed09",
          "name": "Remove cached files",
          "idShort": 43,
          "shortLink": "184YtCQj"
        }
      },
      "appCreator": null,
      "type": "copyCard",
      "date": "2021-12-03T13:47:31.870Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61a8a1b2b4dd614b39611554",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "This could mean that a comma is missing on the last property of the object.\n\nE.g:\n\nThis will cause this error:\n\n```\n{\n    name: John,\n    surname: Doe\n}\n```\n\nThe comma after Doe`,` will solve this error:\n\n```\n{\n    name: John,\n    surname: Doe,\n}\n```",
          "id": "61a8a10a29d74b0a7013b581",
          "name": "Error: syntax error: unexpected newline, expecting comma or }",
          "idShort": 54,
          "shortLink": "NZaRggcj"
        },
        "old": {
          "desc": "This could mean that a comma is missing on the last property of the object.\n\nE.g:\n\nThis will cause this error:\n\n```\n{\n    name: John,\n    surname: Doe\n}\n```\n\nThis will solve this error:\n\n```\n{\n    name: John,\n    surname: Doe,\n}\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-02T10:36:34.091Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61a8a19cbc4e7a435d197138",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "This could mean that a comma is missing on the last property of the object.\n\nE.g:\n\nThis will cause this error:\n\n```\n{\n    name: John,\n    surname: Doe\n}\n```\n\nThis will solve this error:\n\n```\n{\n    name: John,\n    surname: Doe,\n}\n```",
          "id": "61a8a10a29d74b0a7013b581",
          "name": "Error: syntax error: unexpected newline, expecting comma or }",
          "idShort": 54,
          "shortLink": "NZaRggcj"
        },
        "old": {
          "desc": "This could mean that a comma is missing on the last property of the object.\n\nE.g:\n\nThis will cause this error:\n\n```golang\n{\n    name: John,\n    surname: Doe\n}\n```\n\nThis will solve this error:\n\n```golang\n{\n    name: John,\n    surname: Doe,\n}\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-02T10:36:12.114Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61a8a18e2b7233292467398e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "This could mean that a comma is missing on the last property of the object.\n\nE.g:\n\nThis will cause this error:\n\n```golang\n{\n    name: John,\n    surname: Doe\n}\n```\n\nThis will solve this error:\n\n```golang\n{\n    name: John,\n    surname: Doe,\n}\n```",
          "id": "61a8a10a29d74b0a7013b581",
          "name": "Error: syntax error: unexpected newline, expecting comma or }",
          "idShort": 54,
          "shortLink": "NZaRggcj"
        },
        "old": {
          "desc": "This could mean that a comma is missing on the last property of the object.\n\nE.g:\n\nThis will cause this error:\n```golang\n{\n    name: John,\n    surname: Doe\n}\n```\n\nThis will solve this error:\n\n```golang\n{\n    name: John,\n    surname: Doe,\n}\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-02T10:35:58.661Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61a8a1870b3ba028f1b92326",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "This could mean that a comma is missing on the last property of the object.\n\nE.g:\n\nThis will cause this error:\n```golang\n{\n    name: John,\n    surname: Doe\n}\n```\n\nThis will solve this error:\n\n```golang\n{\n    name: John,\n    surname: Doe,\n}\n```",
          "id": "61a8a10a29d74b0a7013b581",
          "name": "Error: syntax error: unexpected newline, expecting comma or }",
          "idShort": 54,
          "shortLink": "NZaRggcj"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-02T10:35:51.923Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61a8a10f009f53252e67e025",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Error: syntax error: unexpected newline, expecting comma or }",
          "id": "61a8a10a29d74b0a7013b581",
          "idShort": 54,
          "shortLink": "NZaRggcj"
        },
        "old": {
          "name": "Error: `syntax error: unexpected newline, expecting comma or }`"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-12-02T10:33:51.565Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61a8a10a29d74b0a7013b58a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61a8a10a29d74b0a7013b581",
          "name": "Error: `syntax error: unexpected newline, expecting comma or }`",
          "idShort": 54,
          "shortLink": "NZaRggcj"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-12-02T10:33:46.773Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619f4da50aad36635e44b03a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nexport PATH=\"~/go/bin:$PATH\"\n```\n\nhttps://stackoverflow.com/questions/66952482/cobra-init-not-working-command-not-found",
          "id": "619f4d54a0880f056629924c",
          "name": "Add Package to $PATH",
          "idShort": 53,
          "shortLink": "fMJrP5v6"
        },
        "old": {
          "desc": "```\nexport PATH=\"~/go/bin:$PATH\"\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-25T08:47:33.796Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619f4d6c1cf5552674402f80",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nexport PATH=\"~/go/bin:$PATH\"\n```",
          "id": "619f4d54a0880f056629924c",
          "name": "Add Package to $PATH",
          "idShort": 53,
          "shortLink": "fMJrP5v6"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-25T08:46:36.810Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619f4d54a0880f0566299255",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "619f4d54a0880f056629924c",
          "name": "Add Package to $PATH",
          "idShort": 53,
          "shortLink": "fMJrP5v6"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-25T08:46:12.202Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619e06a629dd7a4cde93c084",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Look at the Route Selection Expression the last word in that expression is the key to your request object and the value is the custom route that you are choosing.\n\nFor example:\n\n**Route Selection Expression:**  `$request.body.action`\n\n**Custom route: ** `processing-event`\n\nRequest body should looks like the following:\n\n{\"action\": \"processing-event\", \"step\": \"generate-report-start\", \"info\": \"some info\"}\n\nSo the `action` (which comes from the route expression `$request.body.action`) should be set to the custom route you wish to hit (`processing-event`).\n\nThe rest of the information is up to you - you can just send:\n`{\"action\": \"processing-event\"}` if you don't want your lambda function to have any arguments.\n",
          "id": "619e051bba400113d05b4f97",
          "name": "WebSocket Custom Routes",
          "idShort": 52,
          "shortLink": "PVW22BUl"
        },
        "old": {
          "desc": "Look at the Route Selection Expression the last word in that expression is the key to your request object and the value is the custom route that you are choosing.\n\nFor example:\n\n**Route Selection Expression:**  `$request.body.action`\n\n**Custom route: ** `processing-event`\n\nRequest body should looks like the following:\n\n{\"action\": \"processing-event\", \"step\": \"generate-report-start\", \"info\": \"some info\"}\n\nSo the `action` (which comes from the route expression `$request.body.action`) should be set to the custom route you wish to hit (`processing-event`).\n\nThe rest of the information is up to you - you can just send:\n`{\"action\": \"processing-event\"}`\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-24T09:32:22.483Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619e06760c6f034cd0d2dd42",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Look at the Route Selection Expression the last word in that expression is the key to your request object and the value is the custom route that you are choosing.\n\nFor example:\n\n**Route Selection Expression:**  `$request.body.action`\n\n**Custom route: ** `processing-event`\n\nRequest body should looks like the following:\n\n{\"action\": \"processing-event\", \"step\": \"generate-report-start\", \"info\": \"some info\"}\n\nSo the `action` (which comes from the route expression `$request.body.action`) should be set to the custom route you wish to hit (`processing-event`).\n\nThe rest of the information is up to you - you can just send:\n`{\"action\": \"processing-event\"}`\n",
          "id": "619e051bba400113d05b4f97",
          "name": "WebSocket Custom Routes",
          "idShort": 52,
          "shortLink": "PVW22BUl"
        },
        "old": {
          "desc": "Look at the Route Selection Expression the last work in that expression is the key to your request object and the value is the custom route that you are choosing.\n\nFor example:\n\n**Route Selection Expression:**  `$request.body.action`\n\n**Custom route: ** `processing-event`\n\nRequest body should looks like the following:\n\n{\"action\": \"processing-event\", \"step\": \"generate-report-start\", \"info\": \"some info\"}\n\nSo the `action` (which comes from the route expression `$request.body.action`) should be set to the custom route you wish to hit (`processing-event`).\n\nThe rest of the information is up to you - you can just send:\n`{\"action\": \"processing-event\"}`\n"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-24T09:31:34.460Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619e066ce68546565b4df6cc",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Look at the Route Selection Expression the last work in that expression is the key to your request object and the value is the custom route that you are choosing.\n\nFor example:\n\n**Route Selection Expression:**  `$request.body.action`\n\n**Custom route: ** `processing-event`\n\nRequest body should looks like the following:\n\n{\"action\": \"processing-event\", \"step\": \"generate-report-start\", \"info\": \"some info\"}\n\nSo the `action` (which comes from the route expression `$request.body.action`) should be set to the custom route you wish to hit (`processing-event`).\n\nThe rest of the information is up to you - you can just send:\n`{\"action\": \"processing-event\"}`\n",
          "id": "619e051bba400113d05b4f97",
          "name": "WebSocket Custom Routes",
          "idShort": 52,
          "shortLink": "PVW22BUl"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-24T09:31:24.358Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619e057a13d77e2e138e0ac0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "WebSocket Custom Routes",
          "id": "619e051bba400113d05b4f97",
          "idShort": 52,
          "shortLink": "PVW22BUl"
        },
        "old": {
          "name": "Websocket Custom events"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-24T09:27:22.010Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619e051bba400113d05b4fa0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "619e051bba400113d05b4f97",
          "name": "Websocket Custom events",
          "idShort": 52,
          "shortLink": "PVW22BUl"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-24T09:25:47.938Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619d13961c671b47de78186f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "`User is not authorized to access this resource`\n\nhttps://forum.serverless.com/t/user-is-not-authorized-to-access-this-resource/6357",
          "id": "619d137f03b35446e3d3e4dd",
          "name": "ERROR: User is not authorized to access this resource",
          "idShort": 51,
          "shortLink": "pwMZFw8w"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-23T16:15:18.332Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619d137f03b35446e3d3e4e6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "619d137f03b35446e3d3e4dd",
          "name": "ERROR: User is not authorized to access this resource",
          "idShort": 51,
          "shortLink": "pwMZFw8w"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-23T16:14:55.383Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b73fc1157a33d407681d4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "'${USERS_NAME}'\n\ne.g \n```\ncd infrastructure; TF_VAR_ENV='${USERS_NAME}' terraform init; TF_VAR_ENV='${USERS_NAME}' terraform plan\n```",
          "id": "619b73e1113cd6137c7500d1",
          "name": "Print Out Variable as a String",
          "idShort": 50,
          "shortLink": "ulO0lLLN"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-22T10:42:04.789Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b73e1113cd6137c7500d9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "619b73e1113cd6137c7500d1",
          "name": "Print Out Variable as a String",
          "idShort": 50,
          "shortLink": "ulO0lLLN"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-22T10:41:37.790Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6affa4effc769cbf0769",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Get Word From String",
          "id": "619b6a5976318d81ad010a6e",
          "idShort": 48,
          "shortLink": "abo1rhuU"
        },
        "old": {
          "name": "Get Word from string"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-22T10:03:43.890Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6af875b73c4c8c07729d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "Get Path of Makefile",
          "id": "619b6a67401e5b5f5b1cc86b",
          "idShort": 49,
          "shortLink": "gkmJyfA9"
        },
        "old": {
          "name": "Get Path of makefile"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-22T10:03:36.304Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6ad4e564b91fce258d0d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "'/Users/osborncourtney/'\n\n```\nSPLIT_PATH=$(subst /, ,$(FILE_PATH))\nUSERS_NAME=$(word 2,$(USERS_NAME))\n```\n\n-\u003E osborncourtney",
          "id": "619b6a5976318d81ad010a6e",
          "name": "Get Word from string",
          "idShort": 48,
          "shortLink": "abo1rhuU"
        },
        "old": {
          "desc": "```\nSPLIT_PATH=$(subst /, ,$(FILE_PATH))\nUSERS_NAME=$(word 2,$(USERS_NAME))\n```"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-22T10:03:00.381Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6a9e521ba436d5b0e563",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nSPLIT_PATH=$(subst /, ,$(FILE_PATH))\nUSERS_NAME=$(word 2,$(USERS_NAME))\n```",
          "id": "619b6a5976318d81ad010a6e",
          "name": "Get Word from string",
          "idShort": 48,
          "shortLink": "abo1rhuU"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-22T10:02:06.213Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6a8dc8e3c932b86dbef3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nFILE_PATH=$(shell pwd)\n```",
          "id": "619b6a67401e5b5f5b1cc86b",
          "name": "Get Path of makefile",
          "idShort": 49,
          "shortLink": "gkmJyfA9"
        },
        "old": {
          "desc": "FILE_PATH=$(shell pwd)"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-22T10:01:49.716Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6a869ffc331821206b89",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "FILE_PATH=$(shell pwd)",
          "id": "619b6a67401e5b5f5b1cc86b",
          "name": "Get Path of makefile",
          "idShort": 49,
          "shortLink": "gkmJyfA9"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-22T10:01:42.523Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6a7d34a0906243883298",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "pos": 32767.5,
          "id": "619b6a67401e5b5f5b1cc86b",
          "name": "Get Path of makefile",
          "idShort": 49,
          "shortLink": "gkmJyfA9"
        },
        "old": {
          "pos": 131071
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-22T10:01:33.064Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6a67401e5b5f5b1cc873",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "619b6a67401e5b5f5b1cc86b",
          "name": "Get Path of makefile",
          "idShort": 49,
          "shortLink": "gkmJyfA9"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-22T10:01:11.454Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6a5976318d81ad010a76",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "619b6a5976318d81ad010a6e",
          "name": "Get Word from string",
          "idShort": 48,
          "shortLink": "abo1rhuU"
        },
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-22T10:00:57.231Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "619b6a4dee8487412f26ab89",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "619b6a4dee8487412f26ab83",
          "name": "Makefile"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-11-22T10:00:45.151Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "618cf6b788804e6272f5315b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Docker leaves dangling images around that can take up your space. To clean up, use the following:\n\n`$ docker system prune -af`\n\nAnd then restart docker",
          "id": "61696cbc53726f5066b67bbb",
          "name": "To clean up after docker",
          "idShort": 42,
          "shortLink": "PYPTyZRi"
        },
        "old": {
          "desc": "Docker leaves dangling images around that can take up your space. To clean up, use the following:\n\n`$ docker system prune -af`"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-11T10:55:51.550Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "618a84df8321646339ec2e24",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\n$ conda activate main\n$ jupyter notebook\n```\nShould load on the web browser and then just need to click `intorc-computer-vision.ipynb`\n",
          "id": "618a844fb1441b3eb3c8320a",
          "name": "Startup already installed pytorch",
          "idShort": 47,
          "shortLink": "t2N142WF"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-09T14:25:35.023Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "618a844fb1441b3eb3c83214",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "618a844fb1441b3eb3c8320a",
          "name": "Startup already installed pytorch",
          "idShort": 47,
          "shortLink": "t2N142WF"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-09T14:23:11.832Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6185240cb2f07902690c4863",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "What exactly is you shell path: https://medium.com/@jalendport/what-exactly-is-your-shell-path-2f076f02deb4\n\nIf you want to see what your path is currently set to, run `$ echo $PATH`",
          "id": "618523db2e7eb95e67dc6822",
          "name": "$PATH",
          "idShort": 46,
          "shortLink": "2H3jNrjb"
        },
        "old": {
          "desc": "What exactly is you shell path: https://medium.com/@jalendport/what-exactly-is-your-shell-path-2f076f02deb4"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-05T12:31:08.870Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "618523f23241ff37df097aa3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "What exactly is you shell path: https://medium.com/@jalendport/what-exactly-is-your-shell-path-2f076f02deb4",
          "id": "618523db2e7eb95e67dc6822",
          "name": "$PATH",
          "idShort": 46,
          "shortLink": "2H3jNrjb"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-05T12:30:42.414Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "618523db2e7eb95e67dc682a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "618523db2e7eb95e67dc6822",
          "name": "$PATH",
          "idShort": 46,
          "shortLink": "2H3jNrjb"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Command Line Interface"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-05T12:30:19.270Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "618523d64598f954c785c887",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "name": "Command Line Interface",
          "id": "610a75fead08eb401af18e5b"
        },
        "old": {
          "name": "Helpful Commands"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2021-11-05T12:30:14.996Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6180146e11b8c73fa32552a6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Add `cors: true` to yaml file\nAdd `\"Access-Control-Allow-Origin\" = \"*\"` to response headers",
          "id": "618014424344b75b31703b01",
          "name": "Serverless",
          "idShort": 45,
          "shortLink": "AB0aLARA"
        },
        "old": {
          "desc": "Add cors: true to yaml file\nAdd `\"Access-Control-Allow-Origin\" = \"*\"` to response headers"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "618014323cc9536e55c348eb",
          "name": "CORS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-01T16:23:10.982Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "618014667607260cbf9aa639",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Add cors: true to yaml file\nAdd `\"Access-Control-Allow-Origin\" = \"*\"` to response headers",
          "id": "618014424344b75b31703b01",
          "name": "Serverless",
          "idShort": 45,
          "shortLink": "AB0aLARA"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "618014323cc9536e55c348eb",
          "name": "CORS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-01T16:23:02.158Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "618014424344b75b31703b09",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "618014424344b75b31703b01",
          "name": "Serverless",
          "idShort": 45,
          "shortLink": "AB0aLARA"
        },
        "list": {
          "id": "618014323cc9536e55c348eb",
          "name": "CORS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-01T16:22:26.540Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "618014323cc9536e55c348f1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "618014323cc9536e55c348eb",
          "name": "CORS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-11-01T16:22:10.642Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61801427cb055e03df6dca18",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "```\nresp := events.APIGatewayProxyResponse{StatusCode: 200, Body: presignedURL}\nresp.Headers = make(map[string]string)\nresp.Headers[\"Access-Control-Allow-Origin\"] = \"*\"\nreturn resp, nil\n```",
          "id": "6180140e0cee943dbcbc1560",
          "name": "Adding response headers",
          "idShort": 44,
          "shortLink": "7n2b8V72"
        },
        "old": {
          "desc": "resp := events.APIGatewayProxyResponse{StatusCode: 200, Body: presignedURL}\nresp.Headers = make(map[string]string)\nresp.Headers[\"Access-Control-Allow-Origin\"] = \"*\"\nreturn resp, nil"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-01T16:21:59.787Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6180141e730d4b61115c1acf",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "resp := events.APIGatewayProxyResponse{StatusCode: 200, Body: presignedURL}\nresp.Headers = make(map[string]string)\nresp.Headers[\"Access-Control-Allow-Origin\"] = \"*\"\nreturn resp, nil",
          "id": "6180140e0cee943dbcbc1560",
          "name": "Adding response headers",
          "idShort": 44,
          "shortLink": "7n2b8V72"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-11-01T16:21:50.393Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6180140e0cee943dbcbc1568",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6180140e0cee943dbcbc1560",
          "name": "Adding response headers",
          "idShort": 44,
          "shortLink": "7n2b8V72"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-11-01T16:21:34.812Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "616ec45a202b741c2d27ff78",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "git rm --cached \u003Cfile name\u003E",
          "id": "616ec44d83b6dc116748ed09",
          "name": "Remove cached files",
          "idShort": 43,
          "shortLink": "184YtCQj"
        },
        "old": {
          "desc": "git rm --cached"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-19T13:12:58.285Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "616ec451780d740d8aa84a25",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "git rm --cached",
          "id": "616ec44d83b6dc116748ed09",
          "name": "Remove cached files",
          "idShort": 43,
          "shortLink": "184YtCQj"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-19T13:12:49.137Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "616ec44d83b6dc116748ed14",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "616ec44d83b6dc116748ed09",
          "name": "Remove cached files",
          "idShort": 43,
          "shortLink": "184YtCQj"
        },
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-10-19T13:12:45.341Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "616ec43e4d5eab8bac2f0804",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "616ec43e4d5eab8bac2f07fe",
          "name": "Git"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-10-19T13:12:30.393Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61696d0a0718b98339b43fa8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Docker leaves dangling images around that can take up your space. To clean up, use the following:\n\n`$ docker system prune -af`",
          "id": "61696cbc53726f5066b67bbb",
          "name": "To clean up after docker",
          "idShort": 42,
          "shortLink": "PYPTyZRi"
        },
        "old": {
          "desc": "`$ docker system prune -af`"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-15T11:59:06.909Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61696cdd7d7f075aae33991a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "text": "Found here: https://stackoverflow.com/questions/44664900/oserror-errno-28-no-space-left-on-device-docker-but-i-have-space",
        "textData": {
          "emoji": {

          }
        },
        "card": {
          "id": "61696cbc53726f5066b67bbb",
          "name": "To clean up after docker",
          "idShort": 42,
          "shortLink": "PYPTyZRi"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "commentCard",
      "date": "2021-10-15T11:58:21.479Z",
      "limits": {
        "reactions": {
          "perAction": {
            "status": "ok",
            "disableAt": 900,
            "warnAt": 720
          },
          "uniquePerAction": {
            "status": "ok",
            "disableAt": 17,
            "warnAt": 14
          }
        }
      },
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61696cd08891655f6f371b72",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "`$ docker system prune -af`",
          "id": "61696cbc53726f5066b67bbb",
          "name": "To clean up after docker",
          "idShort": 42,
          "shortLink": "PYPTyZRi"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-15T11:58:08.010Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61696ccff9b6dc123dde17ac",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "name": "To clean up after docker",
          "id": "61696cbc53726f5066b67bbb",
          "idShort": 42,
          "shortLink": "PYPTyZRi"
        },
        "old": {
          "name": "docker system prune -af"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-15T11:58:07.631Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61696cbc53726f5066b67bc3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61696cbc53726f5066b67bbb",
          "name": "docker system prune -af",
          "idShort": 42,
          "shortLink": "PYPTyZRi"
        },
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-10-15T11:57:48.472Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61696ca4dced65399ab88b8d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "61696ca4dced65399ab88b87",
          "name": "Docker"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-10-15T11:57:24.830Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61670352f575931971856efb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook\n\nInstall `conda install pytorch torchvision -c pytorch` in terminal rather that jupyter (as recommended in the above link) as command asks you for an input",
          "id": "61642e9ed23a96740f159213",
          "name": "SUPER HELPFUL",
          "idShort": 41,
          "shortLink": "DAPfTeeY"
        },
        "old": {
          "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook\n\nInstall `conda install pytorch torchvision -c pytorch` in terminal rather that jupyter (as recommended in the above link) as command askes you for an input"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-13T16:03:30.605Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6167034ef24201814ea6944a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook\n\nInstall `conda install pytorch torchvision -c pytorch` in terminal rather that jupyter (as recommended in the above link) as command askes you for an input",
          "id": "61642e9ed23a96740f159213",
          "name": "SUPER HELPFUL",
          "idShort": 41,
          "shortLink": "DAPfTeeY"
        },
        "old": {
          "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook\n\nInstall `conda install pytorch torchvision -c pytorch` in terminal rather that jupyter (as recommended in the above link) as command asked you for an input"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-13T16:03:26.188Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6167034416563d1b534c2e07",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook\n\nInstall `conda install pytorch torchvision -c pytorch` in terminal rather that jupyter (as recommended in the above link) as command asked you for an input",
          "id": "61642e9ed23a96740f159213",
          "name": "SUPER HELPFUL",
          "idShort": 41,
          "shortLink": "DAPfTeeY"
        },
        "old": {
          "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook\n\nInstall `conda install pytorch torchvision -c pytorch` in terminal rather that jupter as command asked you for an input"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-13T16:03:16.911Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6167032e84a99201544283fd",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook\n\nInstall `conda install pytorch torchvision -c pytorch` in terminal rather that jupter as command asked you for an input",
          "id": "61642e9ed23a96740f159213",
          "name": "SUPER HELPFUL",
          "idShort": 41,
          "shortLink": "DAPfTeeY"
        },
        "old": {
          "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-13T16:02:54.901Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6167017a8e133909391cd947",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "$ `brew install miniconda`\n",
          "id": "6164135c3f53be1603156896",
          "name": "Conda (Miniconda)",
          "idShort": 40,
          "shortLink": "26ltw7WU"
        },
        "old": {
          "desc": "$ `brew install miniconda`"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-13T15:55:38.960Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61642ea15db86b7fce075b8b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook",
          "id": "61642e9ed23a96740f159213",
          "name": "SUPER HELPFUL",
          "idShort": 41,
          "shortLink": "DAPfTeeY"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-11T12:31:29.739Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61642e9ed23a96740f15921d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61642e9ed23a96740f159213",
          "name": "SUPER HELPFUL",
          "idShort": 41,
          "shortLink": "DAPfTeeY"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-10-11T12:31:26.746Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "616413859bb5ff80dfae450f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Contains hundreds for data science dependencies\n\n\nhttps://medium.com/ayuth/install-anaconda-on-macos-with-homebrew-c94437d63a37\n ",
          "id": "61640b1cf7ba438ccd70f2ab",
          "name": "Anaconda",
          "idShort": 39,
          "shortLink": "LHfqkoYg"
        },
        "old": {
          "desc": "Contains hundreds for data science dependencies\n\n "
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-11T10:35:49.168Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6164137d8256b355e417c287",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "$ `brew install miniconda`",
          "id": "6164135c3f53be1603156896",
          "name": "Conda (Miniconda)",
          "idShort": 40,
          "shortLink": "26ltw7WU"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-11T10:35:41.914Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6164135c3f53be16031568a1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6164135c3f53be1603156896",
          "name": "Conda (Miniconda)",
          "idShort": 40,
          "shortLink": "26ltw7WU"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-10-11T10:35:08.302Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6164135043bd52260e5c2c9f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "Contains hundreds for data science dependencies\n\n ",
          "id": "61640b1cf7ba438ccd70f2ab",
          "name": "Anaconda",
          "idShort": 39,
          "shortLink": "LHfqkoYg"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-11T10:34:56.439Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61640b1cf7ba438ccd70f2b4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61640b1cf7ba438ccd70f2ab",
          "name": "Anaconda",
          "idShort": 39,
          "shortLink": "LHfqkoYg"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-10-11T09:59:56.675Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6163ef64c7ef771ca6240290",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "desc": "**Jupyter**: open source software\n**PyTorch**: Machine learning framework\n**YOLOv5**: Trainable model\n**LabelImg**: labels the photos",
          "id": "6163eeb81162286f8cf64d3b",
          "name": "Tools",
          "idShort": 38,
          "shortLink": "ySs41c6W"
        },
        "old": {
          "desc": ""
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-10-11T08:01:40.911Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6163eeb81162286f8cf64d43",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6163eeb81162286f8cf64d3b",
          "name": "Tools",
          "idShort": 38,
          "shortLink": "ySs41c6W"
        },
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-10-11T07:58:48.387Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6163eeac70d82e5e92c593de",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "6163eeac70d82e5e92c593d8",
          "name": "Computer Vision"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-10-11T07:58:36.071Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6151ca3280eb8b2937163ffb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "closed": false
        },
        "list": {
          "closed": true,
          "id": "610d59d4612b7e8a333d012f",
          "name": "Projects"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2021-09-27T13:42:10.771Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6151ca227d4b512e9464ae79",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "```\nbool\n\nstring\n\nint  int8  int16  int32  int64\nuint uint8 uint16 uint32 uint64 uintptr\n\nbyte // alias for uint8\n\nrune // alias for int32\n     // represents a Unicode code point\n\nfloat32 float64\n\ncomplex64 complex128\n```",
          "id": "6151ca1c906ec637d212a51b",
          "name": "Go's basic types",
          "idShort": 37,
          "shortLink": "uxNRRjuq"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-09-27T13:41:54.923Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6151ca1c906ec637d212a51e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6151ca1c906ec637d212a51b",
          "name": "Go's basic types",
          "idShort": 37,
          "shortLink": "uxNRRjuq"
        },
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-09-27T13:41:48.362Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6151ca142767bc48aeecabf3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "6151ca142767bc48aeecabef",
          "name": "Golang"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-09-27T13:41:40.369Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "614876aac31ae850a3d8942a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Open credentials\n\n```\nopen ~/.aws/credentials\n```\n\nOpen config\n\n```\nopen ~/.aws/config\n```"
        },
        "card": {
          "desc": "Open credentials\n\n```\nopen ~/.aws/credentials\n```\n\n- Contains access key and secret access key\n\nOpen config\n\n```\nopen ~/.aws/config\n```",
          "id": "610a7617e546015b3544c19f",
          "name": "Opening Config and Credentials Files",
          "idShort": 7,
          "shortLink": "Yc8mm5tJ"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-09-20T11:55:22.666Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6124bf3cb0d8db33d455f825",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "```\nterraform apply -target=module.\u003Cmodule-name\u003E\n```",
          "id": "6124bf30bd0f313e32ceb2d8",
          "name": "Apply one module",
          "idShort": 36,
          "shortLink": "WXE6EoP1"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-24T09:43:24.859Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6124bf30bd0f313e32ceb2dc",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6124bf30bd0f313e32ceb2d8",
          "name": "Apply one module",
          "idShort": 36,
          "shortLink": "WXE6EoP1"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-24T09:43:12.074Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6123d4feeb4b284ba24b9141",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "```yml\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Configure AWS Credentials\n      uses: aws-actions/configure-aws-credentials@v1\n      with:\n        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        aws-region: eu-west-2\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```"
        },
        "card": {
          "desc": "```\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Configure AWS Credentials\n      uses: aws-actions/configure-aws-credentials@v1\n      with:\n        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        aws-region: eu-west-2\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```",
          "id": "6123d14a2f3bc965f4692e57",
          "name": "Terraform workflow when terraform cloud is not being used",
          "idShort": 34,
          "shortLink": "do7Y9gp9"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-23T17:03:58.072Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6123d4f90a2af4778c93c195",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "```yaml\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Configure AWS Credentials\n      uses: aws-actions/configure-aws-credentials@v1\n      with:\n        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        aws-region: eu-west-2\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```"
        },
        "card": {
          "desc": "```yml\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Configure AWS Credentials\n      uses: aws-actions/configure-aws-credentials@v1\n      with:\n        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        aws-region: eu-west-2\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```",
          "id": "6123d14a2f3bc965f4692e57",
          "name": "Terraform workflow when terraform cloud is not being used",
          "idShort": 34,
          "shortLink": "do7Y9gp9"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-23T17:03:53.212Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6123d4ee356d4e1aa6145670",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "```yaml\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Setup Terraform\n      uses: hashicorp/setup-terraform@v1\n      with:\n        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```"
        },
        "card": {
          "desc": "```\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Setup Terraform\n      uses: hashicorp/setup-terraform@v1\n      with:\n        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```",
          "id": "6123d4d24d8bec519df48034",
          "name": "Terraform workflow when cloud is being used",
          "idShort": 35,
          "shortLink": "JnLygnCU"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-23T17:03:42.247Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6123d4e74091ce072d277773",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "```yaml\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Setup Terraform\n      uses: hashicorp/setup-terraform@v1\n      with:\n        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```",
          "id": "6123d4d24d8bec519df48034",
          "name": "Terraform workflow when cloud is being used",
          "idShort": 35,
          "shortLink": "JnLygnCU"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-23T17:03:35.361Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6123d4d24d8bec519df48038",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6123d4d24d8bec519df48034",
          "name": "Terraform workflow when cloud is being used",
          "idShort": 35,
          "shortLink": "JnLygnCU"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-23T17:03:14.437Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6123d163d513ae1afe297547",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "name": "Terraform work flow when terraform cloud is not being used"
        },
        "card": {
          "name": "Terraform workflow when terraform cloud is not being used",
          "id": "6123d14a2f3bc965f4692e57",
          "idShort": 34,
          "shortLink": "do7Y9gp9"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-23T16:48:35.698Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6123d1570aaff561cc8b70ff",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "```yaml\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Configure AWS Credentials\n      uses: aws-actions/configure-aws-credentials@v1\n      with:\n        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        aws-region: eu-west-2\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```",
          "id": "6123d14a2f3bc965f4692e57",
          "name": "Terraform work flow when terraform cloud is not being used",
          "idShort": 34,
          "shortLink": "do7Y9gp9"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-23T16:48:23.741Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6123d14a2f3bc965f4692e5b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6123d14a2f3bc965f4692e57",
          "name": "Terraform work flow when terraform cloud is not being used",
          "idShort": 34,
          "shortLink": "do7Y9gp9"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-23T16:48:10.563Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61235042870ab8761fd52879",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "611a92723391501c9f202453",
          "name": "17/08/2021 - 20/08/2021"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "boardTarget": {
          "id": "6123501fd6413545c028c59e"
        },
        "member": {
          "id": "607d3a850d54e983ddb49f9b",
          "name": "Osborn, Courtney"
        }
      },
      "appCreator": null,
      "type": "moveListFromBoard",
      "date": "2021-08-23T07:37:38.315Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61235034a8b7601523b58caf",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "610d5a5e256a76615924279f",
          "name": "08/08/2021 - 13/08/2021"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "boardTarget": {
          "id": "6123501fd6413545c028c59e"
        },
        "member": {
          "id": "607d3a850d54e983ddb49f9b",
          "name": "Osborn, Courtney"
        }
      },
      "appCreator": null,
      "type": "moveListFromBoard",
      "date": "2021-08-23T07:37:24.587Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611faa0bccc75677acbe951f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "`aws sts get-caller-identity`"
        },
        "card": {
          "desc": "```\naws sts get-caller-identity\n```",
          "id": "611b58bcdbe8ea8418c75da5",
          "name": "Get caller identity",
          "idShort": 28,
          "shortLink": "O561sIlz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-20T13:11:39.455Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611f8c4f0f02e929724ea31d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs:** https://learn.hashicorp.com/tutorials/terraform/github-actions\n\n1. Created AWS user account `garage-iot-playground`\n    1.1. Selected only `Programmatic access`\n    1.2 Add no permissions or tags\n    1.3 Saved `AWS_SECRET_ACCESS_KEY`\n    1.4 Saved `AWS_ACCESS_KEY_ID`\n\n2. Setup Terrafrom cloud account \n    2.1 Added work space using API driven work flow\n    2.2 Setup variable `AWS_SECRET_ACCESS_KEY` and \n          `AWS_ACCESS_KEY_ID`  in the workspace\n    2.3 Created Token : user (avatar icon) -\u003E  User settings -\u003E Tokens (called \n           Github Actions IoT Playground)\n\n3. Setup Github actions\n     3.1 Add secret `TF_API_TOKEN` to repository secrets (Settings -\u003E Secrets)\n\n4. Added terraform yaml file from the docs\n\n5. Pushed to my branch\n\n\n\n\n"
        },
        "card": {
          "desc": "**Docs:** https://learn.hashicorp.com/tutorials/terraform/github-actions\n\n1. Created AWS user account `garage-iot-playground`\n    1.1. Selected only `Programmatic access`\n    1.2 Add no permissions or tags\n    1.3 Saved `AWS_SECRET_ACCESS_KEY`\n    1.4 Saved `AWS_ACCESS_KEY_ID`\n\n2. Setup Terrafrom cloud account \n    2.1 Added work space using API driven work flow\n    2.2 Setup variable `AWS_SECRET_ACCESS_KEY` and `AWS_ACCESS_KEY_ID`  in the workspace\n    2.3 Created Token : user (avatar icon) -\u003E  User settings -\u003E Tokens (called \n           Github Actions IoT Playground)\n\n3. Setup Github actions\n     3.1 Add secret `TF_API_TOKEN` to repository secrets (Settings -\u003E Secrets)\n\n4. Added terraform yaml file from the docs\n\n5. Pushed to my branch\n\n\n\n\n",
          "id": "611f85bd6019895753c465de",
          "name": "Terraform automation through GitHub Actions",
          "idShort": 33,
          "shortLink": "RAsN1Fyo"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-20T11:04:47.619Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611f8c43cb0a317596bf951b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs:** https://learn.hashicorp.com/tutorials/terraform/github-actions\n\n1. Created AWS user account `garage-iot-playground`\n    1.1. Selected only `Programmatic access`\n    1.2 Add no permissions or tags\n    1.3 Saved `AWS_SECRET_ACCESS_KEY`\n    1.4 Saved `AWS_ACCESS_KEY_ID`\n\n2. Setup Terrafrom cloud account \n    2.1 Added work space using API driven work flow\n    2.2 Setup variable `AWS_SECRET_ACCESS_KEY` and \n          `AWS_ACCESS_KEY_ID`  in the workspace\n    2.3 Created Token : user (avatar icon) -\u003E  User settings -\u003E Tokens (called \n           Github Actions IoT Playground)\n\n3. Setup Github actions\n     3.1 Add secret `TF_API_TOKEN` to repository secrets (Settings -\u003E \n           Secrets)\n\n4. Added terraform yaml file from the docs\n\n5. Pushed to my branch\n\n\n\n\n"
        },
        "card": {
          "desc": "**Docs:** https://learn.hashicorp.com/tutorials/terraform/github-actions\n\n1. Created AWS user account `garage-iot-playground`\n    1.1. Selected only `Programmatic access`\n    1.2 Add no permissions or tags\n    1.3 Saved `AWS_SECRET_ACCESS_KEY`\n    1.4 Saved `AWS_ACCESS_KEY_ID`\n\n2. Setup Terrafrom cloud account \n    2.1 Added work space using API driven work flow\n    2.2 Setup variable `AWS_SECRET_ACCESS_KEY` and \n          `AWS_ACCESS_KEY_ID`  in the workspace\n    2.3 Created Token : user (avatar icon) -\u003E  User settings -\u003E Tokens (called \n           Github Actions IoT Playground)\n\n3. Setup Github actions\n     3.1 Add secret `TF_API_TOKEN` to repository secrets (Settings -\u003E Secrets)\n\n4. Added terraform yaml file from the docs\n\n5. Pushed to my branch\n\n\n\n\n",
          "id": "611f85bd6019895753c465de",
          "name": "Terraform automation through GitHub Actions",
          "idShort": 33,
          "shortLink": "RAsN1Fyo"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-20T11:04:35.665Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611f8c3207258b043c77dce7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "**Docs:** https://learn.hashicorp.com/tutorials/terraform/github-actions\n\n1. Created AWS user account `garage-iot-playground`\n    1.1. Selected only `Programmatic access`\n    1.2 Add no permissions or tags\n    1.3 Saved `AWS_SECRET_ACCESS_KEY`\n    1.4 Saved `AWS_ACCESS_KEY_ID`\n\n2. Setup Terrafrom cloud account \n    2.1 Added work space using API driven work flow\n    2.2 Setup variable `AWS_SECRET_ACCESS_KEY` and \n          `AWS_ACCESS_KEY_ID`  in the workspace\n    2.3 Created Token : user (avatar icon) -\u003E  User settings -\u003E Tokens (called \n           Github Actions IoT Playground)\n\n3. Setup Github actions\n     3.1 Add secret `TF_API_TOKEN` to repository secrets (Settings -\u003E \n           Secrets)\n\n4. Added terraform yaml file from the docs\n\n5. Pushed to my branch\n\n\n\n\n",
          "id": "611f85bd6019895753c465de",
          "name": "Terraform automation through GitHub Actions",
          "idShort": 33,
          "shortLink": "RAsN1Fyo"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-20T11:04:18.803Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611f85bd6019895753c465e2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "611f85bd6019895753c465de",
          "name": "Terraform automation through GitHub Actions",
          "idShort": 33,
          "shortLink": "RAsN1Fyo"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-20T10:36:45.802Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611e32670d8c108c85ce93e2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "`mv old_name new_name` ",
          "id": "611e32603a1b494eb900e627",
          "name": "Change the name of a directory",
          "idShort": 31,
          "shortLink": "W8zjPOQ0"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-19T10:28:55.006Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611e32603a1b494eb900e62b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "611e32603a1b494eb900e627",
          "name": "Change the name of a directory",
          "idShort": 31,
          "shortLink": "W8zjPOQ0"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-19T10:28:48.464Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611e2c2a82215e54b1b380f6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "pos": 360447
        },
        "card": {
          "pos": 147455.5,
          "id": "611a933708d0ea231cb530e7",
          "name": "17/08/2021 - 20/08/2021",
          "idShort": 27,
          "shortLink": "AjUnaICQ"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "611a92723391501c9f202453",
          "name": "17/08/2021 - 20/08/2021"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-19T10:02:18.515Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611b6ee6bb0cd961633a0347",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs**: https://aws.amazon.com/premiumsupport/knowledge-center/authenticate-mfa-cli/\n\naws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E`  // check if this does need to be done\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E`"
        },
        "card": {
          "desc": "**Docs**: https://aws.amazon.com/premiumsupport/knowledge-center/authenticate-mfa-cli/\n\n```\naws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n```\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E`  // check if this does need to be done\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E`",
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-17T08:10:14.661Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611b58c7da179412ade5d91a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "`aws sts get-caller-identity`",
          "id": "611b58bcdbe8ea8418c75da5",
          "name": "Get caller identity",
          "idShort": 28,
          "shortLink": "O561sIlz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-17T06:35:51.407Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611b58bcdbe8ea8418c75da9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "611b58bcdbe8ea8418c75da5",
          "name": "Get caller identity",
          "idShort": 28,
          "shortLink": "O561sIlz"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-17T06:35:40.789Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611a9285e70e6819f1b2efad",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "name": "17/08/2021"
        },
        "list": {
          "name": "17/08/2021 - 20/08/2021",
          "id": "611a92723391501c9f202453"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2021-08-16T16:29:57.408Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611a92768e15eb31938b2086",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "idList": "610d5a5e256a76615924279f"
        },
        "card": {
          "idList": "611a92723391501c9f202453",
          "id": "611a923904a2e506713a9980",
          "name": "17/08/2020",
          "idShort": 25,
          "shortLink": "5XVb8eob"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "listBefore": {
          "id": "610d5a5e256a76615924279f",
          "name": "08/08/2021 - 13/08/2021"
        },
        "listAfter": {
          "id": "611a92723391501c9f202453",
          "name": "17/08/2021"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-16T16:29:42.824Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611a92723391501c9f202457",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "611a92723391501c9f202453",
          "name": "17/08/2021"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-08-16T16:29:38.593Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611a92689b377c3309f95cc7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "name": "TO DO"
        },
        "list": {
          "name": "08/08/2021 - 13/08/2021",
          "id": "610d5a5e256a76615924279f"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2021-08-16T16:29:28.237Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611a92637927901a81f96c86",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "closed": false
        },
        "card": {
          "closed": true,
          "id": "611a925bb5ee533b02908bf1",
          "name": "08/08/2021 - 13/08/2021",
          "idShort": 26,
          "shortLink": "OMDot8PW"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610d59d4612b7e8a333d012f",
          "name": "Projects"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-16T16:29:23.086Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611a925bb5ee533b02908bf6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "611a925bb5ee533b02908bf1",
          "name": "08/08/2021 - 13/08/2021",
          "idShort": 26,
          "shortLink": "OMDot8PW"
        },
        "list": {
          "id": "610d59d4612b7e8a333d012f",
          "name": "Projects"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-16T16:29:15.558Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611a92453f93d922d5c59783",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "pos": 458751
        },
        "list": {
          "pos": 294911,
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2021-08-16T16:28:53.650Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611a923904a2e506713a9999",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "611a923904a2e506713a9980",
          "name": "17/08/2020",
          "idShort": 25,
          "shortLink": "5XVb8eob"
        },
        "list": {
          "id": "610d5a5e256a76615924279f",
          "name": "TO DO"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "cardSource": {
          "id": "6114c92bb98f3447677949e5",
          "name": "Still to do",
          "idShort": 22,
          "shortLink": "Gv6M0Am7"
        }
      },
      "appCreator": null,
      "type": "copyCard",
      "date": "2021-08-16T16:28:41.378Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61153050167f2228ce004429",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "prefs": {
            "permissionLevel": "org"
          }
        },
        "board": {
          "prefs": {
            "permissionLevel": "private"
          },
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateBoard",
      "date": "2021-08-12T14:29:36.476Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6114ca0a38c03d2eeca538fe",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "pos": 196607
        },
        "card": {
          "pos": 327679,
          "id": "6114c92bb98f3447677949e5",
          "name": "Still to do",
          "idShort": 22,
          "shortLink": "Gv6M0Am7"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610d5a5e256a76615924279f",
          "name": "TO DO"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-12T07:13:14.851Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fe22d9fcc150da27d8d4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n3. https://trello.com/c/Labtr1fv/4-project-integration\n4. https://trello.com/c/2qNIRyr2/10-seeing-mqtt-message-in-aws\n"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n3. https://trello.com/c/Labtr1fv/4-project-integration\n4. https://trello.com/c/2qNIRyr2/10-seeing-mqtt-message-in-aws\n5. https://trello.com/c/la71gBuG/12-creating-a-rule\n",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T16:43:14.535Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fe16aba0e048f07e170c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n3. https://trello.com/c/Labtr1fv/4-project-integration\n"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n3. https://trello.com/c/Labtr1fv/4-project-integration\n4. https://trello.com/c/2qNIRyr2/10-seeing-mqtt-message-in-aws\n",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T16:43:02.299Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fdf947c1554aee8974bf",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n3. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n3. https://trello.com/c/Labtr1fv/4-project-integration\n",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T16:42:33.529Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fddb84fb2e2efdcfac9b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n3. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T16:42:03.802Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fdcf97c7bd4ee2804e13",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T16:41:51.818Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fdbe2fd6c52a527f4679",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T16:41:34.392Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fdb35cd68e7ae0e4da9f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T16:41:23.033Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fdac9b60643e218d2a73",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "card": {
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "checklist": {
          "id": "6113fda389647332619b15ce",
          "name": "Checklist"
        },
        "checkItem": {
          "id": "6113fdaa95bd732a0a67b132",
          "name": "All setup done",
          "state": "complete"
        }
      },
      "appCreator": null,
      "type": "updateCheckItemStateOnCard",
      "date": "2021-08-11T16:41:16.197Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fda389647332619b15d2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "checklist": {
          "id": "6113fda389647332619b15ce",
          "name": "Checklist"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addChecklistToCard",
      "date": "2021-08-11T16:41:07.278Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fd958b67087db265f410",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "card": {
          "id": "610a9722d00cfb7d91def415",
          "name": "Seeing mqtt message in AWS",
          "idShort": 10,
          "shortLink": "2qNIRyr2"
        },
        "checklist": {
          "id": "6113fd8bfb1c7b144d352f81",
          "name": "Checklist"
        },
        "checkItem": {
          "id": "6113fd948c6c6f7585dede47",
          "name": "See message in mqtt",
          "state": "complete"
        }
      },
      "appCreator": null,
      "type": "updateCheckItemStateOnCard",
      "date": "2021-08-11T16:40:53.138Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fd8bfb1c7b144d352f85",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a9722d00cfb7d91def415",
          "name": "Seeing mqtt message in AWS",
          "idShort": 10,
          "shortLink": "2qNIRyr2"
        },
        "checklist": {
          "id": "6113fd8bfb1c7b144d352f81",
          "name": "Checklist"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addChecklistToCard",
      "date": "2021-08-11T16:40:43.875Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fd8551523516a0800cba",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "card": {
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "checklist": {
          "id": "6113fd7cc66ef9298fedef0e",
          "name": "Checklist"
        },
        "checkItem": {
          "id": "6113fd8315784d1ecab9e475",
          "name": "Rule created",
          "state": "complete"
        }
      },
      "appCreator": null,
      "type": "updateCheckItemStateOnCard",
      "date": "2021-08-11T16:40:37.201Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113fd7cc66ef9298fedef12",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "checklist": {
          "id": "6113fd7cc66ef9298fedef0e",
          "name": "Checklist"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addChecklistToCard",
      "date": "2021-08-11T16:40:28.203Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113ba05e9fed10a6091910d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "card": {
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Project integration",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "checklist": {
          "id": "6113b9b7c02efa3ccc88bb58",
          "name": "Checklist"
        },
        "checkItem": {
          "id": "6113ba037738e01e3b8b48a1",
          "name": "Creds folder contains certificate, public and private keys",
          "state": "complete"
        }
      },
      "appCreator": null,
      "type": "updateCheckItemStateOnCard",
      "date": "2021-08-11T11:52:37.135Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113ba04b287896e1bf86c1d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "card": {
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Project integration",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "checklist": {
          "id": "6113b9b7c02efa3ccc88bb58",
          "name": "Checklist"
        },
        "checkItem": {
          "id": "6113b9ca6ff119607fdf44cf",
          "name": "Added iot endpoint to .env folder",
          "state": "complete"
        }
      },
      "appCreator": null,
      "type": "updateCheckItemStateOnCard",
      "date": "2021-08-11T11:52:36.684Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113b9b7c02efa3ccc88bb5c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Project integration",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "checklist": {
          "id": "6113b9b7c02efa3ccc88bb58",
          "name": "Checklist"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addChecklistToCard",
      "date": "2021-08-11T11:51:19.310Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113b9ad5e2714664040041d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "card": {
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Create thing, certificate and private key",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "checklist": {
          "id": "6113b98b54887114425f6379",
          "name": "Checklist"
        },
        "checkItem": {
          "id": "6113b9ad5be15c60d5396226",
          "name": "Stored the keys",
          "state": "complete"
        }
      },
      "appCreator": null,
      "type": "updateCheckItemStateOnCard",
      "date": "2021-08-11T11:51:09.885Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113b9a26b35bb8ff0ffdbee",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "card": {
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Create thing, certificate and private key",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "checklist": {
          "id": "6113b98b54887114425f6379",
          "name": "Checklist"
        },
        "checkItem": {
          "id": "6113b9a14db2312a98204b40",
          "name": "Stored the certificates",
          "state": "complete"
        }
      },
      "appCreator": null,
      "type": "updateCheckItemStateOnCard",
      "date": "2021-08-11T11:50:58.940Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113b9a25f1b01023fd4a532",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "card": {
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Create thing, certificate and private key",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "checklist": {
          "id": "6113b98b54887114425f6379",
          "name": "Checklist"
        },
        "checkItem": {
          "id": "6113b990e476533ea4ff5c5e",
          "name": "Created a thing",
          "state": "complete"
        }
      },
      "appCreator": null,
      "type": "updateCheckItemStateOnCard",
      "date": "2021-08-11T11:50:58.428Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113b98b54887114425f637d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Create thing, certificate and private key",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "checklist": {
          "id": "6113b98b54887114425f6379",
          "name": "Checklist"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addChecklistToCard",
      "date": "2021-08-11T11:50:35.479Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113b98276fe073eb5de118f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "card": {
          "id": "610a6cca40f71c2524c2ee39",
          "name": "Adding IoT Policy in AWS",
          "idShort": 2,
          "shortLink": "nXYcNuqh"
        },
        "checklist": {
          "id": "6113b96a5747318394cd5eec",
          "name": "Checklist"
        },
        "checkItem": {
          "id": "6113b9818320115964642ae9",
          "name": "Added IOT policy",
          "state": "complete"
        }
      },
      "appCreator": null,
      "type": "updateCheckItemStateOnCard",
      "date": "2021-08-11T11:50:26.726Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113b96a5747318394cd5ef0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a6cca40f71c2524c2ee39",
          "name": "Adding IoT Policy in AWS",
          "idShort": 2,
          "shortLink": "nXYcNuqh"
        },
        "checklist": {
          "id": "6113b96a5747318394cd5eec",
          "name": "Checklist"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addChecklistToCard",
      "date": "2021-08-11T11:50:02.656Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611385462164e225a8287c02",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "text": "Terraform generates the certificate, private and public keys. We do not get the AmazonRootCA1 or AmazonRootCA3 pems\n",
        "card": {
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Create thing, certificate and private key",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "commentCard",
      "date": "2021-08-11T08:07:34.972Z",
      "limits": {
        "reactions": {
          "perAction": {
            "status": "ok",
            "disableAt": 900,
            "warnAt": 720
          },
          "uniquePerAction": {
            "status": "ok",
            "disableAt": 17,
            "warnAt": 14
          }
        }
      },
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611381b8977087713aa77eee",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "text": "**Helpful resource**: https://github.com/soracom-labs/soracom-beam-to-aws-iot-terraform/tree/bdcab4468e8fc8750b2e123f2763d249b6932775",
        "card": {
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Create thing, certificate and private key",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "commentCard",
      "date": "2021-08-11T07:52:24.984Z",
      "limits": {
        "reactions": {
          "perAction": {
            "status": "ok",
            "disableAt": 900,
            "warnAt": 720
          },
          "uniquePerAction": {
            "status": "ok",
            "disableAt": 17,
            "warnAt": 14
          }
        }
      },
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6113818a14c9d3341a5447f3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\nSTEP 1:\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n- Click Next\n\nSTEP 2: \n\n- Select `Auto-generate a new certificate (recommended)`\n\nSTEP 3:\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all files (This is the only time you can download your certificate and private key)\n\n**Thing is created**\n\n**Terraform Docs:** https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iot_certificate\n"
        },
        "card": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\nSTEP 1:\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n- Click Next\n\n**Terraform Docs:** https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iot_thing\n\nSTEP 2: \n\n- Select `Auto-generate a new certificate (recommended)`\n\nSTEP 3:\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all files (This is the only time you can download your certificate and private key)\n\n**Thing is created**\n\n**Terraform Docs:** https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iot_certificate\n",
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Create thing, certificate and private key",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T07:51:38.176Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611381696e249f6646ff6bbb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\nSTEP 1:\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n- Click Next\n\nSTEP 2: \n\n- Select `Auto-generate a new certificate (recommended)`\n\nSTEP 3:\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all files (This is the only time you can download your certificate and private key)\n\n**Thing is created**\n\n\n"
        },
        "card": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\nSTEP 1:\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n- Click Next\n\nSTEP 2: \n\n- Select `Auto-generate a new certificate (recommended)`\n\nSTEP 3:\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all files (This is the only time you can download your certificate and private key)\n\n**Thing is created**\n\n**Terraform Docs:** https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iot_certificate\n",
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Create thing, certificate and private key",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T07:51:05.002Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611381338afe8b3089918742",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Add policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\nThis will setup a policy looking something like this:\n\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iot:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```"
        },
        "card": {
          "desc": "Add policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\nThis will setup a policy looking something like this:\n\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iot:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```\n\n**Terraform Docs:** https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iot_policy",
          "id": "610a6cca40f71c2524c2ee39",
          "name": "Adding IoT Policy in AWS",
          "idShort": 2,
          "shortLink": "nXYcNuqh"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-11T07:50:11.908Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61126e3153bc5e5f6e01b178",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E`  // check if this does need to be done\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E`"
        },
        "card": {
          "desc": "**Docs**: https://aws.amazon.com/premiumsupport/knowledge-center/authenticate-mfa-cli/\n\naws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E`  // check if this does need to be done\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E`",
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-10T12:16:49.493Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61112a1264b02d72a89d84e4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "**Docs**: https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started#quick-start-tutorial\n\n- Docker installed\n- Make directory \n\ni.e.\n\n```\n$ mkdir garageiot-platform\n```\n\n- cd directory\n- touch main.tf\n- atom .\n- Add the following \n\n```\nterraform {\n  required_providers {\n    docker = {\n      source  = \"kreuzwerker/docker\"\n      version = \"~\u003E 2.13.0\"\n    }\n  }\n}\n\nprovider \"docker\" {}\n\nresource \"docker_image\" \"nginx\" {\n  name         = \"nginx:latest\"\n  keep_locally = false\n}\n\nresource \"docker_container\" \"nginx\" {\n  image = docker_image.nginx.latest\n  name  = \"tutorial\"\n  ports {\n    internal = 80\n    external = 8000\n  }\n}\n```\n\n- Save\n- `$ terraform init`\n- ` $terraform apply` -\u003E yes\n- Go to localhost:8000\n- Check docker `docker ps`\n\n- To destroy container\n\n```\n$ terraform destroy\n```",
          "id": "6111278c550da375d14262c0",
          "name": "Provision an NGINX server",
          "idShort": 20,
          "shortLink": "LD2TdPn0"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T13:13:54.475Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111278c550da375d14262c4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6111278c550da375d14262c0",
          "name": "Provision an NGINX server",
          "idShort": 20,
          "shortLink": "LD2TdPn0"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-09T13:03:08.672Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111275f60a0d26406116eb4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Bash:\n\n```\n$ touch ~/.bashrc\n```\n\nThen install the autocomplete package.\n\n```\n$ terraform -install-autocomplete\n```\n\nOnce the autocomplete support is installed, you will need to restart your shell.\n\n- Restart shell\n"
        },
        "card": {
          "desc": "Docs: https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started#enable-tab-completion\n\nBash:\n\n```\n$ touch ~/.bashrc\n```\n\nThen install the autocomplete package.\n\n```\n$ terraform -install-autocomplete\n```\n\nOnce the autocomplete support is installed, you will need to restart your shell.\n\n- Restart shell\n",
          "id": "61112706fc6cb737f25a3412",
          "name": "Enable tab completion",
          "idShort": 19,
          "shortLink": "22fxplyv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T13:02:23.246Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111273db7a890647da9c1cd",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "Bash:\n\n```\n$ touch ~/.bashrc\n```\n\nThen install the autocomplete package.\n\n```\n$ terraform -install-autocomplete\n```\n\nOnce the autocomplete support is installed, you will need to restart your shell.\n\n- Restart shell\n",
          "id": "61112706fc6cb737f25a3412",
          "name": "Enable tab completion",
          "idShort": 19,
          "shortLink": "22fxplyv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T13:01:49.021Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61112706fc6cb737f25a3416",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61112706fc6cb737f25a3412",
          "name": "Enable tab completion",
          "idShort": 19,
          "shortLink": "22fxplyv"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terraform"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-09T13:00:54.901Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611126bb83daf86730f3a5a2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "name": "Terra form"
        },
        "list": {
          "name": "Terraform",
          "id": "6111265b0943137728c9c063"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2021-08-09T12:59:39.148Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611126b23e2b7c73377f4d50",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs**: https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started \n\nUsing homebrew:\n\nFirst, install the HashiCorp tap, a repository of all our Homebrew packages.\n```\n$ brew tap hashicorp/tap\n```\n\nNow, install Terraform with hashicorp/tap/terraform.\n\n```\n$ brew install hashicorp/tap/terraform\n```"
        },
        "card": {
          "desc": "**Docs**: https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started \n\nUsing homebrew:\n\nFirst, install the HashiCorp tap, a repository of all our Homebrew packages.\n\n```\n$ brew tap hashicorp/tap\n```\n\nNow, install Terraform with hashicorp/tap/terraform.\n\n```\n$ brew install hashicorp/tap/terraform\n```",
          "id": "6111265f8b3ad572805c3588",
          "name": "Installation",
          "idShort": 18,
          "shortLink": "qTQRaSRw"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terra form"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T12:59:30.810Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611126acf68c5a677fd42862",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "**Docs**: https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started \n\nUsing homebrew:\n\nFirst, install the HashiCorp tap, a repository of all our Homebrew packages.\n```\n$ brew tap hashicorp/tap\n```\n\nNow, install Terraform with hashicorp/tap/terraform.\n\n```\n$ brew install hashicorp/tap/terraform\n```",
          "id": "6111265f8b3ad572805c3588",
          "name": "Installation",
          "idShort": 18,
          "shortLink": "qTQRaSRw"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terra form"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T12:59:24.737Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111265f8b3ad572805c358c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "6111265f8b3ad572805c3588",
          "name": "Installation",
          "idShort": 18,
          "shortLink": "qTQRaSRw"
        },
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terra form"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-09T12:58:07.611Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111265b0943137728c9c067",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "6111265b0943137728c9c063",
          "name": "Terra form"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-08-09T12:58:03.296Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111183b75a0721d2c5ebd26",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "611116ef7aee5b63a6847391",
          "name": "Enable Dynamo DB streaming",
          "idShort": 17,
          "shortLink": "xkPhYxuA"
        },
        "checklist": {
          "id": "6111183b75a0721d2c5ebd1b",
          "name": "Checklist"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addChecklistToCard",
      "date": "2021-08-09T11:57:47.445Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61111836755ba57f8cbaf536",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "At the bottom of this blog\n\n**Website: ** https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\n- Go to dynamo DB table\n- Go to **overview**\n- Click `Manage DynamoDB Stream`"
        },
        "card": {
          "desc": "At the bottom of this blog\n\n**Website: ** https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\n**Enable streaming**\n\n- Go to dynamo DB table\n- Choose custom DB (not the connect DB)\n- Go to **overview**\n- Click `Manage DynamoDB Stream`\n\n**Enable trigger**\n\n- Go to dynamo DB table\n- Choose custom DB (not the connect DB)\n- Go to triggers\n- Create trigger\n- Select existing lambda function\n- Choose custom functionality lambda (i.e trigger test)\n",
          "id": "611116ef7aee5b63a6847391",
          "name": "Enable Dynamo DB streaming",
          "idShort": 17,
          "shortLink": "xkPhYxuA"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:57:42.301Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61111745a282723f63144896",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "At the bottom of this blog\n\n**Website: ** https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\n- Go to dynamo DB table\n- Go to **overview**\n- Click `Manage DynamoDB Stream`",
          "id": "611116ef7aee5b63a6847391",
          "name": "Enable Dynamo DB streaming",
          "idShort": 17,
          "shortLink": "xkPhYxuA"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:53:41.939Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611116ef7aee5b63a6847395",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "611116ef7aee5b63a6847391",
          "name": "Enable Dynamo DB streaming",
          "idShort": 17,
          "shortLink": "xkPhYxuA"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-09T11:52:15.220Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611116dcbd2ae68a42d6aed4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate custom functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',**\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n** this is the same as the web scoket address but instead of the `wss:// ` use `https://`\n\n**Create a web socket API in API Gateway**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate custom functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',**\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n** this is the same as the web scoket address but instead of the `wss:// ` use `https://`\n\n**Create a web socket API in API Gateway**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`\n",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:51:56.919Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61111640862bea5af1c0000a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate custom functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',**\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n** this is the same as the web scoket address but instead of the `wss:// ` use `https://`\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate custom functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',**\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n** this is the same as the web scoket address but instead of the `wss:// ` use `https://`\n\n**Create a web socket API in API Gateway**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:49:20.368Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111161d13d2261b95faadad",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate Functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',**\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n** this is the same as the web scoket address but instead of the `wss:// ` use `https://`\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate custom functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',**\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n** this is the same as the web scoket address but instead of the `wss:// ` use `https://`\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:48:45.087Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611115f3cefb79761480403f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate Functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate Functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',**\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n** this is the same as the web scoket address but instead of the `wss:// ` use `https://`\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:48:03.768Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61111574f88491469697a3d7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate Functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:45:56.227Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111150f5e21552e09f7f69e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:44:15.742Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611113b076d6831b2f1f1b9c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n**Create a web socket API**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:38:24.131Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611112f4ae7ebf0d98cf5326",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n\n"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:35:16.502Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611112b479404364c9e845d9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n\n\n"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n\n",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:34:12.032Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111129fd24a471c897f6d21",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click \n\n"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n\n\n",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:33:51.603Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611111d72288864efd77d2ad",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **$Add connect route**\n- Click **$Add disconnect route**\n- Click \n\n"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click \n\n",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:30:31.096Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611111c64769b776a152e17d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Add connect route\n- Add disconnect route\n- Click \n\n"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **$Add connect route**\n- Click **$Add disconnect route**\n- Click \n\n",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:30:14.958Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "611111a5cb671c3badef177f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click `Create API`\n- Choose `WebSocket API`\n- Route selection expression -\u003E `request.body.action`\n- Add connect route\n- Add disconnect route\n\n"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Add connect route\n- Add disconnect route\n- Click \n\n",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:29:41.840Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111114939a5fc5cb2dd1a7c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate a websocket API:\n\n- Go to API gateway\n- Click `Create API`\n- Choose `WebSocket API`\n- Route selection expression -\u003E `request.body.action`\n- Add connect route\n- Add disconnect route\n\n",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:28:09.062Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111103e4c7b065bf55d9348",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "checklist": {
          "id": "6111103e4c7b065bf55d9344",
          "name": "Checklist"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "addChecklistToCard",
      "date": "2021-08-09T11:23:42.801Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "6111103bc997c41affdfcea5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/"
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:23:39.157Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61110fef31acac84395db232",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/",
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-09T11:22:23.660Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "61110fdeea2e9b10e003c6b0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "61110fdeea2e9b10e003c6ac",
          "name": "Add web socket API",
          "idShort": 16,
          "shortLink": "dAm4VfVz"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-09T11:22:06.427Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610d5a5e256a7661592427a3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "610d5a5e256a76615924279f",
          "name": "TO DO"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-08-06T15:50:54.215Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610d5a1965688e7771d1b79e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "Scripts:\n\nTo act as a device:\n\n`go run cmd/garageiot/main.go`\n\nTo start the websocket:\n\n`wscat -c wss://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production`",
          "id": "610d59dee412c473cb309b95",
          "name": "IoT Playground",
          "idShort": 14,
          "shortLink": "ixRpKIeJ"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610d59d4612b7e8a333d012f",
          "name": "Projects"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-06T15:49:45.379Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610d59dee412c473cb309b99",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610d59dee412c473cb309b95",
          "name": "IoT Playground",
          "idShort": 14,
          "shortLink": "ixRpKIeJ"
        },
        "list": {
          "id": "610d59d4612b7e8a333d012f",
          "name": "Projects"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-06T15:48:46.053Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610d59d4612b7e8a333d0133",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "610d59d4612b7e8a333d012f",
          "name": "Projects"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-08-06T15:48:36.933Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610bb4144706753544abc8f8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html",
          "id": "610bb3f5226ad01f0efc23b8",
          "name": "Store device data in a DynamoDB table",
          "idShort": 13,
          "shortLink": "E4W1efmj"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a940f9238581891cb9066",
          "name": "Useful Links"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T09:49:08.299Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610bb3f5226ad01f0efc23bc",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610bb3f5226ad01f0efc23b8",
          "name": "Store device data in a DynamoDB table",
          "idShort": 13,
          "shortLink": "E4W1efmj"
        },
        "list": {
          "id": "610a940f9238581891cb9066",
          "name": "Useful Links"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-05T09:48:37.789Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610bb3e4a70c1933d884224d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table (garage_iot_test)\n3. Add Primary Key (sample_time -\u003E Number)\n4. Tick Add Sort Key\n5. Add Sort Key  (device_id -\u003E Number)\n6. Click Create"
        },
        "card": {
          "desc": "**Doc Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html#iot-ddb-rule-ddb-table\n\n**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table (garage_iot_test)\n3. Add Primary Key (sample_time -\u003E Number)\n4. Tick Add Sort Key\n5. Add Sort Key  (device_id -\u003E Number)\n6. Click Create",
          "id": "610b9973346daf758fe91d17",
          "name": "Add DynamoDB Table",
          "idShort": 11,
          "shortLink": "1zbGZk1K"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T09:48:20.032Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610bb380d7135b28d5bf16d4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garage_iot_test_ddb)\n4. Add meaningful description \n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'gararge_iot_test/+/data'`**\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n\n** I changed the `mqttClient` in the code so that it would include the device ID\n"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garage_iot_test_ddb)\n4. Add meaningful description \n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'gararge_iot_test/+/data'`**\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garage_iot_test_ddb_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n\n** I changed the `mqttClient` in the code so that it would include the device ID\n",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T09:46:40.626Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610bb347ecef5e4e5804ab29",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garage_iot_test_ddb)\n4. Add meaningful description \n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'gararge_iot_test/+/data'`*\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n\n** I changed the `mqttClient` in the code so that it would include the device ID\n"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garage_iot_test_ddb)\n4. Add meaningful description \n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'gararge_iot_test/+/data'`**\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n\n** I changed the `mqttClient` in the code so that it would include the device ID\n",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T09:45:43.004Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610bb33f262ccc4efbf869f4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garage_iot_test_ddb)\n4. Add meaningful description \n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'gararge_iot_test/+/data'`*\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n\n* I changed the `mqttClient` in the code so that it would include the device ID\n"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garage_iot_test_ddb)\n4. Add meaningful description \n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'gararge_iot_test/+/data'`*\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n\n** I changed the `mqttClient` in the code so that it would include the device ID\n",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T09:45:35.975Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610bb3347fc1442a17d53dbf",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'zigbee2mqtt/test`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garage_iot_test_ddb)\n4. Add meaningful description \n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'gararge_iot_test/+/data'`*\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n\n* I changed the `mqttClient` in the code so that it would include the device ID\n",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T09:45:24.471Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610bb2e29057292a3a05eaf1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table (garage_iot_test)\n3. Add Primary Key\n4. Tick Add Sort Key\n5. Add Sort Key\n6. Click Create"
        },
        "card": {
          "desc": "**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table (garage_iot_test)\n3. Add Primary Key (sample_time -\u003E Number)\n4. Tick Add Sort Key\n5. Add Sort Key  (device_id -\u003E Number)\n6. Click Create",
          "id": "610b9973346daf758fe91d17",
          "name": "Add DynamoDB Table",
          "idShort": 11,
          "shortLink": "1zbGZk1K"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T09:44:02.735Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610bb1aca53e8e427e6d8698",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table\n3. Add Primary Key\n4. Tick Add Sort Key\n5. Add Sort Key\n6. Click Create"
        },
        "card": {
          "desc": "**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table (garage_iot_test)\n3. Add Primary Key\n4. Tick Add Sort Key\n5. Add Sort Key\n6. Click Create",
          "id": "610b9973346daf758fe91d17",
          "name": "Add DynamoDB Table",
          "idShort": 11,
          "shortLink": "1zbGZk1K"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T09:38:52.288Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610ba2e1488da2467f07e4af",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'zigbee2mqtt/test`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:35:45.398Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610ba23201f74c1b9fa8a79e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:32:50.151Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610ba20aedaac9291f9448b8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:32:10.471Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610ba1ed43a47a8fa311d279",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garageiot_test_role`, and choose Create role.\n",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:31:41.515Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610ba0c440038d1e6db1b8d2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in "
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:26:44.779Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610ba0b1df41db39e24e87b3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in ",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:26:25.491Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9f191f6c4846e54e399c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:19:37.812Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9edec050fa57c4836fa8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'device/+/data'`",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:18:38.111Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9d7f23b81d05b3e66e24",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version** 2016-03-23**"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version ** 2016-03-23**",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:12:47.533Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9d7c1316746e9dd6150e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description\n4. Use version** 2016-03-23**",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:12:44.404Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9d54c116ff1637f01cd6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)\n4. Add meaningful description",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:12:04.636Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9d23f3507b694a14f6d8",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot-test-ddb)"
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot_test_ddb)",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:11:15.635Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9d11f925cf51e95b9b94",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garageiot-test-ddb)",
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:10:57.150Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9baf7c9e6e6ce49f58b2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610b9baf7c9e6e6ce49f58ae",
          "name": "Creating A Rule",
          "idShort": 12,
          "shortLink": "la71gBuG"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-05T08:05:03.100Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9a862c02c31d88d89f6d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table\n3. Add Primary Key\n4. Tick Add Sort Key\n5. Add Sort Key"
        },
        "card": {
          "desc": "**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table\n3. Add Primary Key\n4. Tick Add Sort Key\n5. Add Sort Key\n6. Click Create",
          "id": "610b9973346daf758fe91d17",
          "name": "Add DynamoDB Table",
          "idShort": 11,
          "shortLink": "1zbGZk1K"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T08:00:06.531Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9a70ce582e1cc5664742",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table\n3. Add Primary Key\n4. Tick Add Sort Key\n5. Add Sort Key",
          "id": "610b9973346daf758fe91d17",
          "name": "Add DynamoDB Table",
          "idShort": 11,
          "shortLink": "1zbGZk1K"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T07:59:44.167Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b9973346daf758fe91d1b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610b9973346daf758fe91d17",
          "name": "Add DynamoDB Table",
          "idShort": 11,
          "shortLink": "1zbGZk1K"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-05T07:55:31.754Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b99553878a22ac6227305",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "pos": 65535
        },
        "card": {
          "pos": 196607,
          "id": "610a941c023dc37274ed4583",
          "name": "AWS IAM Policy Simulator",
          "idShort": 9,
          "shortLink": "5xx11E4H"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T07:55:01.332Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b99553878a22ac6227300",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "idList": "610a940f9238581891cb9066"
        },
        "card": {
          "idList": "610b994fdd9e5b799988a727",
          "id": "610a941c023dc37274ed4583",
          "name": "AWS IAM Policy Simulator",
          "idShort": 9,
          "shortLink": "5xx11E4H"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "listBefore": {
          "id": "610a940f9238581891cb9066",
          "name": "Useful Links"
        },
        "listAfter": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T07:55:01.309Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b99533eba19312de82593",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "idList": "610a75fead08eb401af18e5b"
        },
        "card": {
          "idList": "610b994fdd9e5b799988a727",
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "listBefore": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        },
        "listAfter": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T07:54:59.779Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b99516b83f34fc4a41315",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "idList": "610a75fead08eb401af18e5b"
        },
        "card": {
          "idList": "610b994fdd9e5b799988a727",
          "id": "610a7617e546015b3544c19f",
          "name": "Opening Config and Credentials Files",
          "idShort": 7,
          "shortLink": "Yc8mm5tJ"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "listBefore": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        },
        "listAfter": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-05T07:54:57.936Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610b994fdd9e5b799988a72b",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "610b994fdd9e5b799988a727",
          "name": "AWS"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-08-05T07:54:55.518Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a97dc1afa0b2541b7fb2a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "AWS\n\nhttps://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/test"
        },
        "card": {
          "desc": "AWS IoT\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/test\n\n- Click on the test file\n- Add in name of mqttClient (i.e zigbee2mqtt/test)\n- Press Subscribe\n- Click on Subscription\n- Run `go run cmd/garageiot/main.go`\n- You will then see the message\n\nhttps://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/test",
          "id": "610a9722d00cfb7d91def415",
          "name": "Seeing mqtt message in AWS",
          "idShort": 10,
          "shortLink": "2qNIRyr2"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:36:28.053Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a9745d57b847c2fc90f70",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "AWS\n\nhttps://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/test",
          "id": "610a9722d00cfb7d91def415",
          "name": "Seeing mqtt message in AWS",
          "idShort": 10,
          "shortLink": "2qNIRyr2"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:33:57.806Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a97452a06a885d38547f5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "name": "Seeing mqtt message"
        },
        "card": {
          "name": "Seeing mqtt message in AWS",
          "id": "610a9722d00cfb7d91def415",
          "idShort": 10,
          "shortLink": "2qNIRyr2"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:33:57.548Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a9722d00cfb7d91def419",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a9722d00cfb7d91def415",
          "name": "Seeing mqtt message",
          "idShort": 10,
          "shortLink": "2qNIRyr2"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T13:33:22.700Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a943ecc75cb7a47fcac06",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "This allows you to check what you have access to and describes the error in full"
        },
        "card": {
          "desc": "This allows you to check what you have access to and describes the error in full\n\nhttps://policysim.aws.amazon.com/home/index.jsp?#users/courtney.osborn",
          "id": "610a941c023dc37274ed4583",
          "name": "AWS IAM Policy Simulator",
          "idShort": 9,
          "shortLink": "5xx11E4H"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a940f9238581891cb9066",
          "name": "Useful Links"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:21:02.291Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a943a77c8cb440b23d805",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "This allows you to check what you have access to and describes the error in full",
          "id": "610a941c023dc37274ed4583",
          "name": "AWS IAM Policy Simulator",
          "idShort": 9,
          "shortLink": "5xx11E4H"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a940f9238581891cb9066",
          "name": "Useful Links"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:20:58.180Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a941c023dc37274ed4587",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a941c023dc37274ed4583",
          "name": "AWS IAM Policy Simulator",
          "idShort": 9,
          "shortLink": "5xx11E4H"
        },
        "list": {
          "id": "610a940f9238581891cb9066",
          "name": "Useful Links"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T13:20:28.289Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a940f9238581891cb906a",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "610a940f9238581891cb9066",
          "name": "Useful Links"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-08-04T13:20:15.548Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a93dc1bb47c7a81c7b6bf",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "- Add downloaded files to `/creds` folder\n\n- Add THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n**Note**: Make sure you have set your session token otherwise you will get an error \n\n"
        },
        "card": {
          "desc": "- Add downloaded files to `/creds` folder\n\n- Add THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n**Note**: Make sure you have set your session token otherwise you will get an error (see https://trello.com/c/iPDe54C3/8-getting-a-session-token)\n\n",
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Project integration",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:19:24.854Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a93cbf8a0030505302f7c",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "- Add downloaded files to `/creds` folder\n\n- Add THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n**Note**: Make sure you have set your session token otherwise you will get an error\n\n"
        },
        "card": {
          "desc": "- Add downloaded files to `/creds` folder\n\n- Add THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n**Note**: Make sure you have set your session token otherwise you will get an error \n\n",
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Project integration",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:19:07.789Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a93bbc1a9cf6788bff5a1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "- Add downloaded files to `/creds` folder\n\n- Add THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n"
        },
        "card": {
          "desc": "- Add downloaded files to `/creds` folder\n\n- Add THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n**Note**: Make sure you have set your session token otherwise you will get an error\n\n",
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Project integration",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:18:51.622Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a93773051ac5b75aabd64",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E`  // check if this does need to be done\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E"
        },
        "card": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E`  // check if this does need to be done\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E`",
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:17:43.136Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a936f27b5bf23d5350894",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done)\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E  // check if this does need to be done)\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E"
        },
        "card": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E`  // check if this does need to be done\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E",
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:17:35.261Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a93634ed0452485b24311",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\nexport AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E (check if this does need to be done)\nexport AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E  (check if this does need to be done)\nexport AWS_SESSION_TOKEN=\u003Csession-token\u003E"
        },
        "card": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done)\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E  // check if this does need to be done)\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E",
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:17:23.005Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a934463af771c05e124a3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```"
        },
        "card": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\nexport AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E (check if this does need to be done)\nexport AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E  (check if this does need to be done)\nexport AWS_SESSION_TOKEN=\u003Csession-token\u003E",
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:16:52.125Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a92e3392b28876d1f38e5",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n\n```"
        },
        "card": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```",
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T13:15:15.390Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a81fac7dd09874d6fd70f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "aws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n\nResults in:\n\n```\n\n```",
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T12:03:06.658Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a81acbba8a97f5220ab99",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a81acbba8a97f5220ab95",
          "name": "Getting a Session Token",
          "idShort": 8,
          "shortLink": "iPDe54C3"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "Helpful Commands"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T12:01:48.523Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a811c1e343e8a7694bd94",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Add policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\nThis will setup a policy looking something like this:\n\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iot:*\",\n      \"Resource\": \"arn:aws:iot:eu-west-2:*******:topic/replaceWithATopic\"\n    }\n  ]\n}\n```"
        },
        "card": {
          "desc": "Add policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\nThis will setup a policy looking something like this:\n\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iot:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```",
          "id": "610a6cca40f71c2524c2ee39",
          "name": "Adding IoT Policy in AWS",
          "idShort": 2,
          "shortLink": "nXYcNuqh"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:59:24.100Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a7657ab2e6934b7095f0f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "name": "AWS Setup"
        },
        "list": {
          "name": "Helpful Commands",
          "id": "610a75fead08eb401af18e5b"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2021-08-04T11:13:27.128Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a7647f34f4a04f07667f9",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Open credentials\n\n```\nopen ~/.aws/credentials\n```\n\nOpen config\n\n```\n~/.aws/config\n```"
        },
        "card": {
          "desc": "Open credentials\n\n```\nopen ~/.aws/credentials\n```\n\nOpen config\n\n```\nopen ~/.aws/config\n```",
          "id": "610a7617e546015b3544c19f",
          "name": "Opening Config and Credentials Files",
          "idShort": 7,
          "shortLink": "Yc8mm5tJ"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "AWS Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:13:11.445Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a7641d0f31e499d154516",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Open credentials\n\n```\nopen ~/.aws/credentials\n```\n\nOpen config\n```\n~/.aws/config\n```"
        },
        "card": {
          "desc": "Open credentials\n\n```\nopen ~/.aws/credentials\n```\n\nOpen config\n\n```\n~/.aws/config\n```",
          "id": "610a7617e546015b3544c19f",
          "name": "Opening Config and Credentials Files",
          "idShort": 7,
          "shortLink": "Yc8mm5tJ"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "AWS Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:13:05.426Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a763cef04a68e29e7344f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "Open credentials\n\n```\nopen ~/.aws/credentials\n```\n\nOpen config\n```\n~/.aws/config\n```",
          "id": "610a7617e546015b3544c19f",
          "name": "Opening Config and Credentials Files",
          "idShort": 7,
          "shortLink": "Yc8mm5tJ"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "AWS Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:13:00.111Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a7617e546015b3544c1a3",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a7617e546015b3544c19f",
          "name": "Opening Config and Credentials Files",
          "idShort": 7,
          "shortLink": "Yc8mm5tJ"
        },
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "AWS Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T11:12:23.215Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a75fead08eb401af18e5f",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "610a75fead08eb401af18e5b",
          "name": "AWS Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-08-04T11:11:58.011Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a75801b08977ac1c1160e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "closed": false
        },
        "card": {
          "closed": true,
          "id": "610a6cf047ee1836ecc005f0",
          "name": "Creating a Private Key",
          "idShort": 5,
          "shortLink": "Lx5SNds5"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:09:52.590Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a75789fff221606ac2f19",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Add downloaded files to `/creds` folder\n\nAdd THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n"
        },
        "card": {
          "desc": "- Add downloaded files to `/creds` folder\n\n- Add THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n",
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Project integration",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:09:44.271Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a756f0cbc903f3bb5f507",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Step 2 in the creating a thing flow\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/create/single-provision\n\n- Select `Auto-generate a new certificate (recommended)`\n\nStep 3\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all\n\n\nThing is created\n\nAdd downloaded files to `/creds` folder\n\nAdd THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n"
        },
        "card": {
          "desc": "Add downloaded files to `/creds` folder\n\nAdd THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n",
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Project integration",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:09:35.601Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a756f2bc0e3720d720c7d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "name": "Creating a Certificate"
        },
        "card": {
          "name": "Project integration",
          "id": "610a6ce75be9823e0a4a2ac7",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:09:35.355Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a7555426d4a3f611a67d0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n- Click Next\n\n\n"
        },
        "card": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\nSTEP 1:\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n- Click Next\n\nSTEP 2: \n\n- Select `Auto-generate a new certificate (recommended)`\n\nSTEP 3:\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all files (This is the only time you can download your certificate and private key)\n\n**Thing is created**\n\n\n",
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Create thing, certificate and private key",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:09:09.797Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a7555e21dea8774f99b43",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "name": "Creating a THING"
        },
        "card": {
          "name": "Create thing, certificate and private key",
          "id": "610a6cdcae7bc98ffee9e2ac",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:09:09.547Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a74ad3398f047184e86b6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Step 2 in the creating a thing flow\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/create/single-provision\n\n- Select `Auto-generate a new certificate (recommended)`\n\nStep 3\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all\n\n\nThing is created\n\nAdd downloaded files to `/creds` folder\n\n"
        },
        "card": {
          "desc": "Step 2 in the creating a thing flow\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/create/single-provision\n\n- Select `Auto-generate a new certificate (recommended)`\n\nStep 3\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all\n\n\nThing is created\n\nAdd downloaded files to `/creds` folder\n\nAdd THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n",
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Creating a Certificate",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:06:21.515Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a73f15f26dd22227379e2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "name": "Installed GO"
        },
        "card": {
          "name": "Install GO",
          "id": "610a73720bc9a0853aa1d91c",
          "idShort": 6,
          "shortLink": "d6zliOol"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a736df1ae652f648219f3",
          "name": "Installations"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:03:13.375Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a73e92149dd02fa3c383e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "pos": 131071
        },
        "list": {
          "pos": 32767.5,
          "id": "610a736df1ae652f648219f3",
          "name": "Installations"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "updateList",
      "date": "2021-08-04T11:03:05.075Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a73e4749b5e16cecd4a5d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://golang.org/doc/install\n\n- Press download GO for mac\n- Go through setup process\n- Close terminal\n- Reopen terminal\n- Run:\n\n```\n$ go version\n```\n\nResult:\n\n```\ngo version go1.16.6 darwin/amd64\n```"
        },
        "card": {
          "desc": "**Website**: https://golang.org/doc/install\n\n- Press download GO for mac\n- Go through setup process\n- Close terminal\n- Re-open terminal\n- Run:\n\n```\n$ go version\n```\n\nResult:\n\n```\ngo version go1.16.6 darwin/amd64\n```",
          "id": "610a73720bc9a0853aa1d91c",
          "name": "Installed GO",
          "idShort": 6,
          "shortLink": "d6zliOol"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a736df1ae652f648219f3",
          "name": "Installations"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:03:00.984Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a73db48f83050d59a57dd",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "**Website**: https://golang.org/doc/install\n\n- Press download GO for mac\n- Go through setup process\n- Close terminal\n- Reopen terminal\n- Run:\n\n```\n$ go version\n```\n\nResult:\n\n```\ngo version go1.16.6 darwin/amd64\n```",
          "id": "610a73720bc9a0853aa1d91c",
          "name": "Installed GO",
          "idShort": 6,
          "shortLink": "d6zliOol"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a736df1ae652f648219f3",
          "name": "Installations"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T11:02:51.342Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a73720bc9a0853aa1d920",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a73720bc9a0853aa1d91c",
          "name": "Installed GO",
          "idShort": 6,
          "shortLink": "d6zliOol"
        },
        "list": {
          "id": "610a736df1ae652f648219f3",
          "name": "Installations"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T11:01:06.297Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a736df1ae652f648219f7",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "610a736df1ae652f648219f3",
          "name": "Installations"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-08-04T11:01:01.355Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a7000901c1a87682ea4e2",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Step 2 in the creating a thing flow\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/create/single-provision\n\n- Select `Auto-generate a new certificate (recommended)`\n\nStep 3\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all\n\n- Thing is created\n\nAdd downloaded files to `/creds` folder\n\n"
        },
        "card": {
          "desc": "Step 2 in the creating a thing flow\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/create/single-provision\n\n- Select `Auto-generate a new certificate (recommended)`\n\nStep 3\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all\n\n\nThing is created\n\nAdd downloaded files to `/creds` folder\n\n",
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Creating a Certificate",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:46:24.323Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6ffab7e57e6820b9ff26",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "Step 2 in the creating a thing flow\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/create/single-provision\n\n"
        },
        "card": {
          "desc": "Step 2 in the creating a thing flow\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/create/single-provision\n\n- Select `Auto-generate a new certificate (recommended)`\n\nStep 3\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all\n\n- Thing is created\n\nAdd downloaded files to `/creds` folder\n\n",
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Creating a Certificate",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:46:18.946Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6e9eda607e600689b4dd",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "Step 2 in the creating a thing flow\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/create/single-provision\n\n",
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Creating a Certificate",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:40:30.995Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6e75a112664f21373025",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n\n"
        },
        "card": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n- Click Next\n\n\n",
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Creating a THING",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:39:49.220Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6e2ccea4818e3843a3f6",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\n- Select Create a thing\n- Select Create a single thing\n\n"
        },
        "card": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n\n",
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Creating a THING",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:38:36.565Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6d674e676d4bf99cb53e",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\n"
        },
        "card": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\n- Select Create a thing\n- Select Create a single thing\n\n",
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Creating a THING",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:35:19.116Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6d3f9a7b7e1ec9948def",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\n",
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Creating a THING",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:34:39.614Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6cf047ee1836ecc005f4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a6cf047ee1836ecc005f0",
          "name": "Creating a Private Key",
          "idShort": 5,
          "shortLink": "Lx5SNds5"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T10:33:20.797Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6ce75be9823e0a4a2acb",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a6ce75be9823e0a4a2ac7",
          "name": "Creating a Certificate",
          "idShort": 4,
          "shortLink": "Labtr1fv"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T10:33:11.211Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6cdcae7bc98ffee9e2b0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a6cdcae7bc98ffee9e2ac",
          "name": "Creating a THING",
          "idShort": 3,
          "shortLink": "MQ5js1gR"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T10:33:00.820Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6cce769dce598aa9a729",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "Add policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\nThis will setup a policy looking something like this:\n\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iot:*\",\n      \"Resource\": \"arn:aws:iot:eu-west-2:*******:topic/replaceWithATopic\"\n    }\n  ]\n}\n```",
          "id": "610a6cca40f71c2524c2ee39",
          "name": "Adding IoT Policy in AWS",
          "idShort": 2,
          "shortLink": "nXYcNuqh"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:32:46.765Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6cca40f71c2524c2ee3d",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a6cca40f71c2524c2ee39",
          "name": "Adding IoT Policy in AWS",
          "idShort": 2,
          "shortLink": "nXYcNuqh"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T10:32:42.318Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6cb51c7a8041cbb03e55",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\nAdd policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\nThis will setup a policy looking something like this:\n\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iot:*\",\n      \"Resource\": \"arn:aws:iot:eu-west-2:*******:topic/replaceWithATopic\"\n    }\n  ]\n}\n```"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:32:21.672Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6c80c6b89914481aa8f0",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\nAdd policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\n"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\nAdd policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\nThis will setup a policy looking something like this:\n\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iot:*\",\n      \"Resource\": \"arn:aws:iot:eu-west-2:*******:topic/replaceWithATopic\"\n    }\n  ]\n}\n```",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:31:28.187Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6c4ce500ee4e5f151559",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n"
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\nAdd policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\n",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:30:36.296Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a6a3e101f66745796d333",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "old": {
          "desc": ""
        },
        "card": {
          "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n",
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        }
      },
      "appCreator": null,
      "type": "updateCard",
      "date": "2021-08-04T10:21:50.215Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a69f914ba505962aa80d1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "card": {
          "id": "610a69f914ba505962aa80cd",
          "name": "Setup IoT in AWS",
          "idShort": 1,
          "shortLink": "Z1Q8LH9J"
        },
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createCard",
      "date": "2021-08-04T10:20:41.877Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a69d8c91d358f7cd6c497",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "list": {
          "id": "610a69d8c91d358f7cd6c493",
          "name": "IoT Setup"
        },
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createList",
      "date": "2021-08-04T10:20:08.247Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a69cff0f4748a2e5fddd4",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        },
        "organization": {
          "id": "60b9ffda1c42218c5ec7c095",
          "name": "Courtney Osborn's workspace"
        }
      },
      "appCreator": null,
      "type": "addToOrganizationBoard",
      "date": "2021-08-04T10:19:59.875Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    },
    {
      "id": "610a69cff0f4748a2e5fddd1",
      "idMemberCreator": "607d3a850d54e983ddb49f9b",
      "data": {
        "board": {
          "id": "610a69cff0f4748a2e5fddcc",
          "name": "Things I Have Learnt",
          "shortLink": "0DpXwh8h"
        }
      },
      "appCreator": null,
      "type": "createBoard",
      "date": "2021-08-04T10:19:59.872Z",
      "limits": null,
      "memberCreator": {
        "id": "607d3a850d54e983ddb49f9b",
        "activityBlocked": false,
        "avatarHash": "601854f11e1834459aa4d49df745cc27",
        "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
        "fullName": "Courtney Osborn",
        "idMemberReferrer": null,
        "initials": "CO",
        "nonPublic": {
          "fullName": "Osborn, Courtney",
          "initials": "OC",
          "avatarHash": null
        },
        "nonPublicAvailable": true,
        "username": "courtneyosborn7"
      }
    }
  ],
  "cards": [
    {
      "id": "61f8f29285244d89760ef576",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 14,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": false,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-01T08:50:28.433Z",
      "dateViewedByCreator": null,
      "desc": "",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xtt8r5n5q7j2i707li+21ldwjux4j@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [
        "61f8f2a2fbfc8a41b52ade2d"
      ],
      "idLabels": [],
      "idList": "61f8f28c5d8a9d60dd0e65ee",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 102,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Django App Setup",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f8f29285244d89760ef576",
      "pinned": false,
      "pos": 65535,
      "shortLink": "aMz3Ugfs",
      "shortUrl": "https://trello.com/c/aMz3Ugfs",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/aMz3Ugfs/102-django-app-setup",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a73720bc9a0853aa1d91c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-04T11:03:13.367Z",
      "dateViewedByCreator": null,
      "desc": "**Website**: https://golang.org/doc/install\n\n- Press download GO for mac\n- Go through setup process\n- Close terminal\n- Re-open terminal\n- Run:\n\n```\n$ go version\n```\n\nResult:\n\n```\ngo version go1.16.6 darwin/amd64\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtl1jhv5nax7bcrhgc+2bsfysgayu@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610a736df1ae652f648219f3",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 6,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Install GO",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a73720bc9a0853aa1d91c",
      "pinned": false,
      "pos": 65535,
      "shortLink": "d6zliOol",
      "shortUrl": "https://trello.com/c/d6zliOol",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/d6zliOol/6-install-go",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a69f914ba505962aa80cd",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 1,
        "checkItemsChecked": 1,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [
        {
          "idCheckItem": "6113fdaa95bd732a0a67b132",
          "state": "complete"
        }
      ],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-11T16:43:14.522Z",
      "dateViewedByCreator": null,
      "desc": "**Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-moisture-setup.html\n\n1. https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws\n2. https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key\n3. https://trello.com/c/Labtr1fv/4-project-integration\n4. https://trello.com/c/2qNIRyr2/10-seeing-mqtt-message-in-aws\n5. https://trello.com/c/la71gBuG/12-creating-a-rule\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtku99czv37b3mk3il+0hw1lum8dz@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [
        "6113fda389647332619b15ce"
      ],
      "idLabels": [],
      "idList": "610a69d8c91d358f7cd6c493",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 1,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup IoT in AWS",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a69f914ba505962aa80cd",
      "pinned": false,
      "pos": 65535,
      "shortLink": "Z1Q8LH9J",
      "shortUrl": "https://trello.com/c/Z1Q8LH9J",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Z1Q8LH9J/1-setup-iot-in-aws",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a6cca40f71c2524c2ee39",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 1,
        "checkItemsChecked": 1,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [
        {
          "idCheckItem": "6113b9818320115964642ae9",
          "state": "complete"
        }
      ],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-11T11:50:26.749Z",
      "dateViewedByCreator": null,
      "desc": "Add policy:\n\n- Add any name \n- In Add statement -\u003E Action add the following\n\n```\niot:*\n```\n\n- The resource ARN field will generated a value on it's own\n- Select `Allow` under Effect\n\nThis will setup a policy looking something like this:\n\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iot:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```\n\n**Terraform Docs:** https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iot_policy",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtkwf8x5ojw3hh31a1+1f5vwsgwi5@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [
        "6113b96a5747318394cd5eec"
      ],
      "idLabels": [],
      "idList": "610a69d8c91d358f7cd6c493",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 2,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Adding IoT Policy in AWS",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a6cca40f71c2524c2ee39",
      "pinned": false,
      "pos": 131071,
      "shortLink": "nXYcNuqh",
      "shortUrl": "https://trello.com/c/nXYcNuqh",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/nXYcNuqh/2-adding-iot-policy-in-aws",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a6cdcae7bc98ffee9e2ac",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": true,
        "fogbugz": "",
        "checkItems": 3,
        "checkItemsChecked": 3,
        "checkItemsEarliestDue": null,
        "comments": 2,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [
        {
          "idCheckItem": "6113b990e476533ea4ff5c5e",
          "state": "complete"
        },
        {
          "idCheckItem": "6113b9a14db2312a98204b40",
          "state": "complete"
        },
        {
          "idCheckItem": "6113b9ad5be15c60d5396226",
          "state": "complete"
        }
      ],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-11T11:51:09.907Z",
      "dateViewedByCreator": null,
      "desc": "AWS IoT\n\nManage -\u003E Things\n\n**Page**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/thinghub\n\nSTEP 1:\n\n- Select Create a thing\n- Select Create a single thing\n- Enter Thing name (This cannot be changed, only deleted and recreated)\n- Click Next\n\n**Terraform Docs:** https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iot_thing\n\nSTEP 2: \n\n- Select `Auto-generate a new certificate (recommended)`\n\nSTEP 3:\n\n- Select thing name\n- Create thing\n- Download certificates and keys page will show\n- Download all files (This is the only time you can download your certificate and private key)\n\n**Thing is created**\n\n**Terraform Docs:** https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iot_certificate\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtkwh8nt55cfvkdcx8+2isq1zej7r@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [
        "6113b98b54887114425f6379"
      ],
      "idLabels": [],
      "idList": "610a69d8c91d358f7cd6c493",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 3,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Create thing, certificate and private key",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a6cdcae7bc98ffee9e2ac",
      "pinned": false,
      "pos": 196607,
      "shortLink": "MQ5js1gR",
      "shortUrl": "https://trello.com/c/MQ5js1gR",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": true,
      "url": "https://trello.com/c/MQ5js1gR/3-create-thing-certificate-and-private-key",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a6ce75be9823e0a4a2ac7",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 2,
        "checkItemsChecked": 2,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [
        {
          "idCheckItem": "6113b9ca6ff119607fdf44cf",
          "state": "complete"
        },
        {
          "idCheckItem": "6113ba037738e01e3b8b48a1",
          "state": "complete"
        }
      ],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-11T11:52:37.162Z",
      "dateViewedByCreator": null,
      "desc": "- Add downloaded files to `/creds` folder\n\n- Add THINGNAME AND ENDPOINT to .env file\n\n**Note**: To get ENDPOINT value, run the following:\n\n```\naws iot describe-endpoint --endpoint-type iot:Data-ATS\n```\n\n**Note**: Make sure you have set your session token otherwise you will get an error (see https://trello.com/c/iPDe54C3/8-getting-a-session-token)\n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtkwie892ee9dln9vr+0sfo7qlv4d@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [
        "6113b9b7c02efa3ccc88bb58"
      ],
      "idLabels": [],
      "idList": "610a69d8c91d358f7cd6c493",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 4,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Project integration",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a6ce75be9823e0a4a2ac7",
      "pinned": false,
      "pos": 262143,
      "shortLink": "Labtr1fv",
      "shortUrl": "https://trello.com/c/Labtr1fv",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Labtr1fv/4-project-integration",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a9722d00cfb7d91def415",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 1,
        "checkItemsChecked": 1,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [
        {
          "idCheckItem": "6113fd948c6c6f7585dede47",
          "state": "complete"
        }
      ],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-11T16:40:53.159Z",
      "dateViewedByCreator": null,
      "desc": "AWS IoT\n\n**Website**: https://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/test\n\n- Click on the test file\n- Add in name of mqttClient (i.e zigbee2mqtt/test)\n- Press Subscribe\n- Click on Subscription\n- Run `go run cmd/garageiot/main.go`\n- You will then see the message\n\nhttps://eu-west-2.console.aws.amazon.com/iot/home?region=eu-west-2#/test",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtlszjqdus9gw1g9at+281ociy5au@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [
        "6113fd8bfb1c7b144d352f81"
      ],
      "idLabels": [],
      "idList": "610a69d8c91d358f7cd6c493",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 10,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Seeing mqtt message in AWS",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a9722d00cfb7d91def415",
      "pinned": false,
      "pos": 327679,
      "shortLink": "2qNIRyr2",
      "shortUrl": "https://trello.com/c/2qNIRyr2",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/2qNIRyr2/10-seeing-mqtt-message-in-aws",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a6cf047ee1836ecc005f0",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": false,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": true,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-04T11:09:52.581Z",
      "dateViewedByCreator": null,
      "desc": "",
      "descData": null,
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtkwjcynr7i67t0lio+0ia8a94y8d@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610a69d8c91d358f7cd6c493",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 5,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Creating a Private Key",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a6cf047ee1836ecc005f0",
      "pinned": false,
      "pos": 327679,
      "shortLink": "Lx5SNds5",
      "shortUrl": "https://trello.com/c/Lx5SNds5",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Lx5SNds5/5-creating-a-private-key",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610b9baf7c9e6e6ce49f58ae",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 1,
        "checkItemsChecked": 1,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [
        {
          "idCheckItem": "6113fd8315784d1ecab9e475",
          "state": "complete"
        }
      ],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-11T16:40:37.224Z",
      "dateViewedByCreator": null,
      "desc": "**Docs Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html\n\n1. Iot AWS -\u003E Act -\u003E Rules\n2. Create a rule\n3. Add a name (garage_iot_test_ddb)\n4. Add meaningful description \n4. Use version ** 2016-03-23**\n5. Add select statement `SELECT message FROM 'gararge_iot_test/+/data'`**\n6. Select Add action\n7. Choose: Insert a message into a DynamoDB table\n8. Click configuration action\n9. Choose table created in https://trello.com/c/1zbGZk1K/11-add-dynamodb-table\n10. Add partition key value i,e `${timestamp()}`\n11. Add 2nd partition key value i.e `${cast(topic(2) AS DECIMAL)}`\n12. Add Input to Write message data to this column (i.e device_data)\n13. Leave Operation blank\n14. In Choose or create a role to grant AWS IoT access to perform this action, choose Create Role.\n15. In Create a new role, enter `garage_iot_test_ddb_role`, and choose Create role.\n16. At the bottom of Configure action, choose Add action.\n17. To create the rule, at the bottom of Create a rule, choose Create rule.\n\n**Rule is created**\n\n** I changed the `mqttClient` in the code so that it would include the device ID\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtrdckmqslwuvx9msu+252k6tnb9o@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [
        "6113fd7cc66ef9298fedef0e"
      ],
      "idLabels": [],
      "idList": "610a69d8c91d358f7cd6c493",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 12,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Creating A Rule",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610b9baf7c9e6e6ce49f58ae",
      "pinned": false,
      "pos": 393215,
      "shortLink": "la71gBuG",
      "shortUrl": "https://trello.com/c/la71gBuG",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/la71gBuG/12-creating-a-rule",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61ee7696b71e7a5c1d4f5ab3",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-24T09:51:19.018Z",
      "dateViewedByCreator": null,
      "desc": "https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/0",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xs7ws1efd7ud0p62er+1ckfi8hgog@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61ee7695680ed5898b0af044",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 82,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61ee7696b71e7a5c1d4f5ab3",
      "pinned": false,
      "pos": 65535,
      "shortLink": "BqeWvR4L",
      "shortUrl": "https://trello.com/c/BqeWvR4L",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/BqeWvR4L/82-setup",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "611e32603a1b494eb900e627",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-19T10:28:54.998Z",
      "dateViewedByCreator": null,
      "desc": "`mv old_name new_name` ",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wwl0rniyruunsidmp3+0y00qrhsj0@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610a75fead08eb401af18e5b",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 31,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Change the name of a directory",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/611e32603a1b494eb900e627",
      "pinned": false,
      "pos": 65535,
      "shortLink": "W8zjPOQ0",
      "shortUrl": "https://trello.com/c/W8zjPOQ0",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/W8zjPOQ0/31-change-the-name-of-a-directory",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "618523db2e7eb95e67dc6822",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-05T12:31:08.858Z",
      "dateViewedByCreator": null,
      "desc": "What exactly is you shell path: https://medium.com/@jalendport/what-exactly-is-your-shell-path-2f076f02deb4\n\nIf you want to see what your path is currently set to, run `$ echo $PATH`",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xc7yilwv9ceseb0dnm+0dxfzmvnda@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610a75fead08eb401af18e5b",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 46,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "$PATH",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/618523db2e7eb95e67dc6822",
      "pinned": false,
      "pos": 131071,
      "shortLink": "2H3jNrjb",
      "shortUrl": "https://trello.com/c/2H3jNrjb",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/2H3jNrjb/46-path",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "619f4d54a0880f056629924c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-25T08:47:33.769Z",
      "dateViewedByCreator": null,
      "desc": "```\nexport PATH=\"~/go/bin:$PATH\"\n```\n\nhttps://stackoverflow.com/questions/66952482/cobra-init-not-working-command-not-found",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xg70us2wab20e2p2do+1jzw9nma78@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610a75fead08eb401af18e5b",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 53,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Add Package to $PATH",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/619f4d54a0880f056629924c",
      "pinned": false,
      "pos": 196607,
      "shortLink": "fMJrP5v6",
      "shortUrl": "https://trello.com/c/fMJrP5v6",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/fMJrP5v6/53-add-package-to-path",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6260f732b3ea30708129fb6f",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-04-21T06:19:13.426Z",
      "dateViewedByCreator": null,
      "desc": "If you have the file open on your screen but need to find the path to access in the terminal:\n\n- Drag and drop the file into your terminal\n\nSource \n\nhttps://askubuntu.com/questions/23413/how-can-you-quickly-get-the-complete-path-to-a-file-for-use-in-terminal",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2y9m237ie07u9ul94dr+261mzc0k2n@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610a75fead08eb401af18e5b",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 132,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Find the path of a file",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6260f732b3ea30708129fb6f",
      "pinned": false,
      "pos": 262143,
      "shortLink": "kms4r11u",
      "shortUrl": "https://trello.com/c/kms4r11u",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/kms4r11u/132-find-the-path-of-a-file",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6270c905d5794930788ce567",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-05-03T06:17:46.035Z",
      "dateViewedByCreator": null,
      "desc": "curl -X GET -H \"Authorization: Bearer eyJraWQiOiJkX3dtY29GQXhLRURGV21SUFNBNHNkSlFsQ0R4UzhNUHNyMW1CYjY5NHdBIiwiYWxnIjoiUlMyNTYifQ.eyJ2ZXIiOjEsImp0aSI6IkFULnpmTDdjVUZRcVQ0M2hpVkdxUGFQWi1DWFVDTU9YX1NYYXRmaTVVSHZpYnMiLCJpc3MiOiJodHRwczovL2JjZ2Rldi5va3RhcHJldmlldy5jb20vb2F1dGgyL2RlZmF1bHQiLCJhdWQiOiJhcGk6Ly9kZWZhdWx0IiwiaWF0IjoxNjUxMjIyMTQ2LCJleHAiOjE2NTEyMjU3NDYsImNpZCI6IjBvYTE1eDNjd20wcFZMTTc3MGg4IiwidWlkIjoiMDB1eWJvZjllbGRrdmxHQUIwaDciLCJzY3AiOlsicHJvZmlsZSIsImVtYWlsIiwib3BlbmlkIl0sImF1dGhfdGltZSI6MTY1MTIxNTAwMSwic3ViIjoiQ291cnRuZXkuT3Nib3JuQGJjZ2R2LmNvbSIsIkhSSUQiOiI0MDE3ODUiLCJlbWFpbCI6IkNvdXJ0bmV5Lk9zYm9ybkBiY2dkdi5jb20ifQ.XPxM979MKcsMRpxY0n4ub7lvpyqMu4VEqY-OYRYL1CUT_AtlkAgXBG3-i58Su37RIiT9wsqtxRN02mdmnMza_y9Kold6VIoM7kokWjqEpbSxPr0XrMGT-JG1wcQ-ljGW_8vK8TBBimXdVOClh4vw0l5pDvhaZxmUj_tlj8U-8nYQWtTykLdUCSN_9iP7x3Iol_-hnaAAAXS_fbIjxHFov-vOxQeuPRY8FHQt2m9pNFrV1EfeOPKcEuz4aU4t_RjReUsu-DWfinjTPOSe0yXieLHTNwY7uOw0Xel5BDPrCOV8A9KrWREWu0_Yi79ZZBc26aWF6LCJvphfsl0vgEyErQ\" \"https://bcgdev.oktapreview.com/oauth2/default/v1/userinfo\"",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2yc0ke4kwfimkrpbexz+2ew6athv55@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610a75fead08eb401af18e5b",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 134,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Curl request",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6270c905d5794930788ce567",
      "pinned": false,
      "pos": 327679,
      "shortLink": "dYSX7Xah",
      "shortUrl": "https://trello.com/c/dYSX7Xah",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/dYSX7Xah/134-curl-request",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610bb3f5226ad01f0efc23b8",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-05T09:49:08.292Z",
      "dateViewedByCreator": null,
      "desc": "https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtrw0inojj1zyh34qg+0iuxog5imm@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610a940f9238581891cb9066",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 13,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Store device data in a DynamoDB table",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610bb3f5226ad01f0efc23b8",
      "pinned": false,
      "pos": 65535,
      "shortLink": "E4W1efmj",
      "shortUrl": "https://trello.com/c/E4W1efmj",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/E4W1efmj/13-store-device-data-in-a-dynamodb-table",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a7617e546015b3544c19f",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": true,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-03-01T08:50:10.752Z",
      "dateViewedByCreator": null,
      "desc": "Open credentials\n\n```\nopen ~/.aws/credentials\n```\n\n- Contains access key and secret access key\n\nOpen config\n\n```\nopen ~/.aws/config\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtl3ksrksljua0qavz+0bmbpo7fy9@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [
        "607d3a850d54e983ddb49f9b"
      ],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 7,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Opening Config and Credentials Files",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a7617e546015b3544c19f",
      "pinned": false,
      "pos": 65535,
      "shortLink": "Yc8mm5tJ",
      "shortUrl": "https://trello.com/c/Yc8mm5tJ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": true,
      "url": "https://trello.com/c/Yc8mm5tJ/7-opening-config-and-credentials-files",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a81acbba8a97f5220ab95",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-17T08:10:14.653Z",
      "dateViewedByCreator": null,
      "desc": "**Docs**: https://aws.amazon.com/premiumsupport/knowledge-center/authenticate-mfa-cli/\n\n```\naws sts get-session-token --serial-number arn:aws:iam::363321665306:mfa/courtney.osborn --token-code \u003Cmfa-token-code\u003E\n```\n\nResults in:\n\n```\n{\n    \"Credentials\": {\n        \"AccessKeyId\": \"\u003Caccess-key-od\u003E\",\n        \"SecretAccessKey\": \"\u003Csecret-access-key\u003E\",\n        \"SessionToken\": \"\u003CSession-token\u003E\",\n        \"Expiration\": \"2021-08-04T23:57:08+00:00\"\n    }\n}\n```\n\nThen set the following variables:\n\n`$ export AWS_ACCESS_KEY_ID=\u003Caccess-key\u003E`  // check if this does need to be done\n`$ export AWS_SECRET_ACCESS_KEY=\u003Csecret-key\u003E`  // check if this does need to be done\n`$ export AWS_SESSION_TOKEN=\u003Csession-token\u003E`",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtlchf0p1hc1b2zjit+2o7n2oulh9@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 8,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Getting a Session Token",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a81acbba8a97f5220ab95",
      "pinned": false,
      "pos": 131071,
      "shortLink": "iPDe54C3",
      "shortUrl": "https://trello.com/c/iPDe54C3",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/iPDe54C3/8-getting-a-session-token",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610a941c023dc37274ed4583",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-05T07:55:01.324Z",
      "dateViewedByCreator": null,
      "desc": "This allows you to check what you have access to and describes the error in full\n\nhttps://policysim.aws.amazon.com/home/index.jsp?#users/courtney.osborn",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtlqnrdu17t7kdzybn+0cny22p3au@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 9,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "AWS IAM Policy Simulator",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610a941c023dc37274ed4583",
      "pinned": false,
      "pos": 196607,
      "shortLink": "5xx11E4H",
      "shortUrl": "https://trello.com/c/5xx11E4H",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/5xx11E4H/9-aws-iam-policy-simulator",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610b9973346daf758fe91d17",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-05T09:48:20.024Z",
      "dateViewedByCreator": null,
      "desc": "**Doc Website**: https://docs.aws.amazon.com/iot/latest/developerguide/iot-ddb-rule.html#iot-ddb-rule-ddb-table\n\n**Website**: https://eu-west-2.console.aws.amazon.com/dynamodb/home?region=eu-west-2#gettingStarted:\n\n1. Click Create Table\n2. Enter Name of Table (garage_iot_test)\n3. Add Primary Key (sample_time -\u003E Number)\n4. Tick Add Sort Key\n5. Add Sort Key  (device_id -\u003E Number)\n6. Click Create",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wtrbmopl4kx48cdyqf+2e8qbd1lxs@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 11,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Add DynamoDB Table",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610b9973346daf758fe91d17",
      "pinned": false,
      "pos": 262143,
      "shortLink": "1zbGZk1K",
      "shortUrl": "https://trello.com/c/1zbGZk1K",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/1zbGZk1K/11-add-dynamodb-table",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61110fdeea2e9b10e003c6ac",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 8,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-09T11:51:56.910Z",
      "dateViewedByCreator": null,
      "desc": "**Website**: https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\nCreate a connect lambda:\n\n```\n// connect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var putParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Item: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // Insert incoming connection id in the WebSocket\n    await db.put(putParams).promise();\n\n    return {\n      statusCode: 200,\n      body: \"Connected\"\n    };\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to connect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\n\nCreate a disconnect lambda:\n\n```\n// disconnect.js\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  const db = new DynamoDB.DocumentClient();\n  var deleteParams = {\n    TableName: process.env.TABLE_NAME, // In our case, \"WebSocketManager\"\n    Key: {\n      ConnectionId: event.requestContext.connectionId,\n    }\n  };\n\n  try {\n    // If the client dis\n    await db.delete(deleteParams).promise();\n    return {\n      statusCode: 200,\n      body: \"Disconnected\"\n    }\n  } catch (e) {\n    console.error('error!', e);\n    return {\n      statusCode: 501,\n      body: \"Failed to disconnect: \" + JSON.stringify(e),\n    };\n  }\n};\n```\n\nCreate custom functionality lambda (Default lambda)\n\ni.e:\n\n```\nconst ApiGatewayManagementApi = require('aws-sdk/clients/apigatewaymanagementapi');\nconst DynamoDB = require('aws-sdk/clients/dynamodb');\n\nexports.handler = async function(event, context, callback) {\n  console.log('CONTEXT', context)\n  console.log('EVENT', event)\n  const db = new DynamoDB.DocumentClient();\n  let connections;\n\n  try {\n    connections = await db.scan({ TableName: 'WebSocketManagerTest' }).promise();\n    console.log('CONNECTIONS', connections)\n  } catch (e) {\n    console.log('CONNECTIONS FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n  \n    try {\n      const data = await db.scan({ TableName: 'garage_iot_test' }).promise();\n      console.log('DATA', data)\n      \n      const api = new ApiGatewayManagementApi({\n        endpoint: 'https://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production',**\n      });\n      \n      console.log(\"CONNECTION ITEMS\", connections.Items);\n      \n      const postCalls = connections.Items.map(async ({ ConnectionId }) =\u003E {\n        console.log(\"CONNECTION ID\", ConnectionId);\n        await api.postToConnection({ ConnectionId, Data: JSON.stringify(data) }).promise();\n      });\n      \n      console.log(\"POST CALLS\", await postCalls);\n    \n      try {\n        const response = await Promise.all(postCalls);\n        console.log(\"RESPONSE\", response);\n      } catch (e) {\n        console.log(\"ERROR POST CALLS\", e);\n        return { statusCode: 500, body: e.stack };\n      }\n    \n      return { statusCode: 200, body: 'Event sent.' };\n    \n  } catch (e) {\n    console.log('DATA FAILED', e)\n    return { statusCode: 500, body: e.stack };\n  }\n};\n\n```\n\n** this is the same as the web scoket address but instead of the `wss:// ` use `https://`\n\n**Create a web socket API in API Gateway**:\n\n- Go to API gateway\n- Click **Create API**\n- Choose **WebSocket API** -\u003E Click build\n- Route selection expression -\u003E Input `request.body.action`\n- Click ** Next**\n- Click **Add $connect route**\n- Click **Add $disconnect route**\n- Click **Add $default route** \n- Click **Next**\n- Integration for $connect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose connect lambda (i.e connect-test)\n- Integration for $disconnect -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose disconnect lambda (i.e disconnect-test)\n- Integration for $default -\u003E Integration type -\u003E choose lambda -\u003E eu-west-2 region -\u003E lambda function -\u003E choose lambda with your functionality (i.e trigger-test)\n- Click **Next**\n- Choose Stage -\u003E production\n- Click **Next**\n- Click **Create and Deploy**\n\n**Add response to web socket**:\n\n- In API gateway -\u003E choose gateway created above\n- Click on **$default** which is under routes\n- Click **Add integration response**\n- Click **Actions** -\u003E then **Deploy API**\n\n**Download wscat**\n\n- [wscat](https://www.npmjs.com/package/wscat)\n\n**Start Web socket**\n\n- Get the web socket address \n   -\u003E API gateway \n   -\u003E choose gateway created above \n   -\u003E Click on **Stages** \n   -\u003E Choose your stage (i.e production) \n   -\u003E Get the websocket URL\n\n- In the terminal run:\n   -\u003E `wscat -c \u003Cwebsocket url\u003E`\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wul70f1qvdx5h8a8q4+1sdmria55m@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [
        "6111103e4c7b065bf55d9344"
      ],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 16,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Add web socket API",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61110fdeea2e9b10e003c6ac",
      "pinned": false,
      "pos": 327679,
      "shortLink": "dAm4VfVz",
      "shortUrl": "https://trello.com/c/dAm4VfVz",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/dAm4VfVz/16-add-web-socket-api",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "611116ef7aee5b63a6847391",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 2,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-09T11:57:59.468Z",
      "dateViewedByCreator": null,
      "desc": "At the bottom of this blog\n\n**Website: ** https://spin.atomicobject.com/2021/01/06/websockets-aws-dynamodb-updates/\n\n**Enable streaming**\n\n- Go to dynamo DB table\n- Choose custom DB (not the connect DB)\n- Go to **overview**\n- Click `Manage DynamoDB Stream`\n\n**Enable trigger**\n\n- Go to dynamo DB table\n- Choose custom DB (not the connect DB)\n- Go to triggers\n- Create trigger\n- Select existing lambda function\n- Choose custom functionality lambda (i.e trigger test)\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wulcfzvo7o59m8ero1+1lo9nh2r2e@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [
        "6111183b75a0721d2c5ebd1b"
      ],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 17,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Enable Dynamo DB streaming",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/611116ef7aee5b63a6847391",
      "pinned": false,
      "pos": 393215,
      "shortLink": "xkPhYxuA",
      "shortUrl": "https://trello.com/c/xkPhYxuA",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/xkPhYxuA/17-enable-dynamo-db-streaming",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "611b58bcdbe8ea8418c75da5",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-20T13:11:39.447Z",
      "dateViewedByCreator": null,
      "desc": "```\naws sts get-caller-identity\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2ww5fofevj614amhqcl+0jcw1o4mgq@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 28,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Get caller identity",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/611b58bcdbe8ea8418c75da5",
      "pinned": false,
      "pos": 458751,
      "shortLink": "O561sIlz",
      "shortUrl": "https://trello.com/c/O561sIlz",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/O561sIlz/28-get-caller-identity",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "619d137f03b35446e3d3e4dd",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-23T16:15:18.321Z",
      "dateViewedByCreator": null,
      "desc": "`User is not authorized to access this resource`\n\nhttps://forum.serverless.com/t/user-is-not-authorized-to-access-this-resource/6357",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xfuunjlak04rjadot9+188hc0zebo@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 51,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "ERROR: User is not authorized to access this resource",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/619d137f03b35446e3d3e4dd",
      "pinned": false,
      "pos": 524287,
      "shortLink": "pwMZFw8w",
      "shortUrl": "https://trello.com/c/pwMZFw8w",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/pwMZFw8w/51-error-user-is-not-authorized-to-access-this-resource",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "619e051bba400113d05b4f97",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-24T09:32:22.474Z",
      "dateViewedByCreator": null,
      "desc": "Look at the Route Selection Expression the last word in that expression is the key to your request object and the value is the custom route that you are choosing.\n\nFor example:\n\n**Route Selection Expression:**  `$request.body.action`\n\n**Custom route: ** `processing-event`\n\nRequest body should looks like the following:\n\n{\"action\": \"processing-event\", \"step\": \"generate-report-start\", \"info\": \"some info\"}\n\nSo the `action` (which comes from the route expression `$request.body.action`) should be set to the custom route you wish to hit (`processing-event`).\n\nThe rest of the information is up to you - you can just send:\n`{\"action\": \"processing-event\"}` if you don't want your lambda function to have any arguments.\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xg00gb5b11j228a07r+1y9c3j9s0k@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 52,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "WebSocket Custom Routes",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/619e051bba400113d05b4f97",
      "pinned": false,
      "pos": 589823,
      "shortLink": "PVW22BUl",
      "shortUrl": "https://trello.com/c/PVW22BUl",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/PVW22BUl/52-websocket-custom-routes",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61e5814ae3e6e36d8efa7a8c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-17T14:50:27.653Z",
      "dateViewedByCreator": null,
      "desc": "```\nExecution failed due to configuration error: Malformed Lambda proxy response\n```\n\nThis error means that we need to add a return object containing a status code and body in any WebSocket lambda handler including the connect and disconnect lambda to ensue it works properly. \n\n```\nreturn { statusCode: 200, body: \"Disconnected\" };\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xqux8o4l6t75h3sznw+00l9ohcpmr@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 75,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Websocket: Execution failed due to configuration error: Malformed Lambda proxy response",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61e5814ae3e6e36d8efa7a8c",
      "pinned": false,
      "pos": 655359,
      "shortLink": "7Y3SL3hA",
      "shortUrl": "https://trello.com/c/7Y3SL3hA",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/7Y3SL3hA/75-websocket-execution-failed-due-to-configuration-error-malformed-lambda-proxy-response",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f166e734000d3e374464cb",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-26T15:21:24.632Z",
      "dateViewedByCreator": null,
      "desc": "https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xsnzb14egq1j5ep7m3+1c6hk1wiho@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 87,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Configuration and credential file settings",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f166e734000d3e374464cb",
      "pinned": false,
      "pos": 720895,
      "shortLink": "Ee0pf5jT",
      "shortUrl": "https://trello.com/c/Ee0pf5jT",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Ee0pf5jT/87-configuration-and-credential-file-settings",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "620e808340f3900d2851fc65",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-09-14T15:37:33.318Z",
      "dateViewedByCreator": null,
      "desc": "EC2 -\u003E Network interfaces -\u003E eni-0105f8a40d6efd5b8\n\nIn this look at description to see what the network interface is connected to -\u003E it has been a lambda for me \n\n```\nDescription\nAWS Lambda VPC ENI-lon-tech-universe-dev2-dev2-5683e9b4-f3b9-46de-be34-f83d19c16d3c\n```\n\nUndeploy zappa\n\n```\nzappa undeploy dev\n```\n\nThis will delete the lambda which means the VPC can be deleted",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xx3418dykyevvysiud+0jv3bedy3k@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 125,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Removing network interfaces (Cannot delete VPC)",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/620e808340f3900d2851fc65",
      "pinned": false,
      "pos": 851967,
      "shortLink": "jhNmtkmz",
      "shortUrl": "https://trello.com/c/jhNmtkmz",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/jhNmtkmz/125-removing-network-interfaces-cannot-delete-vpc",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "626018316805976168701de1",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-04-20T14:28:54.686Z",
      "dateViewedByCreator": null,
      "desc": "ERROR:\n\ntime out\n\n\n## VPC Endpoint for S3:\n\nhttps://aws.amazon.com/blogs/aws/new-vpc-endpoint-for-amazon-s3/\nhttps://docs.aws.amazon.com/vpc/latest/privatelink/vpce-gateway.html#vpc-endpoints-security\n\n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2y9halk5un1s7fcakf5+0lktsznd70@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 131,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Saving images to S3 Django Admin + VPC",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/626018316805976168701de1",
      "pinned": false,
      "pos": 917503,
      "shortLink": "zlHTy1QO",
      "shortUrl": "https://trello.com/c/zlHTy1QO",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/zlHTy1QO/131-saving-images-to-s3-django-admin-vpc",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6368eb21226c610102be3f5c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-11-07T11:25:34.875Z",
      "dateViewedByCreator": null,
      "desc": "Query:\n\n```\nfields @timestamp, @message\n  | filter strcontains(@message, \"POST /user\")\n  | sort @timestamp desc\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2zdpgpe7nmncqgvb2ak+0ampm9rbpr@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 141,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "CloudWatch Logs",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6368eb21226c610102be3f5c",
      "pinned": false,
      "pos": 983039,
      "shortLink": "yEEgtLS0",
      "shortUrl": "https://trello.com/c/yEEgtLS0",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/yEEgtLS0/141-cloudwatch-logs",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6204c65b92b0645aeca07de2",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-02-28T14:42:26.242Z",
      "dateViewedByCreator": null,
      "desc": "Site: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html\n\nLists all S3 buckets \n\n```\n$ aws s3 ls\n```\n\nThe following command lists all objects and prefixes in a bucket. In this example output, the prefix example/ has one file named MyFile1.txt.\n\n```\n$ aws s3 ls s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\n\nCreate a bucket\n\n```\n$ aws s3 mb s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```\n\nDelete a bucket\n\n```\n$ aws s3 rb s3://lon-eng-tech-universe-test-2-dev-static-bucket\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xvlx41ne94jdv7yndu+0uaioiry5b@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [
        "63fe127d12ffbb42b9e7de2c"
      ],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 120,
      "idAttachmentCover": null,
      "labels": [
        {
          "id": "63fe127d12ffbb42b9e7de2c",
          "idBoard": "610a69cff0f4748a2e5fddcc",
          "idOrganization": "60b9ffda1c42218c5ec7c095",
          "name": "S3",
          "nodeId": "ari:cloud:trello::label/workspace/60b9ffda1c42218c5ec7c095/63fe127d12ffbb42b9e7de2c",
          "color": "yellow_light",
          "uses": 2
        }
      ],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "CI commands S3",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6204c65b92b0645aeca07de2",
      "pinned": false,
      "pos": 1015807,
      "shortLink": "ZJK1vFld",
      "shortUrl": "https://trello.com/c/ZJK1vFld",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ZJK1vFld/120-ci-commands-s3",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "63fe126ea28536fb7fd74b1c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": true,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 1,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-02-28T14:42:13.624Z",
      "dateViewedByCreator": null,
      "desc": "In the bucket policy put the following JSON\n\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Id\": \"Policy1453975719447\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1453975716525\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::test0022/*\"\n        }\n    ]\n}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+300d3jwf9ha95ak3uvw+08cp6psncr@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [
        "63fe127d12ffbb42b9e7de2c"
      ],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 142,
      "idAttachmentCover": null,
      "labels": [
        {
          "id": "63fe127d12ffbb42b9e7de2c",
          "idBoard": "610a69cff0f4748a2e5fddcc",
          "idOrganization": "60b9ffda1c42218c5ec7c095",
          "name": "S3",
          "nodeId": "ari:cloud:trello::label/workspace/60b9ffda1c42218c5ec7c095/63fe127d12ffbb42b9e7de2c",
          "color": "yellow_light",
          "uses": 2
        }
      ],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "S3: make bucket public",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/63fe126ea28536fb7fd74b1c",
      "pinned": false,
      "pos": 1048575,
      "shortLink": "9KSbnAVP",
      "shortUrl": "https://trello.com/c/9KSbnAVP",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": true,
      "url": "https://trello.com/c/9KSbnAVP/142-s3-make-bucket-public",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6400c948322220d36c7a173c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-02T16:27:28.007Z",
      "dateViewedByCreator": null,
      "desc": "1. Create task definition with JSON\n\n```\n{\n    \"family\": \"sample-fargate\", \n    \"networkMode\": \"awsvpc\", \n    \"containerDefinitions\": [\n        {\n            \"name\": \"fargate-app\", \n            \"image\": \"public.ecr.aws/docker/library/httpd:latest\", \n            \"portMappings\": [\n                {\n                    \"containerPort\": 80, \n                    \"hostPort\": 80, \n                    \"protocol\": \"tcp\"\n                }\n            ], \n            \"essential\": true, \n            \"entryPoint\": [\n                \"sh\",\n\t\t\"-c\"\n            ], \n            \"command\": [\n                \"/bin/sh -c \\\"echo '\u003Chtml\u003E \u003Chead\u003E \u003Ctitle\u003EAmazon ECS Sample App\u003C/title\u003E \u003Cstyle\u003Ebody {margin-top: 40px; background-color: #333;} \u003C/style\u003E \u003C/head\u003E\u003Cbody\u003E \u003Cdiv style=color:white;text-align:center\u003E \u003Ch1\u003EAmazon ECS Sample App\u003C/h1\u003E \u003Ch2\u003ECongratulations!\u003C/h2\u003E \u003Cp\u003EYour application is now running on a container in Amazon ECS.\u003C/p\u003E \u003C/div\u003E\u003C/body\u003E\u003C/html\u003E' \u003E  /usr/local/apache2/htdocs/index.html && httpd-foreground\\\"\"\n            ]\n        }\n    ], \n    \"requiresCompatibilities\": [\n        \"FARGATE\"\n    ], \n    \"cpu\": \"256\", \n    \"memory\": \"512\"\n}\n```\n\n2. Create cluster\n3. Create service (found in cluster) \n    -\u003E only have to do the service section \n    -\u003E task will be created at the same time\n    -\u003E family group is the task definition name used above\n4. To get public ip\n    -\u003E Go into created cluster\n    -\u003E Select task tab\n    -\u003E click on task ID\n    -\u003E under configuration get public IP\n5. Put public IP in browser\n    -\u003E if nothing happens, check security group is allowing traffic to HTTP post 80",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+300rxw1t24h1okxkr3w+0jxb2gweib@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 143,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "ECS on AWS Fargate",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6400c948322220d36c7a173c",
      "pinned": false,
      "pos": 1114111,
      "shortLink": "igYE2Tg9",
      "shortUrl": "https://trello.com/c/igYE2Tg9",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/igYE2Tg9/143-ecs-on-aws-fargate",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "640713d3098753bb0fb90919",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-07T10:40:25.625Z",
      "dateViewedByCreator": null,
      "desc": "In order for SQS to receive a message from SNS we need to add the following policy to `SQS` under access policy as the default policy won't allow the SNS topic to do anything with the queue\n\n```\n{\n  \"Statement\": [{\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"Service\": \"sns.amazonaws.com\"\n    },\n    \"Action\": \"sqs:SendMessage\",\n    \"Resource\": \u003Csqs arn\u003E\n    \"Condition\": {\n      \"ArnEquals\": {\n        \"aws:SourceArn\": \u003Csns arn\u003E\n      }\n    }\n  }]\n}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+301qce4tiv6mr79uhi1+0wjg0u40cs@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 144,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "SNS and SQS",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/640713d3098753bb0fb90919",
      "pinned": false,
      "pos": 1179647,
      "shortLink": "mZREK6Pq",
      "shortUrl": "https://trello.com/c/mZREK6Pq",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/mZREK6Pq/144-sns-and-sqs",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "640b0edac20a1d9168417223",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-14T15:31:34.255Z",
      "dateViewedByCreator": null,
      "desc": "To add application dependencies to layers, do the following:\n\nNodejs\n\n1. Install packages through your terminal to generate a `node_modules` folder\n2. Create a folder called `nodejs`\n3. Move the `node_modules`  fold into `nodejs` folder (`nodejs/node_modules`)\n4. zip the `nodejs` \n\n```\n$ zip -r archive.zip nodejs\n```\n5. Create a new layer\n6. Upload this zip file when creating the new layer\n7. Set Compatible architectures to `x86_64`\n8. Set Compatible runtimes to node latest supported (i.e Node.js 18.x)\n9. Add layer to Lambda function\n\nPython\n\n1. Install packages through your terminal to generate a `node_modules` folder\n2. Create a folder called `nodejs`\n3. Move the `node_modules`  fold into `nodejs` folder (`nodejs/node_modules`)\n4. rename site-packages to python\n4. zip the `nodejs` \n\n```\n$ cd virtualenvironment\n$ cd lib\n$ cd python3.8\n$ zip -r archive.zip python\n```\n5. Create a new layer\n6. Upload this zip file when creating the new layer\n7. Set Compatible architectures to `x86_64` (must be same as lambda)\n8. Set Compatible runtimes to node latest supported (i.e Python 3.8) - (must be same as lambda and dependency packages)\n9. Add layer to Lambda function (using custom layer)\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+302c40uufcyrl7vitr7+2et6oakgmj@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 145,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Lambda Layers",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/640b0edac20a1d9168417223",
      "pinned": false,
      "pos": 1245183,
      "shortLink": "ZbJa16Uw",
      "shortUrl": "https://trello.com/c/ZbJa16Uw",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ZbJa16Uw/145-lambda-layers",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6412db606babd39eeabfd7c4",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-17T16:02:20.906Z",
      "dateViewedByCreator": null,
      "desc": "Install:\n\n```\n$ brew install aws/tap/aws-sam-cli\n$ sam --version\n```\nlink: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html#install-sam-cli-instructions\n\nInit\n\n```\n$ sam init\n```\n\nThis provides some templates which are helpful\n\nBuild\n\n```\n$ sam build\n```\n\nDeploy\n\n```\n$ sam deploy --guided\n```\n\nIf you are deploying with a custom role use the following\n\n```\n$ sam deploy --guided --capabilities CAPABILITY_NAMED_IAM\n```\n\nTo run SAM it appears to need a samconfig.toml file i.e:\n\nsimplify/samconfig.toml\n\n```\n# More information about the configuration file can be found here:\n# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-config.html\nversion = 0.1\n\n[default]\n[default.global]\n[default.global.parameters]\nstack_name = \"simplify\"\n\n[default.build]\n[default.build.parameters]\ncached = true\nparallel = true\n\n[default.validate]\n[default.validate.parameters]\nlint = true\n\n[default.deploy]\n[default.deploy.parameters]\ncapabilities = \"CAPABILITY_NAMED_IAM\"\nconfirm_changeset = true\nresolve_s3 = true\ns3_bucket = \"aws-sam-cli-managed-default-samclisourcebucket-7hzv9gvvanx5\"\ns3_prefix = \"simplify\"\nregion = \"eu-west-2\"\nimage_repositories = []\n\n[default.package]\n[default.package.parameters]\nresolve_s3 = true\n\n[default.sync]\n[default.sync.parameters]\nwatch = true\n\n[default.local_start_api]\n[default.local_start_api.parameters]\nwarm_containers = \"EAGER\"\n\n[default.local_start_lambda]\n[default.local_start_lambda.parameters]\nwarm_containers = \"EAGER\"\n```\n\nCheck template\n\n```\n$ sam validate\n```\n\nDelete template and resources:\n\n```\n$ sam delete\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+303ircd365m1hz6d41w+2ffdcdrpho@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 146,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "SAM",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6412db606babd39eeabfd7c4",
      "pinned": false,
      "pos": 1310719,
      "shortLink": "lMCMNsVR",
      "shortUrl": "https://trello.com/c/lMCMNsVR",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/lMCMNsVR/146-sam",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6424471cdfcae70851212213",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-09-15T09:29:19.085Z",
      "dateViewedByCreator": null,
      "desc": "WordPress Certified by Bitnami and Automattic:\n\n`You can also access your instance via SSH using the username 'bitnami' and your Amazon private key.`\n\n```\nssh -i \"/Users/osborncourtney/Desktop/testB.pem\" bitnami@ec2-54-72-134-249.eu-west-1.compute.amazonaws.com\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+30660v85cydbq9qj5sj+21rcfu1bml@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [
        "6426b5ba47ac53ad37c56eec"
      ],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 155,
      "idAttachmentCover": null,
      "labels": [
        {
          "id": "6426b5ba47ac53ad37c56eec",
          "idBoard": "610a69cff0f4748a2e5fddcc",
          "idOrganization": "60b9ffda1c42218c5ec7c095",
          "name": "EC2",
          "nodeId": "ari:cloud:trello::label/workspace/60b9ffda1c42218c5ec7c095/6426b5ba47ac53ad37c56eec",
          "color": "sky",
          "uses": 3
        }
      ],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "EC2 SSH Market Place AMI Bitnami",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6424471cdfcae70851212213",
      "pinned": false,
      "pos": 1376255,
      "shortLink": "q9Pm5MLu",
      "shortUrl": "https://trello.com/c/q9Pm5MLu",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/q9Pm5MLu/155-ec2-ssh-market-place-ami-bitnami",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "642448d4a9ff83d8c7c1bf8a",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-29T14:24:19.554Z",
      "dateViewedByCreator": null,
      "desc": "VPC:\n\nUse the flow logs (use for http and https source):\n\n1. Open up the flow to all traffic\n2. Hit the instance\n3. Look in cloudwatch for the public IP address\n4. Limit instance just for IP address\n\n```\n2 363321665306 eni-084392de2cf6e27e1 47.161.166.189 10.0.3.249 45050 443 6 6 837 1680097053 1680097111 **ACCEPT OK\n```\n\nUse EC2 Instance (use for ssh source):\n\n1. Open Instance for all traffic\n2. SSH in to the instance\n3. Run `$ who am I`\n4. Get the IP address that is in the brackets\n5. Limit instance just for IP address",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+306626s9s7c9vo2rzpm+1fmq6obk2z@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 156,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Finding my IP address",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/642448d4a9ff83d8c7c1bf8a",
      "pinned": false,
      "pos": 1441791,
      "shortLink": "F6cn33l2",
      "shortUrl": "https://trello.com/c/F6cn33l2",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/F6cn33l2/156-finding-my-ip-address",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6426b5d66bcd1818d63bf623",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-31T10:33:24.935Z",
      "dateViewedByCreator": null,
      "desc": "Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type\n\nScript to connect:\n\n```\nssh -i \"\u003Cpath/to/key\u003E/testA.pem\" ec2-user@\u003Cpublic-ip\u003E.eu-west-1.compute.amazonaws.com\n```\n\nFirewall:\n\n```\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3000\n\nsudo iptables -A INPUT -p tcp -m tcp --sport 80 -j ACCEPT\n\nsudo iptables -A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT\n```\n\nNode scripts:\n\n```\n$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh | bash\n$ . ~/.nvm/nvm.sh\n$ nvm install 18\nUse cyber duck to move files onto server (do not include node modules)\n$ npm install\n$ npm run build\n$ npm start\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+306jbqo8vg85l8vnkf7+2mxbb6sl1r@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [
        "6426b5ba47ac53ad37c56eec"
      ],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 159,
      "idAttachmentCover": null,
      "labels": [
        {
          "id": "6426b5ba47ac53ad37c56eec",
          "idBoard": "610a69cff0f4748a2e5fddcc",
          "idOrganization": "60b9ffda1c42218c5ec7c095",
          "name": "EC2",
          "nodeId": "ari:cloud:trello::label/workspace/60b9ffda1c42218c5ec7c095/6426b5ba47ac53ad37c56eec",
          "color": "sky",
          "uses": 3
        }
      ],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "EC2 Linux Operating Systems",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6426b5d66bcd1818d63bf623",
      "pinned": false,
      "pos": 1507327,
      "shortLink": "s7cKhyzK",
      "shortUrl": "https://trello.com/c/s7cKhyzK",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/s7cKhyzK/159-ec2-linux-operating-systems",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6426b6fd3f0bc3fc6cc6b20c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-04-04T12:33:01.164Z",
      "dateViewedByCreator": null,
      "desc": "When using an AMI make sure to add the user data to enable the firewall before launching the instance\n\nUser ec2-user not root user\n\n```\nssh -i \"testA.pem\" ec2-user@ec2-54-247-155-252.eu-west-1.compute.amazonaws.com\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+306jcmk0jci0rwih4b0+0pkom51pzt@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [
        "6426b5ba47ac53ad37c56eec"
      ],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 160,
      "idAttachmentCover": null,
      "labels": [
        {
          "id": "6426b5ba47ac53ad37c56eec",
          "idBoard": "610a69cff0f4748a2e5fddcc",
          "idOrganization": "60b9ffda1c42218c5ec7c095",
          "name": "EC2",
          "nodeId": "ari:cloud:trello::label/workspace/60b9ffda1c42218c5ec7c095/6426b5ba47ac53ad37c56eec",
          "color": "sky",
          "uses": 3
        }
      ],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "AMI EC2",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6426b6fd3f0bc3fc6cc6b20c",
      "pinned": false,
      "pos": 1572863,
      "shortLink": "1SK0s1v5",
      "shortUrl": "https://trello.com/c/1SK0s1v5",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/1SK0s1v5/160-ami-ec2",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "642bfa975c30f2051f291090",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": true,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 1,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-04-04T15:33:46.615Z",
      "dateViewedByCreator": null,
      "desc": "Tutorial:\n\nhttps://www.strongdm.com/blog/bastion-hosts-with-audit-logging-part-one\n\nInstructions:\n\n1. Create key pair (allows access to the EC2 instance - used as a password)\n\n(Create public EC2 instance and security group)\n2. Create a EC2 instance in a public subnet - this is the bastion host\n3. Add a security group to this instance\n    - Allow only ssh traffic\n    - Should use own IP address\n4. Get **private** IP of this instance (e.g. 10.0.9.43)\n\n(Log into this instance to see if everything is working)\n5. Select bastion EC2 instance\n6. Click Connect button\n7. Go to SSH Client tab\n8. Make sure you are in the directory of where you stored your private key\n9. Run the ssh command\n    - ssh -i \"\u003Cprivate-key-file-name\u003E.pem\" ec2-user@\u003CPublic IPv4 DNS for this instance\u003E\n   - e.g `ssh -i \"testA.pem\" ec2-user@ec2-54-217-77-57.eu-west-1.compute.amazonaws.com`\n10. Write yes\n11. You should now be connected\n12. exit\n    \n(Create private EC2 instance and security group)\n13. Create a EC2 instance in a private subnet (the EC2 instance you want to have access to)\n14. Add a security group to this instance\n    - All only ssh traffic\n    - Allow the traffic to only come from the bastion host EC2 instance by assigning the source to be the private IP address range (e.g 10.0.9.43/32)\n\n(Store your private key on your machine)\n15.` $ ssh-add -K name-of-your-key.pem`\n16. `$ ssh-add -L` - to verify your key was added\n\n(Connecting through the bastion host to **private** subnet )\n17. `$ ssh -A ec2-user@ec2-54-217-77-57.eu-west-1.compute.amazonaws.com -v` (key is no longer add as it has been stored on you local machine)\n(Connecting to your EC2 instance in a **private** subnet)\n18. Inside the bastion EC2 instance run`$ ssh ec2-user@the.internal.ip.address` e.g `ssh ec2-user@10.0.137.149`\n19. yes\n20. `$ ifconfig` (look for inet to see if the ip address is the private IP for the EC2 instance in the private subnet)\n\n\n\nChallenges with self-managed bastion hosts\nAs you can see, creating a bastion host is a valuable but potentially complicated endeavor. Not only is there significant effort involved in configuring and tuning the host, but a number of security concerns that come along with those responsibilities as well. Before running a self-managed bastion configuration, you should ask yourself:\n\n- Can I quickly and easily run a report of all logins on my system, or do I need to tie together a collection of shell scripts to do the job manually?\n- Do I know who made changes to key files and settings on the system, and when those changed happened?\n- Do I have a secure way to manage keys to this system?\n- Am I capturing all this information to a secondary source in case of compromise or accidental data deletion?\n- Can I log and audit other types of remote system connections, such as RDP and telnet?\n- Have I created the necessary security policy, standard operating procedures and other documentation to regulate this system from an audit and compliance standpoint?",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+307c4xfdj0gknxly3rk+2bcfq6b72k@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 162,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Basion Host",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/642bfa975c30f2051f291090",
      "pinned": false,
      "pos": 1638399,
      "shortLink": "HIUTaNjQ",
      "shortUrl": "https://trello.com/c/HIUTaNjQ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": true,
      "url": "https://trello.com/c/HIUTaNjQ/162-basion-host",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "642c17eecc9637c95b9f4c92",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-04-04T12:32:47.089Z",
      "dateViewedByCreator": null,
      "desc": "Descriptiom:\n\nNAT Gateway allows a EC2 instance in a private subnet to get access to what it needs from the internet (i.e install updates, create a database ect.)\n\nWebsite:\n\nhttps://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-scenarios.html#public-nat-gateway-testing\n\nhttps://towardsdatascience.com/connecting-to-an-ec2-instance-in-a-private-subnet-on-aws-38a3b86f58fb - The SSH config file and command that follows did not work for me - I used the following instead:\n\n[bastion host](https://trello.com/c/HIUTaNjQ/162-basion-host) to connect to the EC2 instance inside the private subnet and then NAT Gateway to install what is needed from the internet",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+307crhprk2t5unni842+1mdstz8ks0@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 163,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Nat Gateway",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/642c17eecc9637c95b9f4c92",
      "pinned": false,
      "pos": 1703935,
      "shortLink": "PHBi9Uuz",
      "shortUrl": "https://trello.com/c/PHBi9Uuz",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/PHBi9Uuz/163-nat-gateway",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6501cc5089cd307e7c13d8ee",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-09-13T14:51:16.078Z",
      "dateViewedByCreator": null,
      "desc": "Make Sure your role has a Sid value even if it is an empty string",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+313te2rba5mfidv07hq+1bthiszqxv@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610b994fdd9e5b799988a727",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 176,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Inline Policy not showing in roie",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6501cc5089cd307e7c13d8ee",
      "pinned": false,
      "pos": 1769471,
      "shortLink": "2Ynx8SMQ",
      "shortUrl": "https://trello.com/c/2Ynx8SMQ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/2Ynx8SMQ/176-inline-policy-not-showing-in-roie",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "62068e6d2726676743539177",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-11T16:29:15.577Z",
      "dateViewedByCreator": null,
      "desc": "FILE_PATH=$(shell pwd)\nSPLIT_PATH=$(subst /, ,$(FILE_PATH))\nUSERS_NAME=$(word 2,$(SPLIT_PATH))\nWEBSOCKET_AUTHORIZATION_KEY=$(ws_key)\nHTTP_AUTHORIZATION_KEY=$(http_key)\n\ninstall-prerequisites:\n\tbrew install terraform@1.0\n\n# Init Infrastructure\n\ninit:\n\tterraform init\n\n# Reformat Infrastructure\n\nfmt:\n\tterraform fmt\n\n# Validate Infrastructure\n\nvalidate:\n\tterraform validate\n\n# Plan Infrastructure\n\nplan:\n\tTF_VAR_WEBSOCKET_AUTHORIZATION_SECRET_VALUE='${WEBSOCKET_AUTHORIZATION_KEY}' \\\n\tTF_VAR_HTTP_AUTHORIZATION_SECRET_VALUE='${HTTP_AUTHORIZATION_KEY}' \\\n\tTF_VAR_ENV='${USERS_NAME}' terraform plan\n\n# Deploy Infrastructure\n\ndeploy:\n\tTF_VAR_WEBSOCKET_AUTHORIZATION_SECRET_VALUE='${WEBSOCKET_AUTHORIZATION_KEY}' \\\n\tTF_VAR_HTTP_AUTHORIZATION_SECRET_VALUE='${HTTP_AUTHORIZATION_KEY}' \\\n\tTF_VAR_ENV='${USERS_NAME}' terraform apply\n\n# Destroy Infrastructure\n\ndestroy:\n\tTF_VAR_WEBSOCKET_AUTHORIZATION_SECRET_VALUE='${WEBSOCKET_AUTHORIZATION_KEY}' \\\n\tTF_VAR_HTTP_AUTHORIZATION_SECRET_VALUE='${HTTP_AUTHORIZATION_KEY}' \\\n\tTF_VAR_ENV='${USERS_NAME}' terraform destroy",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xvvntsw5w105xpwuwn+1c1q3mdoi6@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 121,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Terraform Commands (Make file)",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/62068e6d2726676743539177",
      "pinned": false,
      "pos": 32767.5,
      "shortLink": "u9cwfZi2",
      "shortUrl": "https://trello.com/c/u9cwfZi2",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/u9cwfZi2/121-terraform-commands-make-file",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "62068ec3c7283e7a993731a8",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-11T16:29:19.475Z",
      "dateViewedByCreator": null,
      "desc": "# Infrastructure\n\n- This application uses AWS infrastructure which is built using Terraform\n\n## Prerequisite\n\n- Terraform\n\nTo install the above through Homebrew, install [Homebrew](https://brew.sh/) and run the following:\n\n```\n$ make install-prerequisites\n```\n\n## Developing Locally\n\n### Setup\n\n- In order to deploy the infrastructure you will need to set up your aws_access_key_id, aws_secret_access_key in your aws credentials file.\n\t- Use your own AWS credentials in order to do this.\n\nopen ~/.aws/credentials\n```\n[theia-surnamename] # i.e theia-doejohn\naws_access_key_id = \u003Caws access key id\u003E\naws_secret_access_key = \u003Caws secret access key\u003E\n```\n\n- You will also need to comment out line 2-9 in the infrastructure/main.tf file as this prevents Terraform being deployed locally\n\n### Commands\n\n#### Terraform Init\n\n- Prepare your working directory for other commands\n\n```\n$ make init\n```\n\n#### Terraform Reformat\n\n- Reformat your configuration in the standard style\n\n```\n$ make fmt\n```\n\n#### Terrafrom Validate\n\n- Check whether the configuration is valid\n\n```\n$ make validate\n```\n\n#### Terraform Plan\n\n- Show changes required by the current configuration\n\n```\n$ make plan ws_key=\u003Cyour secret key\u003E http_key=\u003Cyour secret key\u003E\n```\ne.g `$ make plan ws_key=123 http_key=123`\n\n\n#### Terraform Apply\n\n- Applies changes to create or updates infrastructure\n\n```\n$ make deploy ws_key=\u003Cyour secret key\u003E http_key=\u003Cyour secret key\u003E\n```\ne.g `$ make deploy ws_key=123 http_key=123`\n\n\n#### Destroy Terraform\n\n- Destroys all previously-created infrastructure\n\n**NOTE**: Empty S3 buckets before destroying the infrastructure otherwise terraform will error.\n\n```\n$ make destroy ws_key=\u003Cyour secret key\u003E http_key=\u003Cyour secret key\u003E\n```\ne.g `$ make destroy ws_key=123 http_key=123`\n\n\n## Deployment\n\n- Staging and production environments are deployed using terraform cloud and should NOT be done locally\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xvvo364mwus2s02zs8+025ya4amxr@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 122,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Terraform Readme",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/62068ec3c7283e7a993731a8",
      "pinned": false,
      "pos": 49151.25,
      "shortLink": "LJqdHYUP",
      "shortUrl": "https://trello.com/c/LJqdHYUP",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/LJqdHYUP/122-terraform-readme",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6111265f8b3ad572805c3588",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-09T12:59:30.803Z",
      "dateViewedByCreator": null,
      "desc": "**Docs**: https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started \n\nUsing homebrew:\n\nFirst, install the HashiCorp tap, a repository of all our Homebrew packages.\n\n```\n$ brew tap hashicorp/tap\n```\n\nNow, install Terraform with hashicorp/tap/terraform.\n\n```\n$ brew install hashicorp/tap/terraform\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wulobdg9grjl3h3k3s+267ka0466k@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 18,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Installation",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6111265f8b3ad572805c3588",
      "pinned": false,
      "pos": 65535,
      "shortLink": "qTQRaSRw",
      "shortUrl": "https://trello.com/c/qTQRaSRw",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/qTQRaSRw/18-installation",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61112706fc6cb737f25a3412",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-09T13:02:23.235Z",
      "dateViewedByCreator": null,
      "desc": "Docs: https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started#enable-tab-completion\n\nBash:\n\n```\n$ touch ~/.bashrc\n```\n\nThen install the autocomplete package.\n\n```\n$ terraform -install-autocomplete\n```\n\nOnce the autocomplete support is installed, you will need to restart your shell.\n\n- Restart shell\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wulothb8g6n74h6osy+0qunbykg8q@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 19,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Enable tab completion",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61112706fc6cb737f25a3412",
      "pinned": false,
      "pos": 131071,
      "shortLink": "22fxplyv",
      "shortUrl": "https://trello.com/c/22fxplyv",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/22fxplyv/19-enable-tab-completion",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6111278c550da375d14262c0",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-09T13:13:54.468Z",
      "dateViewedByCreator": null,
      "desc": "**Docs**: https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started#quick-start-tutorial\n\n- Docker installed\n- Make directory \n\ni.e.\n\n```\n$ mkdir garageiot-platform\n```\n\n- cd directory\n- touch main.tf\n- atom .\n- Add the following \n\n```\nterraform {\n  required_providers {\n    docker = {\n      source  = \"kreuzwerker/docker\"\n      version = \"~\u003E 2.13.0\"\n    }\n  }\n}\n\nprovider \"docker\" {}\n\nresource \"docker_image\" \"nginx\" {\n  name         = \"nginx:latest\"\n  keep_locally = false\n}\n\nresource \"docker_container\" \"nginx\" {\n  image = docker_image.nginx.latest\n  name  = \"tutorial\"\n  ports {\n    internal = 80\n    external = 8000\n  }\n}\n```\n\n- Save\n- `$ terraform init`\n- ` $terraform apply` -\u003E yes\n- Go to localhost:8000\n- Check docker `docker ps`\n\n- To destroy container\n\n```\n$ terraform destroy\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wulp7wfo0oo1711p6o+2iumogpx25@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 20,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Provision an NGINX server",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6111278c550da375d14262c0",
      "pinned": false,
      "pos": 196607,
      "shortLink": "LD2TdPn0",
      "shortUrl": "https://trello.com/c/LD2TdPn0",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/LD2TdPn0/20-provision-an-nginx-server",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "611f85bd6019895753c465de",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-20T11:04:47.611Z",
      "dateViewedByCreator": null,
      "desc": "**Docs:** https://learn.hashicorp.com/tutorials/terraform/github-actions\n\n1. Created AWS user account `garage-iot-playground`\n    1.1. Selected only `Programmatic access`\n    1.2 Add no permissions or tags\n    1.3 Saved `AWS_SECRET_ACCESS_KEY`\n    1.4 Saved `AWS_ACCESS_KEY_ID`\n\n2. Setup Terrafrom cloud account \n    2.1 Added work space using API driven work flow\n    2.2 Setup variable `AWS_SECRET_ACCESS_KEY` and `AWS_ACCESS_KEY_ID`  in the workspace\n    2.3 Created Token : user (avatar icon) -\u003E  User settings -\u003E Tokens (called \n           Github Actions IoT Playground)\n\n3. Setup Github actions\n     3.1 Add secret `TF_API_TOKEN` to repository secrets (Settings -\u003E Secrets)\n\n4. Added terraform yaml file from the docs\n\n5. Pushed to my branch\n\n\n\n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wws9qkef2mu7rssvdq+1lay8gu4kh@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 33,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Terraform automation through GitHub Actions",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/611f85bd6019895753c465de",
      "pinned": false,
      "pos": 262143,
      "shortLink": "RAsN1Fyo",
      "shortUrl": "https://trello.com/c/RAsN1Fyo",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/RAsN1Fyo/33-terraform-automation-through-github-actions",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6123d14a2f3bc965f4692e57",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-23T17:03:58.063Z",
      "dateViewedByCreator": null,
      "desc": "```\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Configure AWS Credentials\n      uses: aws-actions/configure-aws-credentials@v1\n      with:\n        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        aws-region: eu-west-2\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wxfrae5qyzky9gwml3+0k1mzvdomk@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 34,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Terraform workflow when terraform cloud is not being used",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6123d14a2f3bc965f4692e57",
      "pinned": false,
      "pos": 327679,
      "shortLink": "do7Y9gp9",
      "shortUrl": "https://trello.com/c/do7Y9gp9",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/do7Y9gp9/34-terraform-workflow-when-terraform-cloud-is-not-being-used",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6123d4d24d8bec519df48034",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-23T17:03:42.233Z",
      "dateViewedByCreator": null,
      "desc": "```\nname: 'Terraform'\n\non:\n  push:\n    branches:\n    - master\n  pull_request:\n\njobs:\n  terraform:\n    name: 'Terraform'\n    runs-on: ubuntu-latest\n    environment: production\n\n    defaults:\n      run:\n        shell: bash\n\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - name: Setup Terraform\n      uses: hashicorp/setup-terraform@v1\n      with:\n        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}\n\n    - name: Terraform Init\n      run: cd terraform; terraform init\n\n    - name: Terraform Format\n      run: cd terraform; terraform fmt -check\n\n    - name: Terraform Plan\n      run: cd terraform; terraform plan\n\n    - name: Terraform Plan\n      id: plan\n      if: github.event_name == 'pull_request'\n      run: cd terraform; terraform plan -no-color\n      continue-on-error: true\n\n    - name: Update Pull Request\n      uses: actions/github-script@0.9.0\n      if: github.event_name == 'pull_request'\n      env:\n        PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n      with:\n        github-token: ${{ secrets.GITHUB_TOKEN }}\n        script: |\n          const output = `#### Terraform Format and Style 🖌\\`${{ steps.fmt.outcome }}\\`\n          #### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n          #### Terraform Plan 📖\\`${{ steps.plan.outcome }}\\`\n          #### Terraform Validation 🤖\\`${{ steps.validate.outcome }}\\`\n\n          \u003Cdetails\u003E\u003Csummary\u003EShow Plan\u003C/summary\u003E\n\n          \\`\\`\\`\\n\n          ${process.env.PLAN}\n          \\`\\`\\`\n\n          \u003C/details\u003E\n\n          *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n          github.issues.createComment({\n            issue_number: context.issue.number,\n            owner: context.repo.owner,\n            repo: context.repo.repo,\n            body: output\n          })\n\n    - name: Terraform Plan Status\n      if: steps.plan.outcome == 'failure'\n      run: exit 1\n\n    - name: Terraform Apply\n      if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n      run: cd terraform; terraform apply -auto-approve\n\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wxfu05xoo6c7tvffp0+26s8czz8v3@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 35,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Terraform workflow when cloud is being used",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6123d4d24d8bec519df48034",
      "pinned": false,
      "pos": 393215,
      "shortLink": "JnLygnCU",
      "shortUrl": "https://trello.com/c/JnLygnCU",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/JnLygnCU/35-terraform-workflow-when-cloud-is-being-used",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6124bf30bd0f313e32ceb2d8",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-24T09:43:24.851Z",
      "dateViewedByCreator": null,
      "desc": "```\nterraform apply -target=module.\u003Cmodule-name\u003E\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wxku8ep8n2f5rmhk9k+03rs9z4wg4@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 36,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Apply one module",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6124bf30bd0f313e32ceb2d8",
      "pinned": false,
      "pos": 458751,
      "shortLink": "WXE6EoP1",
      "shortUrl": "https://trello.com/c/WXE6EoP1",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/WXE6EoP1/36-apply-one-module",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61af84117f4c3a2b0246dd79",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-12-07T15:56:23.058Z",
      "dateViewedByCreator": null,
      "desc": "`terraform plan -var-file=./config.json`",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xinord4jeetopxprp5+2eyhtrh4k5@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 57,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "To use a config file for variables",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61af84117f4c3a2b0246dd79",
      "pinned": false,
      "pos": 524287,
      "shortLink": "ZaO0Skua",
      "shortUrl": "https://trello.com/c/ZaO0Skua",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ZaO0Skua/57-to-use-a-config-file-for-variables",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61b1e7ec89ca4b8f4a5edda4",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-12-09T11:27:23.700Z",
      "dateViewedByCreator": null,
      "desc": "```\n$ terraform workspace new local\n```\n\nDocs: https://betterprogramming.pub/managing-multiple-environments-in-terraform-5b389da3a2ef",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xj0r9wsn80bylvxrqc+0tbd2ouzzd@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 58,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Creating a new workspace so you can develop more than one environment locally",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61b1e7ec89ca4b8f4a5edda4",
      "pinned": false,
      "pos": 589823,
      "shortLink": "P3FvNYYZ",
      "shortUrl": "https://trello.com/c/P3FvNYYZ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/P3FvNYYZ/58-creating-a-new-workspace-so-you-can-develop-more-than-one-environment-locally",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61d5ad39b4b759182fc4444f",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-05T14:37:52.285Z",
      "dateViewedByCreator": null,
      "desc": "```\n$ terraform workspace list\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xogd7o8oitlndl732n+0yxofmcm8x@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 62,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "List Terraform work spaces",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61d5ad39b4b759182fc4444f",
      "pinned": false,
      "pos": 655359,
      "shortLink": "EWqdbHSC",
      "shortUrl": "https://trello.com/c/EWqdbHSC",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/EWqdbHSC/62-list-terraform-work-spaces",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61ded0add04b1c676bf29ada",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-12T13:01:00.407Z",
      "dateViewedByCreator": null,
      "desc": "```\n│ Error: Backend configuration changed\n│\n│ A change in the backend configuration has been detected, which may require migrating existing state.\n│\n│ If you wish to attempt automatic migration of the state, use \"terraform init -migrate-state\".\n│ If you wish to store the current configuration with no changes to the state, use \"terraform init -reconfigure\".\n```\n\nThis error means I made an init without commenting out the following in the main file:\n\n```\n  backend \"remote\" {\n    organization = \"BCGDV\"\n  \n    workspaces {\n      prefix = \"iot-playground-\"\n    }\n  }\n```\n\nIf this happens, comment this out and remove all terraform files and run the `make init`/`terraform init` again",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xpuc8uv5b5cm2k7jkq+2rg1i1virq@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 74,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Backend configuration changed",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61ded0add04b1c676bf29ada",
      "pinned": false,
      "pos": 720895,
      "shortLink": "YLQxIykS",
      "shortUrl": "https://trello.com/c/YLQxIykS",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/YLQxIykS/74-backend-configuration-changed",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61ea7e6840390616243d9249",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-21T09:35:40.314Z",
      "dateViewedByCreator": null,
      "desc": "https://learn.hashicorp.com/tutorials/terraform/github-actions?utm_source=WEBSITE&utm_medium=WEB_IO&utm_offer=ARTICLE_PAGE&utm_content=DOCS",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xrm7c6el4cob5rhu89+2fma0n7x5e@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 80,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Github Action Workflow",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61ea7e6840390616243d9249",
      "pinned": false,
      "pos": 786431,
      "shortLink": "MdvqvtLh",
      "shortUrl": "https://trello.com/c/MdvqvtLh",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/MdvqvtLh/80-github-action-workflow",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61eabadbbc34fd71a056defc",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-21T14:15:06.745Z",
      "dateViewedByCreator": null,
      "desc": "https://www.terraform.io/language/values/variables\n\nTerraform config file\n\nSetting variables options:\n\n- TF_VAR\n   -\u003E Append command.Env with each individual variable\n\n```\n\tcommand.Env = os.Environ()\n\tcommand.Env = append(command.Env, environmentVariable)\n\tcommand.Env = append(command.Env, awsAccountIdVariable)\n\tcommand.Env = append(command.Env, AwsRegionVariable )\n\tcommand.Env = append(command.Env, projectNameVariable)\n\tcommand.Dir = directory\n\tcommand.Stdout = os.Stdout\n\tcommand.Stderr = os.Stderr\n\tcommand.Stdin = os.Stdin\n\tcommand.Run()\n``` \n\nPros:\n\nYou can get exactly what you need, so if your config is not explicitly written the way terraform is expecting, it doesn't matter as you are providing the values \n\nCons: \n\n- It becomes very bulky setting each individually\n- When using Github workflow you are replying on having terraform cloud or you will have to set each variable in the workflow yml and put the value  in Github. You are also required to add each value to terraform cloud. This means the config file is there but not being used.\n- Passing the entire config through when only some of the values are used can be confusing -\u003E It is better to explicit\n- Bulky to create a struct in each command with the variables that need to be used in the command\n\n- var-config=\u003Cpath\u003E\n  -\u003E You create a json file with all the variables you need and terraform uses that\n\n\nPros: \n\n- All variables are in one file\n- You do not need to pass the configuration file through reducing the multiple parameters\n\n\nCons:\n\n- If you have additional variables in the config file that you are not using in Terrafom you get the following in the terminal\n\n```\n│ Warning: Value for undeclared variable\n│\n│ The root module does not declare a variable named \"AuthorizationKey\" but a value was found in file\n│ \"../websocket-generator-config.json\". If you meant to use this value, add a \"variable\" block to the configuration.\n│\n│ To silence these warnings, use TF_VAR_... environment variables to provide certain \"global\" settings to all\n│ configurations in your organization. To reduce the verbosity of these warnings, use the -compact-warnings option.\n╵\n╷\n│ Warning: Value for undeclared variable\n│\n│ The root module does not declare a variable named \"Environments\" but a value was found in file\n│ \"../websocket-generator-config.json\". If you meant to use this value, add a \"variable\" block to the configuration.\n│\n│ To silence these warnings, use TF_VAR_... environment variables to provide certain \"global\" settings to all\n│ configurations in your organization. To reduce the verbosity of these warnings, use the -compact-warnings option.\n╵\n╷\n│ Warning: Values for undeclared variables\n│\n│ In addition to the other similar warnings shown, 4 other variable(s) defined without being declared.\n╵\n```\n\n- You can't get environment specific variables when all environment variables are in the same config\n\n```\n\"development\": {\n    \"AwsAccountId\": \"1234\"\n  }\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xrnhtp7a0ocx0s7aws+1rcmycldzt@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 81,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Input (environment) variables -\u003E pros and cons",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61eabadbbc34fd71a056defc",
      "pinned": false,
      "pos": 851967,
      "shortLink": "6sdE3GLO",
      "shortUrl": "https://trello.com/c/6sdE3GLO",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/6sdE3GLO/81-input-environment-variables-pros-and-cons",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6425ade28185a4d64999f016",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 1,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-30T15:46:11.106Z",
      "dateViewedByCreator": null,
      "desc": "https://stackoverflow.com/questions/20822021/amazon-ec2-instance-cant-update-or-use-yum\n\nSecurity groups are stateful but it won't let requests out that started from inside the instance therefore you need to add all traffic rule out of the ec2 instance. See image below\n\n_'[Security groups are] stateful, so you can define an incoming security group and it will let traffic in and the same traffic out again. It won't let traffic out that starts from inside the instance. For that you have to add an outgoing \"Egress\" group.'_\n\nThis appears to be a Terraform this",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+306dorfkbv3ct5h34t2+25db4iva6s@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 158,
      "idAttachmentCover": "6425ae862cb8ba48b4f3b3a1",
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Add OUTBOUND rule to security group!",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6425ade28185a4d64999f016",
      "pinned": false,
      "pos": 917503,
      "shortLink": "vyG21wz6",
      "shortUrl": "https://trello.com/c/vyG21wz6",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/vyG21wz6/158-add-outbound-rule-to-security-group",
      "cover": {
        "idAttachment": "6425ae862cb8ba48b4f3b3a1",
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "scaled": [
          {
            "id": "6425ae862cb8ba48b4f3b3ad",
            "_id": "6425ae862cb8ba48b4f3b3ad",
            "scaled": false,
            "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3ad/download/Screenshot_2023-03-30_at_16.44.58.png",
            "bytes": 1243,
            "height": 50,
            "width": 70
          },
          {
            "id": "6425ae862cb8ba48b4f3b3af",
            "_id": "6425ae862cb8ba48b4f3b3af",
            "scaled": true,
            "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3af/download/Screenshot_2023-03-30_at_16.44.58.png",
            "bytes": 2934,
            "height": 31,
            "width": 150
          },
          {
            "id": "6425ae862cb8ba48b4f3b3ae",
            "_id": "6425ae862cb8ba48b4f3b3ae",
            "scaled": false,
            "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3ae/download/Screenshot_2023-03-30_at_16.44.58.png",
            "bytes": 5710,
            "height": 150,
            "width": 250
          },
          {
            "id": "6425ae862cb8ba48b4f3b3b0",
            "_id": "6425ae862cb8ba48b4f3b3b0",
            "scaled": true,
            "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3b0/download/Screenshot_2023-03-30_at_16.44.58.png",
            "bytes": 6727,
            "height": 61,
            "width": 299
          },
          {
            "id": "6425ae862cb8ba48b4f3b3b1",
            "_id": "6425ae862cb8ba48b4f3b3b1",
            "scaled": true,
            "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3b1/download/Screenshot_2023-03-30_at_16.44.58.png",
            "bytes": 17851,
            "height": 122,
            "width": 598
          },
          {
            "id": "6425ae862cb8ba48b4f3b3b2",
            "_id": "6425ae862cb8ba48b4f3b3b2",
            "scaled": true,
            "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3b2/download/Screenshot_2023-03-30_at_16.44.58.png",
            "bytes": 50868,
            "height": 245,
            "width": 1200
          },
          {
            "id": "6425ae862cb8ba48b4f3b3b3",
            "_id": "6425ae862cb8ba48b4f3b3b3",
            "scaled": true,
            "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3b3/download/Screenshot_2023-03-30_at_16.44.58.png",
            "bytes": 66326,
            "height": 399,
            "width": 1955
          }
        ],
        "edgeColor": "#f0f3f4",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [
        {
          "id": "6425ae862cb8ba48b4f3b3a1",
          "bytes": 66326,
          "date": "2023-03-30T15:45:10.033Z",
          "edgeColor": "#f0f3f4",
          "idMember": "607d3a850d54e983ddb49f9b",
          "isUpload": true,
          "mimeType": "image/png",
          "name": "Screenshot 2023-03-30 at 16.44.58.png",
          "previews": [
            {
              "id": "6425ae862cb8ba48b4f3b3ad",
              "_id": "6425ae862cb8ba48b4f3b3ad",
              "scaled": false,
              "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3ad/download/Screenshot_2023-03-30_at_16.44.58.png",
              "bytes": 1243,
              "height": 50,
              "width": 70
            },
            {
              "id": "6425ae862cb8ba48b4f3b3ae",
              "_id": "6425ae862cb8ba48b4f3b3ae",
              "scaled": false,
              "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3ae/download/Screenshot_2023-03-30_at_16.44.58.png",
              "bytes": 5710,
              "height": 150,
              "width": 250
            },
            {
              "id": "6425ae862cb8ba48b4f3b3af",
              "_id": "6425ae862cb8ba48b4f3b3af",
              "scaled": true,
              "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3af/download/Screenshot_2023-03-30_at_16.44.58.png",
              "bytes": 2934,
              "height": 31,
              "width": 150
            },
            {
              "id": "6425ae862cb8ba48b4f3b3b0",
              "_id": "6425ae862cb8ba48b4f3b3b0",
              "scaled": true,
              "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3b0/download/Screenshot_2023-03-30_at_16.44.58.png",
              "bytes": 6727,
              "height": 61,
              "width": 299
            },
            {
              "id": "6425ae862cb8ba48b4f3b3b1",
              "_id": "6425ae862cb8ba48b4f3b3b1",
              "scaled": true,
              "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3b1/download/Screenshot_2023-03-30_at_16.44.58.png",
              "bytes": 17851,
              "height": 122,
              "width": 598
            },
            {
              "id": "6425ae862cb8ba48b4f3b3b2",
              "_id": "6425ae862cb8ba48b4f3b3b2",
              "scaled": true,
              "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3b2/download/Screenshot_2023-03-30_at_16.44.58.png",
              "bytes": 50868,
              "height": 245,
              "width": 1200
            },
            {
              "id": "6425ae862cb8ba48b4f3b3b3",
              "_id": "6425ae862cb8ba48b4f3b3b3",
              "scaled": true,
              "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/previews/6425ae862cb8ba48b4f3b3b3/download/Screenshot_2023-03-30_at_16.44.58.png",
              "bytes": 66326,
              "height": 399,
              "width": 1955
            }
          ],
          "url": "https://trello.com/1/cards/6425ade28185a4d64999f016/attachments/6425ae862cb8ba48b4f3b3a1/download/Screenshot_2023-03-30_at_16.44.58.png",
          "pos": 16384,
          "fileName": "Screenshot_2023-03-30_at_16.44.58.png"
        }
      ],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "642adadc4ceb0d4e35bd4e29",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-04-03T14:04:32.645Z",
      "dateViewedByCreator": null,
      "desc": "If we try to create an AMI with all our other deployments, i.e auto scaling, load balancer and ec2 instances etc,  the AMI will not have the installation scripts or the code that needs to be on the server so when we scale we don't have access to the code. \n\nIssues:\n\n1. Node.js is not installed on server (ami created on platform deployment)\n2. Code is not installed on server (ami created on platform deployment)\n3. Infrastructure will scale with an empty EC2 instance (no code) \n4. If we create the AMI first, we will have an instance running that we do not need (we needed this instance originally to create the AMI) - so we need to find a way to delete this instance\n5. We also don't have the id of the AMI when we deploy all the other code (we would have to output this value to the console or add it to a file)\n\nPossible solutions:\n\n1. Use Parker \n\nhttps://flugel-it.medium.com/building-and-running-custom-amis-on-aws-using-packer-and-terraform-3db28c968b30\n\n2. Use terraform\n\n- output AMI id to a file. Use that file when applying terraform for the rest of the infrastructure\n- Find a way to terminate an instance once the AMI is build \n\n3. Find out how OpsWork (puppet and chef) works",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3075znx5fbs9u9wio15+0xu31tnjy9@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 161,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Issues with creating AMIs with terraform and then trying to scale",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/642adadc4ceb0d4e35bd4e29",
      "pinned": false,
      "pos": 983039,
      "shortLink": "NQoLYSaP",
      "shortUrl": "https://trello.com/c/NQoLYSaP",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/NQoLYSaP/161-issues-with-creating-amis-with-terraform-and-then-trying-to-scale",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6501cc018361bca028384919",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-09-13T14:50:39.087Z",
      "dateViewedByCreator": null,
      "desc": "```\nresource \"aws_iam_role\" \"vpc-flow-logs\" {\nname = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs-role\"\n\nassume_role_policy = jsonencode({\nVersion = \"2012-10-17\"\nStatement = [\n{\nAction = \"sts:AssumeRole\"\nEffect = \"Allow\"\nSid    = \"\" // NOTE: Role policies do not show if Sid is not here\nPrincipal = {\n    Service = \"vpc-flow-logs.amazonaws.com\"\n  }\n},\n]\n})\n\ntags = {\nName = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs\"\n}\n}\n\nresource \"aws_iam_role_policy\" \"vpc-flow-logs\" {\nname = \"${var.PROJECT_NAME}-${var.ENVIRONMENT}-vpc-flow-logs-role-policy\"\nrole = aws_iam_role.vpc-flow-logs.id\n\npolicy = jsonencode({\nVersion = \"2012-10-17\"\nStatement = [\n{\nAction = [\n\"logs:CreateLogGroup\",\n\"logs:CreateLogStream\",\n\"logs:PutLogEvents\",\n\"logs:DescribeLogGroups\",\n\"logs:DescribeLogStream\"\n]\nEffect   = \"Allow\"\nResource = \"*\"\n},\n]\n})\n}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+313tdu7nxuictu4c9w9+1m4jtzqqnn@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6111265b0943137728c9c063",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 175,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Inline Policy not showing in roie",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6501cc018361bca028384919",
      "pinned": false,
      "pos": 1048575,
      "shortLink": "Je9zCCne",
      "shortUrl": "https://trello.com/c/Je9zCCne",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Je9zCCne/175-inline-policy-not-showing-in-roie",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "610d59dee412c473cb309b95",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-06T15:49:45.366Z",
      "dateViewedByCreator": null,
      "desc": "Scripts:\n\nTo act as a device:\n\n`go run cmd/garageiot/main.go`\n\nTo start the websocket:\n\n`wscat -c wss://tq46hjfend.execute-api.eu-west-2.amazonaws.com/production`",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2wu0wgps3intgkeavf9+298tgp8bqj@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610d59d4612b7e8a333d012f",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 14,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "IoT Playground",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/610d59dee412c473cb309b95",
      "pinned": false,
      "pos": 65535,
      "shortLink": "ixRpKIeJ",
      "shortUrl": "https://trello.com/c/ixRpKIeJ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ixRpKIeJ/14-iot-playground",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "611a925bb5ee533b02908bf1",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": false,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": true,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-08-16T16:29:23.075Z",
      "dateViewedByCreator": null,
      "desc": "",
      "descData": null,
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2ww174ievym4snoxo1d+0quc7tbz1m@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "610d59d4612b7e8a333d012f",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 26,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "08/08/2021 - 13/08/2021",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/611a925bb5ee533b02908bf1",
      "pinned": false,
      "pos": 81919,
      "shortLink": "OMDot8PW",
      "shortUrl": "https://trello.com/c/OMDot8PW",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/OMDot8PW/26-08-08-2021-13-08-2021",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6151ca1c906ec637d212a51b",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-09-27T13:41:54.908Z",
      "dateViewedByCreator": null,
      "desc": "```\nbool\n\nstring\n\nint  int8  int16  int32  int64\nuint uint8 uint16 uint32 uint64 uintptr\n\nbyte // alias for uint8\n\nrune // alias for int32\n     // represents a Unicode code point\n\nfloat32 float64\n\ncomplex64 complex128\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2x4f5h7i98tcy395j4r+1u56hr17x3@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 37,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Go's basic types",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6151ca1c906ec637d212a51b",
      "pinned": false,
      "pos": 65535,
      "shortLink": "uxNRRjuq",
      "shortUrl": "https://trello.com/c/uxNRRjuq",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/uxNRRjuq/37-gos-basic-types",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6180140e0cee943dbcbc1560",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-01T16:21:59.780Z",
      "dateViewedByCreator": null,
      "desc": "```\nresp := events.APIGatewayProxyResponse{StatusCode: 200, Body: presignedURL}\nresp.Headers = make(map[string]string)\nresp.Headers[\"Access-Control-Allow-Origin\"] = \"*\"\nreturn resp, nil\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xbga1s6t43voqfniow+24ox4jswrk@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 44,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Adding response headers",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6180140e0cee943dbcbc1560",
      "pinned": false,
      "pos": 131071,
      "shortLink": "7n2b8V72",
      "shortUrl": "https://trello.com/c/7n2b8V72",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/7n2b8V72/44-adding-response-headers",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61a8a10a29d74b0a7013b581",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-12-02T10:36:34.079Z",
      "dateViewedByCreator": null,
      "desc": "This could mean that a comma is missing on the last property of the object.\n\nE.g:\n\nThis will cause this error:\n\n```\n{\n    name: John,\n    surname: Doe\n}\n```\n\nThe comma after Doe`,` will solve this error:\n\n```\n{\n    name: John,\n    surname: Doe,\n}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xhm0zv6uhtm235fh4x+0p07nqmkd4@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 54,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: syntax error: unexpected newline, expecting comma or }",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61a8a10a29d74b0a7013b581",
      "pinned": false,
      "pos": 196607,
      "shortLink": "NZaRggcj",
      "shortUrl": "https://trello.com/c/NZaRggcj",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/NZaRggcj/54-error-syntax-error-unexpected-newline-expecting-comma-or",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61c1ef50c3c6712f6593e2a0",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-12-21T15:14:48.037Z",
      "dateViewedByCreator": null,
      "desc": "```\ntype QuestionDetails struct {\n\tQuestionLabel   string\n\tDefaultResponse string\n\tResponseLabel   string\n}\n\nQuestionsConfig := map[string]QuestionDetails{\n\t\t\"InfrastructureFilePath\":  {\n\t\t\tQuestionLabel: \"Infrastructure Code Location Path. Default value is \u003Ccurrent-directory\u003E/infrastructure\",\n\t\t\tDefaultResponse: \"infrastructure\",\n\t\t\tResponseLabel: \"Your Infrastructure Code Location Path:\",\n\t\t},\n\t\t\"WebsocketFilePath\":  {\n\t\t\tQuestionLabel: \"WebSocket Code Location Path. Default value is \u003Ccurrent-directory\u003E/websocket\",\n\t\t\tDefaultResponse: \"websocket\",\n\t\t\tResponseLabel: \"Your WebSocket Code Location Path:\",\n\t\t},\n\t\t\"AWSRegion\":  {\n\t\t\tQuestionLabel: \"AWS Region. Default value is eu-west-2\",\n\t\t\tDefaultResponse: \"eu-west-2\",\n\t\t\tResponseLabel: \"Your AWS Region:\",\n\t\t},\n\t\t\"AuthorizationKey\":  {\n\t\t\tQuestionLabel: \"Authorization Key Name. Default value is Authorization\",\n\t\t\tDefaultResponse: \"Authorization\",\n\t\t\tResponseLabel: \"Your Authorization Query Parameter Key is:\",\n\t\t},\n\t\t\"Environment\":  {\n\t\t\tQuestionLabel: \"Environment Name. Default value is Development\",\n\t\t\tDefaultResponse: \"Development\",\n\t\t\tResponseLabel: \"Environment Choosen:\",\n\t\t},\n\t\t\"AWSAccountID\":  {\n\t\t\tQuestionLabel: \"AWS Account ID\",\n\t\t\tDefaultResponse: \"\",\n\t\t\tResponseLabel: \"Your AWS Account ID:\",\n\t\t},\n\t}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xlgerrljrvagmzk23k+24lvsz5iin@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 59,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Creating mapped structs",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61c1ef50c3c6712f6593e2a0",
      "pinned": false,
      "pos": 262143,
      "shortLink": "ga9Y4lW8",
      "shortUrl": "https://trello.com/c/ga9Y4lW8",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ga9Y4lW8/59-creating-mapped-structs",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61d561fc97e8550219f0ca1e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-05T09:17:00.493Z",
      "dateViewedByCreator": null,
      "desc": "```\nfunc ReadFile(fileName string) map[string]interface{} {\n\tjsonFile, errorJsonFile := os.Open(fileName)\n\tif errorJsonFile != nil {\n\t\tfmt.Println(\"Open command in ReadFile failed with the following error\", errorJsonFile)\n\t}\n\tdefer jsonFile.Close()\n\n\tbyteValue, _ := ioutil.ReadAll(jsonFile)\n\n\tvar result map[string]interface{}\n\tjson.Unmarshal(byteValue, &result)\n\n\treturn result\n}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xoercrta22eli5r40u+1gue5shp1t@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 60,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Read file with map response",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61d561fc97e8550219f0ca1e",
      "pinned": false,
      "pos": 327679,
      "shortLink": "HRyOulpO",
      "shortUrl": "https://trello.com/c/HRyOulpO",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/HRyOulpO/60-read-file-with-map-response",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61d582fa27df514269202f1f",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-05T11:41:50.973Z",
      "dateViewedByCreator": null,
      "desc": "```\ngoroutine 1 [running]:\nwebsocket-generator/cmd.terraformExecCommand(0x138c1da, 0x4, 0xc0000e0580, 0x2, 0x2)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/terraform.go:52 +0xe1f\nwebsocket-generator/cmd.InitTerraform(...)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/terraform.go:105\nwebsocket-generator/cmd.glob..func2(0x160cf80, 0xc0000e0580, 0x2, 0x2)\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/create.go:16 +0xfa\ngithub.com/spf13/cobra.(*Command).execute(0x160cf80, 0xc0000e0520, 0x2, 0x2, 0x160cf80, 0xc0000e0520)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:860 +0x2c2\ngithub.com/spf13/cobra.(*Command).ExecuteC(0x160e380, 0x10014b0, 0x0, 0x0)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:974 +0x375\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\t/Users/osborncourtney/go/pkg/mod/github.com/spf13/cobra@v1.2.1/command.go:902\nwebsocket-generator/cmd.Execute()\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/cmd/root.go:25 +0x2d\nmain.main()\n\t/Users/osborncourtney/go/src/github.com/CourtneyLO/websocket-generator/main.go:8 +0x25\n```\n\nError is with configFile[environmentLowerCase].(map[string]interface{})[\"AWSAccountID\"]",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xofgq2sf9ps0rtj673+0wui5bqkx3@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 61,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "ERROR: websocket-generator/cmd.terraformExecCommand",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61d582fa27df514269202f1f",
      "pinned": false,
      "pos": 393215,
      "shortLink": "IWaWUGYd",
      "shortUrl": "https://trello.com/c/IWaWUGYd",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/IWaWUGYd/61-error-websocket-generator-cmdterraformexeccommand",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61d84fba68bde9235bb677ca",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-07T14:35:44.685Z",
      "dateViewedByCreator": null,
      "desc": "```\ngo get github.com/CourtneyLO/websocket-generator@v0.2.0\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xourwjajy5cl12sgcq+1ivwwk48x8@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 64,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Get a specific package version",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61d84fba68bde9235bb677ca",
      "pinned": false,
      "pos": 458751,
      "shortLink": "NOzhBfob",
      "shortUrl": "https://trello.com/c/NOzhBfob",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/NOzhBfob/64-get-a-specific-package-version",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61dbfb4dd0064907e2332c45",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-10T09:25:57.586Z",
      "dateViewedByCreator": null,
      "desc": "Install go\n\n```\n$ brew update && brew install golang\n```\n\nAdd the workspace's bin subdirectory to your PATH\n\n```\n$ export PATH=$PATH:$(go env GOPATH)/bin\n```\n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xpeufnhte93k5xa4w5+2nngzr61zl@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 65,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Go Setup",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61dbfb4dd0064907e2332c45",
      "pinned": false,
      "pos": 524287,
      "shortLink": "shEk6cXG",
      "shortUrl": "https://trello.com/c/shEk6cXG",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/shEk6cXG/65-go-setup",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61dc08d92b406067f512aff8",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-10T10:22:37.273Z",
      "dateViewedByCreator": null,
      "desc": "To see the current go path:\n\n```\n$ go env GOPATH\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xpf4um2tdm7d55gjjs+0sqgh539ar@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 66,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Check go path",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61dc08d92b406067f512aff8",
      "pinned": false,
      "pos": 589823,
      "shortLink": "SKFLMZp7",
      "shortUrl": "https://trello.com/c/SKFLMZp7",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/SKFLMZp7/66-check-go-path",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61dc08f5be39766e8c07cf16",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-10T10:23:00.575Z",
      "dateViewedByCreator": null,
      "desc": "To setup the go path \n\n```\nexport GOPATH=$HOME/go\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xpf4xpbgwx4k6drg2e+0ir97yki2y@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 67,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "To set go path",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61dc08f5be39766e8c07cf16",
      "pinned": false,
      "pos": 655359,
      "shortLink": "3KSqxuMJ",
      "shortUrl": "https://trello.com/c/3KSqxuMJ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/3KSqxuMJ/67-to-set-go-path",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61dc092223c1ba0f97aeec42",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-10T10:24:22.351Z",
      "dateViewedByCreator": null,
      "desc": "Run the following :\n\n```\nexport GO111MODULE=off\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xpf52i5n44xjzofepu+1wt8zc9zqx@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 68,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Go Get Not Downloading to SRC Folder",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61dc092223c1ba0f97aeec42",
      "pinned": false,
      "pos": 720895,
      "shortLink": "tYqiBq2j",
      "shortUrl": "https://trello.com/c/tYqiBq2j",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/tYqiBq2j/68-go-get-not-downloading-to-src-folder",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61dc616e5d097b69bf85d02f",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-10T17:39:36.545Z",
      "dateViewedByCreator": null,
      "desc": "```\n$ export GOROOT=/usr/local/opt/go/libexec\n```\n(https://stackoverflow.com/questions/46693653/compile-version-go1-9-does-not-match-go-tool-version-go1-9-1)\n\n```\n$ export PATH=$PATH:$GOROOT/bin\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xph0yxh4fcabgn2omn+0isijzv2bt@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 69,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setting GOROOT and PATH",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61dc616e5d097b69bf85d02f",
      "pinned": false,
      "pos": 786431,
      "shortLink": "HtKjopRA",
      "shortUrl": "https://trello.com/c/HtKjopRA",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/HtKjopRA/69-setting-goroot-and-path",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61dc6f6b2f8fe37c5c40e2fd",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-10T17:42:34.584Z",
      "dateViewedByCreator": null,
      "desc": "Check go version:\n\n```\n$ go version\n```\n=\u003E go version go1.16.13 darwin/amd64\n\nInstall new version\n\n```\n$ brew install go@1.17\n```\n\nUnlink go \n\n```\nbrew unlink go\n```\n\nForce link\n\n```\nbrew link --force go@1.17\n```\n\n```\n$ go version\n```\n=\u003E go version go1.17.5 darwin/amd64",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xphbq5scmvzglf8s1p+2pa636p0gt@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 70,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Changing go version",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61dc6f6b2f8fe37c5c40e2fd",
      "pinned": false,
      "pos": 851967,
      "shortLink": "LzN44XGA",
      "shortUrl": "https://trello.com/c/LzN44XGA",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/LzN44XGA/70-changing-go-version",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61dd4bdaa72fcd7dbb4f3286",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-17T11:59:03.260Z",
      "dateViewedByCreator": null,
      "desc": "Run the following:\n\n```\n$ export GO111MODULE=off\n```\n\n```\n$ go get github.com/CourtneyLO/websocket-generator\n```\n\nThen check to see if your src file is in the go file\n\n\n**Note**:\n\n`go get` will complain but it should still add the src file\n\n```\n$ go install github.com/CourtneyLO/websocket-generator@latest\n```\n\nWill complain as  `GO111MODULE` is set to off therefor `go get` has to be used\n\nONCE COMPLETED:\n\nRun:\n\n```\n$ export GO111MODULE=on\n```\n\nSo that make build will work in the package\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xpm18o6bh8bhfdzyiu+13hy5y0gk8@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 71,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Get SRC file to download",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61dd4bdaa72fcd7dbb4f3286",
      "pinned": false,
      "pos": 917503,
      "shortLink": "cmHl0299",
      "shortUrl": "https://trello.com/c/cmHl0299",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/cmHl0299/71-get-src-file-to-download",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61e7ecb3e8361b5a27ce00b8",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-19T10:49:50.376Z",
      "dateViewedByCreator": null,
      "desc": "```\nresult, error := prompt.Run()\n\nif errors.Is(error, promptui.ErrInterrupt) {\n\t\t\tgoodbyeMessage.Println(\"Exiting WebSocket Generator, no configuration file has been created. Bye \" + goodbyeEmoji)\n\t\t\tos.Exit(-1)\n\t\t}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xr85kcuustki5x2p4o+06s6mqw5qx@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 76,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Promptui Control C",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61e7ecb3e8361b5a27ce00b8",
      "pinned": false,
      "pos": 983039,
      "shortLink": "j9hdLklJ",
      "shortUrl": "https://trello.com/c/j9hdLklJ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/j9hdLklJ/76-promptui-control-c",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61e7eceacaffc161d1d275bc",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-19T10:50:37.192Z",
      "dateViewedByCreator": null,
      "desc": "```\nif answer == \"quit\" || answer == \"q\" {\n\t\tgoodbyeMessage.Println(\"Exiting WebSocket Generator, no configuration file has been created. Bye \" + goodbyeEmoji)\n\t\tos.Exit(-1)\n\t}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xr85qaj3i10x04p48s+0s6pi92rlm@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 77,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Exit out of current script",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61e7eceacaffc161d1d275bc",
      "pinned": false,
      "pos": 1048575,
      "shortLink": "eiBx11qs",
      "shortUrl": "https://trello.com/c/eiBx11qs",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/eiBx11qs/77-exit-out-of-current-script",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61e91acffdc7b269d4c3a44e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-20T09:20:37.309Z",
      "dateViewedByCreator": null,
      "desc": "```\ngo install github.com/CourtneyLO/websocket-generator\n../../../../go/src/github.com/spf13/viper/internal/encoding/hcl/codec.go:8:2: cannot find package \"github.com/hashicorp/hcl/hcl/printer\" in any of:\n\t/usr/local/Cellar/go/1.17.5/libexec/src/github.com/hashicorp/hcl/hcl/printer (from $GOROOT)\n\t/Users/osborncourtney/go/src/github.com/hashicorp/hcl/hcl/printer (from $GOPATH)\n```\n\nRun:\n\n```\n$  export GO111MODULE=on\n```\n\nand then try running `make build` again",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xrelvxhhzlli4b5bgu+0l6322yijt@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 78,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "ERROR on make build -\u003E can't find package",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61e91acffdc7b269d4c3a44e",
      "pinned": false,
      "pos": 1114111,
      "shortLink": "Bth6TXi6",
      "shortUrl": "https://trello.com/c/Bth6TXi6",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Bth6TXi6/78-error-on-make-build-cant-find-package",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61e9330f642d36379afdd04b",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-20T10:02:20.923Z",
      "dateViewedByCreator": null,
      "desc": "If file path comes back as undefined in the build, make sure you have `:=` not just `=`",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xrf4j76tu93t4p2rez+0vz8xobplp@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 79,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "File path undefined",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61e9330f642d36379afdd04b",
      "pinned": false,
      "pos": 1179647,
      "shortLink": "ThhTT5IG",
      "shortUrl": "https://trello.com/c/ThhTT5IG",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ThhTT5IG/79-file-path-undefined",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61eea1181a25306f3e97e4c6",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-24T12:52:54.371Z",
      "dateViewedByCreator": null,
      "desc": "Make sure you are in the root directory",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xs8tgr5o6960mm4v5y+15l6n22o3i@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 83,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: getwd: invalid argument",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61eea1181a25306f3e97e4c6",
      "pinned": false,
      "pos": 1245183,
      "shortLink": "Yh6H4B7q",
      "shortUrl": "https://trello.com/c/Yh6H4B7q",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Yh6H4B7q/83-error-getwd-invalid-argument",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "646b49cb44dd7a5887ce90f5",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2024-03-13T09:26:26.189Z",
      "dateViewedByCreator": null,
      "desc": "[https://github.com/spf13/cobra-cli/blob/main/README.md](https://github.com/spf13/cobra-cli/blob/main/README.md \"smartCard-inline\")\n\n```\n$ mkdir \u003Cproject-name\u003E\n$ cd \u003Cproject-name\u003E\n$ go mod init \u003Cproject-name\u003E\n$ cobra-cli init --author Courtney Osborn --viper\n$ go run main.go\n```\n\nAdd cmd file\n\n```\n$ cobra-cli add \u003Cfile-name\u003E\n```\n\nOr:\n\n\n```\n~/go/bin/cobra-cli init\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+30gyc7wsc43jzlo9y45+0n2ve6ti7v@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6151ca142767bc48aeecabef",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 172,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup Go Project for Terminal Scripts",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/646b49cb44dd7a5887ce90f5",
      "pinned": false,
      "pos": 1310719,
      "shortLink": "kTpO5Zm4",
      "shortUrl": "https://trello.com/c/kTpO5Zm4",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/kTpO5Zm4/172-setup-go-project-for-terminal-scripts",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6163eeb81162286f8cf64d3b",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-10-11T08:01:40.902Z",
      "dateViewedByCreator": null,
      "desc": "**Jupyter**: open source software\n**PyTorch**: Machine learning framework\n**YOLOv5**: Trainable model\n**LabelImg**: labels the photos",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2x76d610yffvqyam9tn+06uayp9ahk@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6163eeac70d82e5e92c593d8",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 38,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Tools",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6163eeb81162286f8cf64d3b",
      "pinned": false,
      "pos": 65535,
      "shortLink": "ySs41c6W",
      "shortUrl": "https://trello.com/c/ySs41c6W",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ySs41c6W/38-tools",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61640b1cf7ba438ccd70f2ab",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-10-11T10:35:49.161Z",
      "dateViewedByCreator": null,
      "desc": "Contains hundreds for data science dependencies\n\n\nhttps://medium.com/ayuth/install-anaconda-on-macos-with-homebrew-c94437d63a37\n ",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2x76z0376eaa6k5o1ij+1gbz1x7fps@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6163eeac70d82e5e92c593d8",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 39,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Anaconda",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61640b1cf7ba438ccd70f2ab",
      "pinned": false,
      "pos": 131071,
      "shortLink": "LHfqkoYg",
      "shortUrl": "https://trello.com/c/LHfqkoYg",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/LHfqkoYg/39-anaconda",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6164135c3f53be1603156896",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-10-13T15:55:38.953Z",
      "dateViewedByCreator": null,
      "desc": "$ `brew install miniconda`\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2x775ceif52z41el0nq+2hjrr1wd9m@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6163eeac70d82e5e92c593d8",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 40,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Conda (Miniconda)",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6164135c3f53be1603156896",
      "pinned": false,
      "pos": 196607,
      "shortLink": "26ltw7WU",
      "shortUrl": "https://trello.com/c/26ltw7WU",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/26ltw7WU/40-conda-miniconda",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61642e9ed23a96740f159213",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-10-13T16:03:30.590Z",
      "dateViewedByCreator": null,
      "desc": "https://stackoverflow.com/questions/57735701/cant-import-torch-in-jupyter-notebook\n\nInstall `conda install pytorch torchvision -c pytorch` in terminal rather that jupyter (as recommended in the above link) as command asks you for an input",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2x77qb2fjkkma6aobgz+2kamil46pc@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6163eeac70d82e5e92c593d8",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 41,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "SUPER HELPFUL",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61642e9ed23a96740f159213",
      "pinned": false,
      "pos": 262143,
      "shortLink": "DAPfTeeY",
      "shortUrl": "https://trello.com/c/DAPfTeeY",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/DAPfTeeY/41-super-helpful",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "618a844fb1441b3eb3c8320a",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-09T14:25:35.014Z",
      "dateViewedByCreator": null,
      "desc": "```\n$ conda activate main\n$ jupyter notebook\n```\nShould load on the web browser and then just need to click `intorc-computer-vision.ipynb`\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xd1d08va0tg0lymz9m+0us8i6ew2t@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6163eeac70d82e5e92c593d8",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 47,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Startup already installed pytorch",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/618a844fb1441b3eb3c8320a",
      "pinned": false,
      "pos": 327679,
      "shortLink": "t2N142WF",
      "shortUrl": "https://trello.com/c/t2N142WF",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/t2N142WF/47-startup-already-installed-pytorch",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61696cbc53726f5066b67bbb",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": true,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 1,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-09-28T08:40:05.137Z",
      "dateViewedByCreator": null,
      "desc": "Docker leaves dangling images around that can take up your space. To clean up, use the following:\n\n`$ docker system prune -af`\n\nAnd then restart docker\n\n\nError looks as follows:\n\n```\n✖ Stack theia-osborn-computer-vision failed to deploy (1s)\nEnvironment: darwin, node 18.9.0, framework 3.15.2, plugin 6.2.2, SDK 4.3.2\nCredentials: Local, \"default\" profile\nDocs:        docs.serverless.com\nSupport:     forum.serverless.com\nBugs:        github.com/serverless/serverless/issues\n\nError:\nEncountered error during executing: docker build -t serverless-computer-vision-osborn:yolo -f /Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/computer-vision/services/yolo/Dockerfile --cache-from yolo:latest ./services/yolo/\nOutput of the command:\n#1 [internal] load build definition from Dockerfile\n#1 sha256:0e233c99cba4b8d57e96f8c904b9b5314f878124fb579246158ca2dbc864bca7\n#1 transferring dockerfile: 37B 0.0s done\n#1 DONE 0.0s\n\n#2 [internal] load .dockerignore\n#2 sha256:867fbfaf3abd8ed16e378f625431cb386e01a82431422ca07b7b1231cca6cae7\n#2 transferring context: 2B done\n#2 DONE 0.0s\n\n#3 [internal] load metadata for public.ecr.aws/lambda/python:3.9\n#3 sha256:833dd0d20048fb200a9cdd3c16ad5e1331ade0a00c362d1abd58477de594622f\n#3 ERROR: unexpected status code [manifests 3.9]: 400 Bad Request\n------\n \u003E [internal] load metadata for public.ecr.aws/lambda/python:3.9:\n------\nfailed to solve with frontend dockerfile.v0: failed to create LLB definition: unexpected status code [manifests 3.9]: 400 Bad Request\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2x80ee1kz0vu6tg462j+2l64bvckl4@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61696ca4dced65399ab88b87",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 42,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "To clean up after docker",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61696cbc53726f5066b67bbb",
      "pinned": false,
      "pos": 65535,
      "shortLink": "PYPTyZRi",
      "shortUrl": "https://trello.com/c/PYPTyZRi",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": true,
      "url": "https://trello.com/c/PYPTyZRi/42-to-clean-up-after-docker",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "646375178688b84387b39d9c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-05-16T13:12:02.130Z",
      "dateViewedByCreator": null,
      "desc": "Build Docker Image\n\n```\n$ docker build -t (--tag) \u003Cname of image\u003E \u003Cpath to folder ie. .\u003E\n```\n\n- Note:\n  \\- if you want to name a specific file use --file or -f and then file path\n  \\- tag gives image a name\n\nView images\n\n```\n$ docker images\n```\n\nDelete Images\n\n```\n$ docker rmi \u003Cimage id or name/tag\u003E\n```\n\nDelete Multiple Images\n\n```\n$ docker images -q | xargs docker rmi\n```\n\nForcefully Delete Images\n\n```\n$ docker rmi -f\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+30frily6rd6kg5icrrw+1joo3kt5ad@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61696ca4dced65399ab88b87",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 167,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Images",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/646375178688b84387b39d9c",
      "pinned": false,
      "pos": 131071,
      "shortLink": "TEVNKgJ2",
      "shortUrl": "https://trello.com/c/TEVNKgJ2",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/TEVNKgJ2/167-images",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6463751e7618896cd4fe31a4",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-05-16T13:05:11.621Z",
      "dateViewedByCreator": null,
      "desc": "Create a docker container:\n\n- Long way:\n\n```\n$ docker container create hello-world:linux\n$ docker container start \u003Ccontainer id printed out with above command\u003E\n$ docker logs \u003Ccontainer id printed out with above command\u003E / \u003Cname set by --name\u003E\n```\n\n‌\n\n- Long way but combining lines 2 and 3\n  ```\n  $ docker container create hello-world:linux\n  $ docker container start --attach \u003Ccontainer id printed out with above command\u003E\n  ```\n\n‌\n\n- Short way\n\n```\n$ docker run hello-world:linux\n```\n\n- Note: will not log the ID to terminal\n\n‌\n\nRun docker server without having logs that hang:\n\n```\n$ docker run -d --name \u003Cwhat we want to call the image\u003E \u003Cname of image\u003E\n```\n\n- Note `-d` means run in the background\n\nSee docker containers created:\n\n```\n$ docker ps (only shows active running containers)\n$ docker ps -all / docker ps -a (shows all containers)\n```\n\nIf container ran and stop you should see `Exited (0)`\n\nStop Containers:\n\n```\n$ docker stop \u003Cid of container - use docker ps --all\u003E\n```\n\nStop Containers Immediately\n\n```\n$ docker stop -t 0 \u003Cid of container - use docker ps --all\u003E\n```\n\n- Note: be careful as this could lead to data lose\n\nKill Containers:\n\n```\n$ docker kill \u003Cid of container - use docker ps --all\u003E\n```\n\nStart Terminal Sessions in Container:\n\n```\n$ docker exec --interactive --tty \u003Cid for contained\u003E \u003Cshell type i.e bash\u003E\n```\n\n- Note to get out of the contained use ctr-d (only once!)\n\nRemove containers:\n\n```\n$ docker rm \u003Cid\u003E\n```\n\n- Note: does not stop containers that are still running - add `-f`\n\nRemove multiple containers:\n\n```\n$ docker ps -aq | xargs docker rm\n```\n\nAdd PORT:\n\n```\n$ docker run -d --name name-for-container -p 5001:5000 container\n```\n\n- Note: 5001 (used on browser) 5000 (used in docker)\n\n\nStoring Data that is on a docker to computer:\n\n```\n$ docker run --rm --entrypoint sh -v /tmp/container:/tmp ubuntu -c \"echo 'Hello There!' \u003E /tmp/file && cat tmp/file\"\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+30frimp6t4c7dlg1kf8+03l9xu7nl4@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61696ca4dced65399ab88b87",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 168,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Containers",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6463751e7618896cd4fe31a4",
      "pinned": false,
      "pos": 196607,
      "shortLink": "kdeKdFIV",
      "shortUrl": "https://trello.com/c/kdeKdFIV",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/kdeKdFIV/168-containers",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "64637f8dfdc9aba7edf28ea2",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-05-16T13:09:12.594Z",
      "dateViewedByCreator": null,
      "desc": "Login to Docker Hub\n\n```\n$ docker login\n```\n\nTagging Image\n\n```\ndocker tag \u003Cimage name\u003E \u003Cusername/image:tag\u003E\n```\n\n- Note if you do not add a tag at the end it will save as latest which can be confusing - always put a tag\n\nPublish in Docker Hub:\n\n```\n$ docker push \u003Cimage name\u003E \u003Cusername/image:tag\u003E\n```\n\n- Note: makes sure to push the correct tag",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+30frqnlkz97tjzw50o2+0i9j02w6gp@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61696ca4dced65399ab88b87",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 169,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Docker Hub",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/64637f8dfdc9aba7edf28ea2",
      "pinned": false,
      "pos": 262143,
      "shortLink": "vTzunEy7",
      "shortUrl": "https://trello.com/c/vTzunEy7",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/vTzunEy7/169-docker-hub",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "646380c6af8b801881b3c062",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-05-16T13:10:46.396Z",
      "dateViewedByCreator": null,
      "desc": "```\n$ df -h\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+30frrlex068sed9nq02+0lg30pgorj@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61696ca4dced65399ab88b87",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 170,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Checking disk space",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/646380c6af8b801881b3c062",
      "pinned": false,
      "pos": 327679,
      "shortLink": "s1NHP9Bk",
      "shortUrl": "https://trello.com/c/s1NHP9Bk",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/s1NHP9Bk/170-checking-disk-space",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "64638151ddefef56f98c1b6a",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-05-16T13:15:42.338Z",
      "dateViewedByCreator": null,
      "desc": "Docker stats\n\n```\n‌docker stats\n```\n\nAdvance information about a container running in JSON format:\n\n```\n$ docker inspect \u003Cname/id of container\u003E\n```\n\nWith less:\n\n```\n$ docker inspect \u003Cname/id of container\u003E | less\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+30frs0gr7nxtf0npx7u+2oruhmd31k@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61696ca4dced65399ab88b87",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 171,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Docker Debugging",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/64638151ddefef56f98c1b6a",
      "pinned": false,
      "pos": 393215,
      "shortLink": "3R7dPfFk",
      "shortUrl": "https://trello.com/c/3R7dPfFk",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/3R7dPfFk/171-docker-debugging",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61aa1ff3c4083908e919f8b4",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-12-03T13:48:33.481Z",
      "dateViewedByCreator": null,
      "desc": "git rm --cached -r \u003Cfolder name\u003E\n\nTo force this command use `-f` at the end",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xhu7gdix2rjzp6tub8+217mbgua8g@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "616ec43e4d5eab8bac2f07fe",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 55,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Remove cached folders",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61aa1ff3c4083908e919f8b4",
      "pinned": false,
      "pos": 32767.5,
      "shortLink": "7cVjZ5ck",
      "shortUrl": "https://trello.com/c/7cVjZ5ck",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/7cVjZ5ck/55-remove-cached-folders",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "616ec44d83b6dc116748ed09",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-12-03T13:48:00.156Z",
      "dateViewedByCreator": null,
      "desc": "git rm --cached \u003Cfile name\u003E\n\nTo force this command use `-f` at the end",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2x8tm1mlm88sqvkma6h+1m0a0s367i@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "616ec43e4d5eab8bac2f07fe",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 43,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Remove cached files",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/616ec44d83b6dc116748ed09",
      "pinned": false,
      "pos": 65535,
      "shortLink": "184YtCQj",
      "shortUrl": "https://trello.com/c/184YtCQj",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/184YtCQj/43-remove-cached-files",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61aa205bc8a921633cfb20b1",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-12-03T13:49:48.940Z",
      "dateViewedByCreator": null,
      "desc": "To un-stage the initial commit locally\n```\ngit update-ref -d HEAD\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xhu7rmh0tq8uro17ld+0xkkrwkowa@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "616ec43e4d5eab8bac2f07fe",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 56,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Remove the initial commit",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61aa205bc8a921633cfb20b1",
      "pinned": false,
      "pos": 131071,
      "shortLink": "LRDa0gdL",
      "shortUrl": "https://trello.com/c/LRDa0gdL",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/LRDa0gdL/56-remove-the-initial-commit",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61d84e8fca9c7476f254b58f",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-10T16:06:31.135Z",
      "dateViewedByCreator": null,
      "desc": "```\n$ git tag v0.1.0\n$ git push origin v0.1.0\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xour08rdangt09v8gf+2kdhbtbmsj@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "616ec43e4d5eab8bac2f07fe",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 63,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Tagging",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61d84e8fca9c7476f254b58f",
      "pinned": false,
      "pos": 196607,
      "shortLink": "V5ZOlDmH",
      "shortUrl": "https://trello.com/c/V5ZOlDmH",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/V5ZOlDmH/63-tagging",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "618014424344b75b31703b01",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-01T16:23:10.975Z",
      "dateViewedByCreator": null,
      "desc": "Add `cors: true` to yaml file\nAdd `\"Access-Control-Allow-Origin\" = \"*\"` to response headers",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xbga7fgc9r43e3zdoh+1mykz8jqk5@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "618014323cc9536e55c348eb",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 45,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Serverless",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/618014424344b75b31703b01",
      "pinned": false,
      "pos": 65535,
      "shortLink": "AB0aLARA",
      "shortUrl": "https://trello.com/c/AB0aLARA",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/AB0aLARA/45-serverless",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "619b6a67401e5b5f5b1cc86b",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-22T10:03:36.296Z",
      "dateViewedByCreator": null,
      "desc": "```\nFILE_PATH=$(shell pwd)\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xflrrbhyf6rbb836nf+0wfzaiqesg@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "619b6a4dee8487412f26ab83",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 49,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Get Path of Makefile",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/619b6a67401e5b5f5b1cc86b",
      "pinned": false,
      "pos": 32767.5,
      "shortLink": "gkmJyfA9",
      "shortUrl": "https://trello.com/c/gkmJyfA9",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/gkmJyfA9/49-get-path-of-makefile",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "619b6a5976318d81ad010a6e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-22T10:03:43.883Z",
      "dateViewedByCreator": null,
      "desc": "'/Users/osborncourtney/'\n\n```\nSPLIT_PATH=$(subst /, ,$(FILE_PATH))\nUSERS_NAME=$(word 2,$(USERS_NAME))\n```\n\n-\u003E osborncourtney",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xflrpttgpf092f12lq+1iynfu2p3f@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "619b6a4dee8487412f26ab83",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 48,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Get Word From String",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/619b6a5976318d81ad010a6e",
      "pinned": false,
      "pos": 65535,
      "shortLink": "abo1rhuU",
      "shortUrl": "https://trello.com/c/abo1rhuU",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/abo1rhuU/48-get-word-from-string",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "619b73e1113cd6137c7500d1",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2021-11-22T10:42:04.779Z",
      "dateViewedByCreator": null,
      "desc": "'${USERS_NAME}'\n\ne.g \n```\ncd infrastructure; TF_VAR_ENV='${USERS_NAME}' terraform init; TF_VAR_ENV='${USERS_NAME}' terraform plan\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xflz1nbhu5v1eud51t+08p5fze1gz@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "619b6a4dee8487412f26ab83",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 50,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Print Out Variable as a String",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/619b73e1113cd6137c7500d1",
      "pinned": false,
      "pos": 131071,
      "shortLink": "ulO0lLLN",
      "shortUrl": "https://trello.com/c/ulO0lLLN",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ulO0lLLN/50-print-out-variable-as-a-string",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61ded02d88409621c222f2f6",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-12T12:57:42.181Z",
      "dateViewedByCreator": null,
      "desc": "```\n$(info $(HOME))\n```\n\n=\u003E /Users/osborncourtney",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xpubuzgjlqyotofu9i+1gzxqs7oum@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "619b6a4dee8487412f26ab83",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 73,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Print Home directory",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61ded02d88409621c222f2f6",
      "pinned": false,
      "pos": 196607,
      "shortLink": "Ko0kvLKR",
      "shortUrl": "https://trello.com/c/Ko0kvLKR",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Ko0kvLKR/73-print-home-directory",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61dd5fdb8d69704f25ff20ed",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-07-10T07:52:49.179Z",
      "dateViewedByCreator": null,
      "desc": "```\nconst mockDate = new Date('2020-01-01T00:00:00.000Z')\nconst spy = jest\n  .spyOn(global, 'Date')\n  .mockImplementation(() =\u003E mockDate)\n```\n\nRestore Date:\n\n```\nafterEach(() =\u003E {\n  spy.mockRestore();\n});\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xpmgmg2w27c1ulhr71+255gos444o@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61dd5fd7bacfba716d84e024",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 72,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Mock date",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61dd5fdb8d69704f25ff20ed",
      "pinned": false,
      "pos": 65535,
      "shortLink": "8jfENmAv",
      "shortUrl": "https://trello.com/c/8jfENmAv",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/8jfENmAv/72-mock-date",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f0081eece2c73f2e530ae7",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-25T14:29:22.944Z",
      "dateViewedByCreator": null,
      "desc": "Site: https://stackoverflow.com/questions/45577194/failed-to-activate-virtualenv-with-pyenv/45578839\n\nERROR:\n\n```\nFailed to activate virtualenv.\n\nPerhaps pyenv-virtualenv has not been loaded into your shell properly.\nPlease restart current shell and try again.\n```\n\nTHE SOLUTION:\n\n```\n$ open ~/.bash_profile\n```\n\nAdd the following to the bash_profile\n\n```\n$ eval \"$(pyenv init -)\"\n$ eval \"$(pyenv virtualenv-init -)\"\n```\n\nSave and open a new terminal, you should see the following:\n\n```\n(metaxp-venv) (base) DVL-W60YMHTDF:lon-garage-meta-exp-infra osborncourtney$\n```\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xsghk0d7cm7sjt2ztz+2j1iq4xg8q@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f00805bc5d66175df5ae79",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 84,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: Failed to activate virtualenv.",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f0081eece2c73f2e530ae7",
      "pinned": false,
      "pos": 65535,
      "shortLink": "S4ghwDM2",
      "shortUrl": "https://trello.com/c/S4ghwDM2",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/S4ghwDM2/84-error-failed-to-activate-virtualenv",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f11b4e9bb4672b99ba319f",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-26T09:58:54.343Z",
      "dateViewedByCreator": null,
      "desc": "Run:\n\n```\n$ source deactivate\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xsmd68jrsgwewr9lsv+1dp3owzr3z@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f00805bc5d66175df5ae79",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 85,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Deactivate virtual environment",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f11b4e9bb4672b99ba319f",
      "pinned": false,
      "pos": 131071,
      "shortLink": "WtO3ltyI",
      "shortUrl": "https://trello.com/c/WtO3ltyI",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/WtO3ltyI/85-deactivate-virtual-environment",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "620271879d9b708564eba6c1",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-08T14:27:52.504Z",
      "dateViewedByCreator": null,
      "desc": "Site: https://towardsdatascience.com/virtual-environments-104c62d48c54\n\n###**Create virtual environment**\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n```\n\n**e.g** python3 -m venv venv/ \n\n\n###**Activate virtual Environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n```\n\n**e.g** source venv/bin/activate\n\nExit Virtual Environment\n\n```\n$ deactivate\n```\n\n###** To see all third party libraries in the virtual environment**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\n### **Installed third party packages along with their version numbers**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\n### **Add output to requirements.txt**\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\n### Install Dependencies\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip install -r requirements.txt\n```\n**e.g** (venv) $ pip install -r requirements.txt\n\n## **Access environment for the first time**\n\n###** Create virtual environment and install dependencies**\n```\n$ source venv/bin/activate\n(\u003Cvirtual-environment-name\u003E) pip install -r requirements.txt\n```\n\n### **Nuke old environments **\n\n```\n$ sudo rm -rf \u003Cvirtual-environment-name\u003E\n```\n\n\n###** Find virtual environments on your computer**\n\n```\n$ find $HOME -name \"*activate\" -type f\n```\n\n### Install and add virtual environments\n\n```\n$ cd test-project/\n$ python3 -m venv \u003Cvirtual-environment-name\u003E\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip install -r requirements.txt\n```\n\n###**Uninstall and remove the virtual environment**\n\n```\n$ source \u003Cvirtual-environment-name\u003E/bin/activate\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n(\u003Cvirtual-environment-name\u003E) $ pip uninstall -r requirements.txt -y\n(\u003Cvirtual-environment-name\u003E) $ deactivate\n$ rm -r \u003Cvirtual-environment-name\u003E/\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xv965iuyij684xeim9+2awj4kiyg3@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f00805bc5d66175df5ae79",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 112,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Virtual Environments",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/620271879d9b708564eba6c1",
      "pinned": false,
      "pos": 196607,
      "shortLink": "g5Whs7ER",
      "shortUrl": "https://trello.com/c/g5Whs7ER",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/g5Whs7ER/112-virtual-environments",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "620272b3a286b78031ba114e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-10T08:25:14.426Z",
      "dateViewedByCreator": null,
      "desc": "###** To see all third party libraries in the virtual environment**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip list\n```\n\n**e.g** (venv) $ pip list\n\n### **Installed third party packages along with their version numbers**\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze\n```\n\n**e.g** (venv) $ pip freeze\n\n### **Add output to requirements.txt**\n```\n(\u003Cvirtual-environment-name\u003E) $ pip freeze \u003E requirements.txt\n```\n**e.g** (venv) $ pip freeze \u003E requirements.txt\n\n### Install Dependencies\n\n```\n(\u003Cvirtual-environment-name\u003E) $ pip install -r requirements.txt\n```\n**e.g** (venv) $ pip install -r requirements.txt",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xv971yukd7u0216jim+1z0xfn6tpk@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f00805bc5d66175df5ae79",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 113,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Requirement.txt",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/620272b3a286b78031ba114e",
      "pinned": false,
      "pos": 262143,
      "shortLink": "XbFngdsh",
      "shortUrl": "https://trello.com/c/XbFngdsh",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/XbFngdsh/113-requirementtxt",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "641332062d94ab13549a3239",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-16T15:13:23.478Z",
      "dateViewedByCreator": null,
      "desc": "eval(string)",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+303klz3q4e91v91kj09+1hg23qte5a@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f00805bc5d66175df5ae79",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 147,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Get Object from string",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/641332062d94ab13549a3239",
      "pinned": false,
      "pos": 327679,
      "shortLink": "NG85k4eu",
      "shortUrl": "https://trello.com/c/NG85k4eu",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/NG85k4eu/147-get-object-from-string",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "650ad2836236d8c1462521bf",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-09-20T12:32:50.824Z",
      "dateViewedByCreator": null,
      "desc": "- $ brew install poetry\n\nInstall dependancies\n\nAdd depenancy to pyproject.toml\n\n$ poetry lock\n\n$ poetry install",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3156qm1vrw2f9nkn6pr+0zk42vyazo@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f00805bc5d66175df5ae79",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 178,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "POETRY",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/650ad2836236d8c1462521bf",
      "pinned": false,
      "pos": 393215,
      "shortLink": "6NbSne0K",
      "shortUrl": "https://trello.com/c/6NbSne0K",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/6NbSne0K/178-poetry",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "64f74639d7b703d10d9b5e8b",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-09-06T14:13:44.519Z",
      "dateViewedByCreator": null,
      "desc": "AWS\\_ACCESS\\_KEY\\_ID = os.getenv('AWS\\_ACCESS\\_KEY\\_ID')\nAWS\\_SECRET\\_ACCESS\\_KEY = os.getenv('AWS\\_SECRET\\_ACCESS\\_KEY')\nAWS\\_STORAGE\\_BUCKET\\_NAME = os.getenv('AWS\\_STORAGE\\_BUCKET\\_NAME')\nAWS\\_QUERYSTRING\\_AUTH = True → this will give you a pre-signed URL\nAWS\\_S3\\_REGION_NAME = \"eu-west-2\" → this makes sure the pre-signed URL works\n\nDEFAULT\\_FILE\\_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n\n‌\n\nUpload Images\n\n‌\n\n```python\n@method_decorator(csrf_exempt, name='dispatch')\nClass ....\n    @csrf_exempt\n\tdef post(self, *args, **kwargs):\n\t\tids = self.request.POST.getlist('id')\n\t\timage = self.request.FILES.getlist('image')\n\n\t\tfor index, id in enumerate(ids):\n\t\t\tplayer_model = PlayerModel.objects.get(pk=id)\n\t\t\tplayer_model.image = image[index]\n\t\t\tplayer_model.save()\n\n\t\tall_players = PlayerModel.objects.all()\n\n\t\tplayers = PlayerSerializer(all_players, many=True)\n\t\treturn JsonResponse(players.data, safe=False)\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3127ubw6j9k9hldvi4r+2q6wmphmyb@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 174,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "AWS S3",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/64f74639d7b703d10d9b5e8b",
      "pinned": false,
      "pos": 24575.875,
      "shortLink": "snaMzuPA",
      "shortUrl": "https://trello.com/c/snaMzuPA",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/snaMzuPA/174-aws-s3",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f3adf92ec6571d01f6efd3",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-04-05T06:19:38.483Z",
      "dateViewedByCreator": null,
      "desc": "https://docs.djangoproject.com/en/4.0/intro/tutorial01/\n\nCreating the project\n\n```\n$ django-admin startproject project-name\n```\n\n- I recommend calling it main as the file structure will be as follows:\n\n```\nmain/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nYou can rename the folder to your actual project name without causing any issues in the code. So it will look like:\n\n```\nmy-project/\n    manage.py\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\nCreating an app\n\n- What’s the difference between a project and an app? An app is a web application that does something – e.g., a blog system, a database of public records or a small poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects.\n\nRun:\n\n```\n$ python manage.py startapp app-name\n```\n\nFile structure:\n\n```\napp-name/\n    __init__.py\n    admin.py\n    apps.py\n    migrations/\n        __init__.py\n    models.py\n    tests.py\n    views.py\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt0fooonxmqb194udv+0eqdynwpqf@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 88,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Install Django and Create Project and Apps",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f3adf92ec6571d01f6efd3",
      "pinned": false,
      "pos": 49151.75,
      "shortLink": "QIFLy18N",
      "shortUrl": "https://trello.com/c/QIFLy18N",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/QIFLy18N/88-install-django-and-create-project-and-apps",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "62027af90f17eb13eeca1937",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-08T14:42:00.416Z",
      "dateViewedByCreator": null,
      "desc": "```\n$ source lon-tech-universe-test-4/bin/activate\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n----\u003E \n\n```\nPackage    Version\n---------- -------\npip        21.1.1\nsetuptools 56.0.0\n\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ python -m pip install Django\n```\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip list\n```\n\n---\u003E \n\n```\nPackage            Version\n------------------ -------\nasgiref            3.5.0\nbackports.zoneinfo 0.2.1\nDjango             4.0.2\npip                22.0.3\nsetuptools         56.0.0\nsqlparse           0.4.2\n```\n\nInstall django and zappa\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:lon-tech-universe-test-4 osborncourtney$ pip install django zappa\n```\n\nNow see https://trello.com/c/QIFLy18N/88-install-django-and-create-project-and-apps\n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xv9dey2y11ele4umgn+0fe7mes84o@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 114,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup (including virtual environment)",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/62027af90f17eb13eeca1937",
      "pinned": false,
      "pos": 98303.5,
      "shortLink": "U4LPI8iW",
      "shortUrl": "https://trello.com/c/U4LPI8iW",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/U4LPI8iW/114-setup-including-virtual-environment",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f11c9e2a4ff919ed5b0cbf",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-28T08:48:46.973Z",
      "dateViewedByCreator": null,
      "desc": "Site: https://docs.djangoproject.com/en/4.0/howto/upgrade-version/\n\n```\npython -m django --version\n```\n\n-\u003E 3.2.11\n\n```\npython -m pip install -U Django\n```\n\n-\u003E Successfully installed Django-4.0.1 backports.zoneinfo-0.2.1\n\n```\npython -m django --version\n```\n\n-\u003E 4.0.1",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xsme6ivzxc7fzx4h4v+0k85tk9deo@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 86,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Upgrade Django version",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f11c9e2a4ff919ed5b0cbf",
      "pinned": false,
      "pos": 196607,
      "shortLink": "ikoZdyIk",
      "shortUrl": "https://trello.com/c/ikoZdyIk",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ikoZdyIk/86-upgrade-django-version",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6322cbd05c777a00df0bb5d6",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-09-15T06:56:09.490Z",
      "dateViewedByCreator": null,
      "desc": "https://pypi.org/project/python-dotenv/\n\nInstall dotenv\n\n```\n$ pip install python-dotenv\n```\n\nIn the file you are using the environment variables add the following:\n\n```\nimport os\nfrom pathlib import Path\nfrom dotenv import load_dotenv\n\nload_dotenv(os.path.join(BASE_DIR, '.env'))\n```\n\nEnvironment variables will look as follows:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': os.getenv('DATABASE_NAME'),\n        'USER': os.getenv('DATABASE_USER'),\n        'PASSWORD': os.getenv('DATABASE_PASSWORD'),\n        'HOST': os.getenv('DATABASE_HOST'),\n        'PORT': os.getenv('DATABASE_PORT') and int(os.getenv('DATABASE_PORT'))\n    }\n}\n```\n\nAdd variables and values to .env\n\n```\nDATABASE_NAME=name_db\nDATABASE_USER=name_root_user\nDATABASE_PASSWORD=password\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\n```\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2z32072tuxcdqpodnti+173fl9hb4y@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 135,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setting up Environment variables & database using dotenv",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6322cbd05c777a00df0bb5d6",
      "pinned": false,
      "pos": 294911,
      "shortLink": "n1Bq5xU9",
      "shortUrl": "https://trello.com/c/n1Bq5xU9",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/n1Bq5xU9/135-setting-up-environment-variables-database-using-dotenv",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f3c167940cca51160d2e8d",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-09-15T06:52:48.154Z",
      "dateViewedByCreator": null,
      "desc": "https://alicecampkin.medium.com/how-to-set-up-environment-variables-in-django-f3c4db78c55f\n\nInstall django-environ\n\n```\n$ pip install django-environ\n```\n\nIn the file you are using the environment variables add the following:\n\n```\nimport environ\nenv = environ.Env()\nenviron.Env.read_env()\n```\n\nEnvironment variables will look as follows:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': env('DATABASE_NAME'),\n        'USER': env('DATABASE_USER'),\n        'PASSWORD': env('DATABASE_PASSWORD'),\n        'HOST': env('DATABASE_HOST'),\n        'PORT': env('DATABASE_PORT')\n    }\n}\n```\n\nAdd variables and values to .env\n\n```\nDATABASE_NAME=name_db\nDATABASE_USER=name_root_user\nDATABASE_PASSWORD=password\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\n```\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt0umm8s7f5ovz97rh+0v9bptv975@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 92,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setting up Environment variables & database using django-environ",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f3c167940cca51160d2e8d",
      "pinned": false,
      "pos": 327679,
      "shortLink": "5BjIFcvy",
      "shortUrl": "https://trello.com/c/5BjIFcvy",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/5BjIFcvy/92-setting-up-environment-variables-database-using-django-environ",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f3c5713ec9506942d8ed57",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-28T15:09:49.478Z",
      "dateViewedByCreator": null,
      "desc": "Once you have setup your postgresql database following [these instructions](https://trello.com/c/TQJkyQNA/90-access-and-setup-postgres-commands)\n\nAnd your environment variables have been added according to [these instructions](https://trello.com/c/5BjIFcvy/92-setting-up-environment-variables)\n\n- You can create your model.\n- Then you will need to add the name of the folder of your model to main/settings.py installes apps:\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'presentation' # This is the model\n]\n```\n\n- Then run the following:\n\n```\n$ python manage.py makemigrations presentation\n```\n\n- And then run:\n\n```\n$ python manage.py migrate\n```\n\nYou should now see the table in your database using [these instructions](https://trello.com/c/9XJgbnvX/91-database-commands)",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt0xqecwpsyg43gtp3+0s6k0zxffb@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 93,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup Postgresql Database from scratch",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f3c5713ec9506942d8ed57",
      "pinned": false,
      "pos": 393215,
      "shortLink": "DHY86hIg",
      "shortUrl": "https://trello.com/c/DHY86hIg",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/DHY86hIg/93-setup-postgresql-database-from-scratch",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f3e9b63f0c3c8191970cd4",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-28T13:04:04.727Z",
      "dateViewedByCreator": null,
      "desc": "https://florimondmanca.github.io/djangorestframework-api-key/guide/",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt1pmhb52sk5lxj07o+00zb9ln6d0@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 94,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Add Authorization to api endpoint",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f3e9b63f0c3c8191970cd4",
      "pinned": false,
      "pos": 458751,
      "shortLink": "bfFXUspx",
      "shortUrl": "https://trello.com/c/bfFXUspx",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/bfFXUspx/94-add-authorization-to-api-endpoint",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f3ef55e483da0c469339bb",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-28T15:34:14.504Z",
      "dateViewedByCreator": null,
      "desc": "To see all rows in a table in the code use:\n\n```\nPresentation.objects.all()\n```\n\nTo return in JSON format\n\n```\nfrom django.core import serializers\ndata = serializers.serialize('json', Presentation.objects.all())\nreturn HttpResponse(data, mimetype='application/json')\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt1ty5x5y9l1ef3iyj+0stoo80vrz@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 95,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "View Data returned database object",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f3ef55e483da0c469339bb",
      "pinned": false,
      "pos": 524287,
      "shortLink": "5cC3nZJN",
      "shortUrl": "https://trello.com/c/5cC3nZJN",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/5cC3nZJN/95-view-data-returned-database-object",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f7c682983dc46c3a34d6e9",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-31T11:22:45.739Z",
      "dateViewedByCreator": null,
      "desc": "https://docs.djangoproject.com/en/dev/ref/contrib/admin/#inlinemodeladmin-objects",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xtmu09l88t8a4ve9k9+1klibul78f@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 100,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Show related tables in admin view",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f7c682983dc46c3a34d6e9",
      "pinned": false,
      "pos": 589823,
      "shortLink": "bkb8S7oD",
      "shortUrl": "https://trello.com/c/bkb8S7oD",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/bkb8S7oD/100-show-related-tables-in-admin-view",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f8ef22dccf1f5effa55a06",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-01T08:29:23.857Z",
      "dateViewedByCreator": null,
      "desc": "## ERROR:\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 367, in get_value\n    value = self.ENVIRON[var]\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/os.py\", line 675, in __getitem__\n    raise KeyError(key) from None\nKeyError: 'DATABASE_NAME'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"manage.py\", line 22, in \u003Cmodule\u003E\n    main()\n  File \"manage.py\", line 18, in main\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/__init__.py\", line 419, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/__init__.py\", line 413, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/base.py\", line 354, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 61, in execute\n    super().execute(*args, **options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/base.py\", line 398, in execute\n    output = self.handle(*args, **options)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 68, in handle\n    if not settings.DEBUG and not settings.ALLOWED_HOSTS:\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 82, in __getattr__\n    self._setup(name)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 69, in _setup\n    self._wrapped = Settings(settings_module)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/django/conf/__init__.py\", line 170, in __init__\n    mod = importlib.import_module(self.SETTINGS_MODULE)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/importlib/__init__.py\", line 127, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 1014, in _gcd_import\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 991, in _find_and_load\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 975, in _find_and_load_unlocked\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 671, in _load_unlocked\n  File \"\u003Cfrozen importlib._bootstrap_external\u003E\", line 848, in exec_module\n  File \"\u003Cfrozen importlib._bootstrap\u003E\", line 219, in _call_with_frames_removed\n  File \"/Users/osborncourtney/Development/DV/garage/lon-meta-universe/django-app/main/settings.py\", line 83, in \u003Cmodule\u003E\n    'NAME': env('DATABASE_NAME'),\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 175, in __call__\n    return self.get_value(\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.8/site-packages/environ/environ.py\", line 371, in get_value\n    raise ImproperlyConfigured(error_msg)\ndjango.core.exceptions.ImproperlyConfigured: Set the DATABASE_NAME environment variable\nmake: *** [run] Error 1\n```\n\n## SOLUTION:\n\n- Put your `.env` file in the same folder as the settings.py",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xtt6413elnvvsmmbk6+0ioeb6h7l5@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 101,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: Set the DATABASE_NAME environment variable",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f8ef22dccf1f5effa55a06",
      "pinned": false,
      "pos": 655359,
      "shortLink": "CQvUWnar",
      "shortUrl": "https://trello.com/c/CQvUWnar",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/CQvUWnar/101-error-set-the-databasename-environment-variable",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f90b0cd9ebac54f0cd91f9",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-01T10:32:08.471Z",
      "dateViewedByCreator": null,
      "desc": "- Adding import export\n- How to prevent adding duplicates with import",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xttrksrocm4fhnefp5+01rkxtiwvu@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 103,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Things to write about",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f90b0cd9ebac54f0cd91f9",
      "pinned": false,
      "pos": 720895,
      "shortLink": "NAHilQQv",
      "shortUrl": "https://trello.com/c/NAHilQQv",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/NAHilQQv/103-things-to-write-about",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f90b4e36669b3819b0f61e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-01T10:29:53.646Z",
      "dateViewedByCreator": null,
      "desc": "##Error:\n\nStopIteration encountered while trying to read file: Tech Universe.xlsx\n\n##Solution:\n\nIt appears the file is corrupted create a new excel sheet",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xttrrv81bwvs1fel9a+0s355orm71@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 104,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: Import -\u003E StopIteration encountered while trying to read file: Tech Universe.xlsx",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f90b4e36669b3819b0f61e",
      "pinned": false,
      "pos": 786431,
      "shortLink": "HfY5rowZ",
      "shortUrl": "https://trello.com/c/HfY5rowZ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/HfY5rowZ/104-error-import-stopiteration-encountered-while-trying-to-read-file-tech-universexlsx",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f90bb62eb830426db03b13",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-01T10:32:58.721Z",
      "dateViewedByCreator": null,
      "desc": "## Notes:\n\n### Blank or Missing fields in the excel spread sheet:\n\n- If the field is allowed to be empty or null in the excel spread sheet -\u003E make sure the modle knows that:\n\nExample:\n```\ndescription = models.CharField(\"Description\", max_length=500, blank=True, null=True)\n```\n\n### How to prevent adding duplicates with import:\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xtts33zegxhmzl46j7+1ozjlc94nu@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 105,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Import Export",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f90bb62eb830426db03b13",
      "pinned": false,
      "pos": 851967,
      "shortLink": "hYp2o4fu",
      "shortUrl": "https://trello.com/c/hYp2o4fu",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/hYp2o4fu/105-import-export",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f9472efa79473bedd8b06b",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-01T14:45:54.518Z",
      "dateViewedByCreator": null,
      "desc": "Error:\n\nNo installed app with label \u003Capp name\u003E\n\ne.g\n\n```\nNo installed app with label 'yaxis'\n```\n\nAdd \u003Cproject name\u003E to settings.py\n\ne.g\n\nmain/settings.py\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'import_export',\n\n    'maturitylevel',\n    'yaxis', \u003C-------\n]\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xtv1tiu6pj85tybtkb+0y8z9glytt@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 107,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: No installed app with label \u003Capp name\u003E",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f9472efa79473bedd8b06b",
      "pinned": false,
      "pos": 917503,
      "shortLink": "xcGvg2fT",
      "shortUrl": "https://trello.com/c/xcGvg2fT",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/xcGvg2fT/107-error-no-installed-app-with-label-app-name",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "622f83aa4255072ae852e7e4",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-03-14T18:05:27.355Z",
      "dateViewedByCreator": null,
      "desc": "Have the model that is the through field model in the same file as the group model\n\nhttps://docs.djangoproject.com/en/4.0/topics/db/models/#extra-fields-on-many-to-many-relationships",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2y23my1eyhogonz552c+1ha2so6r20@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 128,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Through field",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/622f83aa4255072ae852e7e4",
      "pinned": false,
      "pos": 983039,
      "shortLink": "Jm3BUiAd",
      "shortUrl": "https://trello.com/c/Jm3BUiAd",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Jm3BUiAd/128-through-field",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "623323851ed560295b86e11e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-03-17T12:03:44.443Z",
      "dateViewedByCreator": null,
      "desc": "```\nclass Meta:\n        verbose_name = \"Universe\"\n        verbose_name_plural = \"Universes\"\n        ordering = [\"name\"]\n```\n\nThis appears to prevent flaky tests",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2y2nggod3piw02a4nby+21bd0vx46j@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 129,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Add ordering fields to each model",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/623323851ed560295b86e11e",
      "pinned": false,
      "pos": 1048575,
      "shortLink": "mnFnK4c8",
      "shortUrl": "https://trello.com/c/mnFnK4c8",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/mnFnK4c8/129-add-ordering-fields-to-each-model",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "62335e70cd3e3f245f60cbbd",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-03-18T08:24:31.377Z",
      "dateViewedByCreator": null,
      "desc": "Useful link: \n\n```\nfrom django.contrib.auth.models import User\nfrom import_export import resources, fields\nfrom import_export.widgets import ForeignKeyWidget, ManyToManyWidget,DateWidget\nfrom collections import Counter\n\nfrom .models import ExemplarModel\nfrom axes.models import XAxisModel, YAxisModel\nfrom opportunity.models import BusinessOpportunityModel\nfrom tech.models import TechModel\nfrom area.models import PracticeAreaModel\n\n\nclass ExemplarAdminResource(resources.ModelResource):\n    xaxis = fields.Field(column_name='xaxis', attribute='xaxis', widget=ForeignKeyWidget(XAxisModel, field='name'))\n    yaxis = fields.Field(column_name='yaxis', attribute='yaxis', widget=ForeignKeyWidget(YAxisModel, field='name'))\n    business_opportunity = fields.Field(column_name='business_opportunity', attribute='business_opportunity', widget=ForeignKeyWidget(BusinessOpportunityModel, field='name'))\n    tech = fields.Field(column_name='tech', attribute='tech', widget=ManyToManyWidget(TechModel, field='name'))\n    practice_area = fields.Field(column_name='practice_area', attribute='practice_area', widget=ManyToManyWidget(model=PracticeAreaModel,field='name'))\n    class Meta:\n        model = ExemplarModel\n        fields = (\n            'id',\n            'tech_use_case',\n            'description',\n            'xaxis',\n            'yaxis',\n            'business_opportunity',\n            'tech',\n            'practice_area',\n            'reason',\n            'sample_use_case',\n            'market_example',\n            'market_example_url',\n            'market_example_description',\n            'dv_venture_example',\n            'size',\n        )\n\n    def before_import_row(self, row, **kwargs):\n        tech_use_case = row.get('tech_use_case')\n        exemplar = ExemplarModel.objects.filter(tech_use_case=tech_use_case)\n        exemplar_exists = exemplar.exists()\n        if exemplar_exists:\n            exemplar = exemplar.get(tech_use_case=tech_use_case)\n            row['id'] = exemplar.id\n\n\n    def after_import_row(self, row, row_result, row_number=None, **kwargs):\n        # Hack to make sure an updated row gets the correct status for import of a spreadsheet\n        if row_result.import_type == 'update':\n            diff_contains_del_element = row_result.diff != None and any(\n                '\u003C/del\u003E' in string for string in row_result.diff\n            ) or any(\n                '#e6ffe6' in string for string in row_result.diff\n            )\n            if not diff_contains_del_element:\n                row_result.import_type = row_result.IMPORT_TYPE_SKIP\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2y2oprtupnv7s2a9g3h+1em4mu3bfz@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 130,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Import Export Resources",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/62335e70cd3e3f245f60cbbd",
      "pinned": false,
      "pos": 1114111,
      "shortLink": "VcVI8qIN",
      "shortUrl": "https://trello.com/c/VcVI8qIN",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/VcVI8qIN/130-import-export-resources",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6322ccc4188cd40195e512e5",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-09-15T06:57:30.584Z",
      "dateViewedByCreator": null,
      "desc": "django REST framework - https://www.django-rest-framework.org/",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2z320xfp7gyiha9oi5h+22ci98uc9y@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 136,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Django Rest Frame work for API",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6322ccc4188cd40195e512e5",
      "pinned": false,
      "pos": 1179647,
      "shortLink": "xihIDunz",
      "shortUrl": "https://trello.com/c/xihIDunz",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/xihIDunz/136-django-rest-frame-work-for-api",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6322cd046768ca01506fbbe9",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-09-15T06:58:16.558Z",
      "dateViewedByCreator": null,
      "desc": "https://florimondmanca.github.io/djangorestframework-api-key/guide/",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2z3214e1ym15iaiylm1+0c3n9ifa99@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 137,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Django Authorization",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6322cd046768ca01506fbbe9",
      "pinned": false,
      "pos": 1245183,
      "shortLink": "QZ4ZbOhF",
      "shortUrl": "https://trello.com/c/QZ4ZbOhF",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/QZ4ZbOhF/137-django-authorization",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "642d0b787e8ccc12ced55329",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-05-19T13:12:56.095Z",
      "dateViewedByCreator": null,
      "desc": "Error:\n\n```\nCould not fetch URL https://pypi.org/simple/django/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/django/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:992)'))) - skipping\nERROR: Could not find a version that satisfies the requirement Django (from versions: none)\nERROR: No matching distribution found for Django\nCould not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:992)'))) - skipping\n```\n\nSolution:\n\nhttps://jhooq.com/pip-install-connection-error/\n\nI did the following\n\n```\n$ python3 -m pip install Django config --trusted-host pypi.org --trusted-host files.pythonhosted.org\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+307hyrsiv9x79fixtt5+1htz76midz@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [
        "646775c6dfcefdbea2179548"
      ],
      "idList": "61f3adec575c9c33c9c86e73",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 165,
      "idAttachmentCover": null,
      "labels": [
        {
          "id": "646775c6dfcefdbea2179548",
          "idBoard": "610a69cff0f4748a2e5fddcc",
          "idOrganization": "60b9ffda1c42218c5ec7c095",
          "name": "Trused Host error",
          "nodeId": "ari:cloud:trello::label/workspace/60b9ffda1c42218c5ec7c095/646775c6dfcefdbea2179548",
          "color": "red_dark",
          "uses": 1
        }
      ],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error with Installation",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/642d0b787e8ccc12ced55329",
      "pinned": false,
      "pos": 1310719,
      "shortLink": "3au5Bx0O",
      "shortUrl": "https://trello.com/c/3au5Bx0O",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/3au5Bx0O/165-error-with-installation",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "620dff3c1b23498e000cca6d",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-17T07:56:13.518Z",
      "dateViewedByCreator": null,
      "desc": "Site: https://www.codingforentrepreneurs.com/blog/rds-database-serverless-django-zappa-aws-lambda\n\nTo configure zappa_settings.json: `zappa init`",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xx0cmbehrjjphyec19+0axrbzndeg@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6202814e1674783d80fefeca",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 123,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Zappa Setup",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/620dff3c1b23498e000cca6d",
      "pinned": false,
      "pos": 16383.75,
      "shortLink": "x9Y4FI1B",
      "shortUrl": "https://trello.com/c/x9Y4FI1B",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/x9Y4FI1B/123-zappa-setup",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "620288985e3c7e89e1a380f0",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-09T09:31:28.038Z",
      "dateViewedByCreator": null,
      "desc": "## Deploy Zappa\n\n```\n(lon-tech-universe-test-4) $ zappa deploy dev\n```\n\n## Deployment status\n\n```\n(lon-tech-universe-test-4) $ zappa status dev\n```\n\n## Updating Code / Environment\n\n```\n(lon-tech-universe-test-4) $ zappa update dev\n```\n## Un-deploy Project\n\n```\n(lon-tech-universe-test-4) $ zappa undeploy dev\n```\n\n## Log-like tail\n\n```\n(lon-tech-universe-test-4) $ zappa tail dev\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xv9nw2cbn8zxupgi5s+18o2h9mngs@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6202814e1674783d80fefeca",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 116,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Zappa Commands",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/620288985e3c7e89e1a380f0",
      "pinned": false,
      "pos": 32767.5,
      "shortLink": "lypneAJU",
      "shortUrl": "https://trello.com/c/lypneAJU",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/lypneAJU/116-zappa-commands",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "620281527cce6813798d9f3f",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": true,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 1,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-09T08:58:31.717Z",
      "dateViewedByCreator": null,
      "desc": "## Error\n\n```\nDeploying API Gateway..\nWaiting for lambda function [vetest-dev] to be updated...\nError: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 500 response code.\n```\n\nTo check the logs, run\n\n```\n(\u003Cvirtual-environment-name\u003E) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa tail\n```\n\n## Solution\n\n- You need to down grade your Django version\n\n1. Create requirments.txt file \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip freeze \u003E requirements.txt\n```\n\n2. Change Django version in `requirements.txt` from `Django==4.0.2` to `Django==2.1.2`\n\n3. Install dependencies \n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install -r requirements.txt\n```\n\n4. Run\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```\n\n## Result\n\n```\nYour updated Zappa deployment is live!: https://e6dl76w3cd.execute-api.eu-west-2.amazonaws.com/dev\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xv9iapyajn1nkhzpz3+1k6y9j72x9@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6202814e1674783d80fefeca",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 115,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error '/' yielded a 500 response code",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/620281527cce6813798d9f3f",
      "pinned": false,
      "pos": 65535,
      "shortLink": "6WhtF8lt",
      "shortUrl": "https://trello.com/c/6WhtF8lt",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": true,
      "url": "https://trello.com/c/6WhtF8lt/115-error-yielded-a-500-response-code",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "62029fb976d0528a7182900a",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-09T10:36:49.042Z",
      "dateViewedByCreator": null,
      "desc": "### Error\n\n```\nImproperlyConfigured: Error loading psycopg2 module: No module named 'psycopg2._psycopg'\n```\n\n### Solution\n\n```\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ pip install aws-psycopg2\n(lon-tech-universe-test-4) (base) DVL-W60YMHTDF:vetest osborncourtney$ zappa update dev\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xva5odg8cgpv7vvgga+299si5wpag@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6202814e1674783d80fefeca",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 117,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error No module named 'psycopg2._psycopg'",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/62029fb976d0528a7182900a",
      "pinned": false,
      "pos": 196607,
      "shortLink": "TKXAVv9X",
      "shortUrl": "https://trello.com/c/TKXAVv9X",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/TKXAVv9X/117-error-no-module-named-psycopg2psycopg",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "62039aea6f01ce5b47270290",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-09T11:53:30.863Z",
      "dateViewedByCreator": null,
      "desc": "Make sure your main folder (the folder containing settings.py) is in the same directory as the zappa_settings.json\n\n```\nmain/\n     __init__.py\n     settings.py\n     urls.py\n      asgi.py\n      wsgi.py\nmanage.py\nzappa_settings.json\n```\n\nzappa_settings.json file content:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nI tried using this file structure\n\n```\ndjango-app/\n    main/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n    manage.py\nzappa_settings.json\n```\n\nwith this config:\n\n```\n{\n    \"dev\": {\n        \"aws_region\": \"eu-west-2\",\n        \"django_settings\": \"django-app.main.settings\",\n        \"profile_name\": \"lon-tech-universe-dev\",\n        \"project_name\": \"backend\",\n        \"runtime\": \"python3.8\",\n        \"s3_bucket\": \"zappa-dzpbserun\",\n        \"timeout_seconds\": 900,\n        \"manage_roles\": false,\n        \"role_name\": \"lon-tech-universe-dev-ZappaIamRole\",\n        \"role_arn\": \"arn:aws:iam::363321665306:role/lon-tech-universe-dev-ZappaIamRole\",\n        \"vpc_config\" : {\n            \"SubnetIds\": [\"subnet-0d4005f0a1467bc21\", \"subnet-026f4cc1729867c62\", \"subnet-07e6066137abac0c0\"],\n            \"SecurityGroupIds\": [ \"sg-063239ac30f6f197a\" ]\n        }\n    }\n}\n```\n\nBut the result was this error:\n\n```\nModuleNotFoundError: No module named 'main'\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xvfiubra2el2abr4i8+24gstgwvwk@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6202814e1674783d80fefeca",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 119,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: ModuleNotFoundError: No module named 'main'",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/62039aea6f01ce5b47270290",
      "pinned": false,
      "pos": 262143,
      "shortLink": "agTh9JB4",
      "shortUrl": "https://trello.com/c/agTh9JB4",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/agTh9JB4/119-error-modulenotfounderror-no-module-named-main",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "620e0de1e661db6de948e37e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-17T08:58:42.205Z",
      "dateViewedByCreator": null,
      "desc": "ERROR:\n\n```\nTraceback (most recent call last):\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 3422, in handle\n    sys.exit(cli.handle())\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 588, in handle\n    self.dispatch_command(self.command, stage)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 619, in dispatch_command\n    self.load_settings(self.vargs.get(\"settings_file\"))\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/cli.py\", line 2619, in load_settings\n    self.zappa = Zappa(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/core.py\", line 346, in __init__\n    self.load_credentials(boto_session, profile_name)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/zappa/core.py\", line 3573, in load_credentials\n    self.boto_session = boto3.Session(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/boto3/session.py\", line 80, in __init__\n    self._setup_loader()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/boto3/session.py\", line 120, in _setup_loader\n    self._loader = self._session.get_component('data_loader')\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 714, in get_component\n    return self._components.get_component(name)\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 991, in get_component\n    self._components[name] = factory()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 160, in \u003Clambda\u003E\n    lambda: create_loader(self.get_config_variable('data_path')))\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 267, in get_config_variable\n    return self.get_component('config_store').get_config_variable(\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 374, in get_config_variable\n    return provider.provide()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 567, in provide\n    value = provider.provide()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/configprovider.py\", line 655, in provide\n    scoped_config = self._session.get_scoped_config()\n  File \"/Users/osborncourtney/Development/DV/garage/lon-tech-universe/backend/virtualenvironment/lib/python3.8/site-packages/botocore/session.py\", line 367, in get_scoped_config\n    raise ProfileNotFound(profile=profile_name)\nbotocore.exceptions.ProfileNotFound: The config profile (lon-tech-universe-dev2) could not be found\n```\n\nSOULUTION:\n\nhttps://stackoverflow.com/questions/34134879/aws-the-config-profile-myname-could-not-be-found\n\nJust add the profile to your credentials file:\n\n```\nopen ~/.aws/credentials\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xx0nvtj1c9r0zj5aim+175mgtup9z@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6202814e1674783d80fefeca",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 124,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: The config profile (lon-tech-universe-dev2) could not be found",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/620e0de1e661db6de948e37e",
      "pinned": false,
      "pos": 327679,
      "shortLink": "CtgyqbR8",
      "shortUrl": "https://trello.com/c/CtgyqbR8",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/CtgyqbR8/124-error-the-config-profile-lon-tech-universe-dev2-could-not-be-found",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "621605c6a44653541d920e0c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-23T10:01:38.192Z",
      "dateViewedByCreator": null,
      "desc": "\"profile_name\": \"your-profile-name\", // AWS profile credentials to use. Default 'default'. Removing this setting will use the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables instead.\nhttps://github.com/zappa/Zappa",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xy88k0l53lev45gqa4+2ii4s4034a@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6202814e1674783d80fefeca",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 126,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "CI/CD Zappa",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/621605c6a44653541d920e0c",
      "pinned": false,
      "pos": 393215,
      "shortLink": "0hgooqVi",
      "shortUrl": "https://trello.com/c/0hgooqVi",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/0hgooqVi/126-ci-cd-zappa",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6322db426e2774011f04b808",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-09-15T08:00:03.458Z",
      "dateViewedByCreator": null,
      "desc": "Error:\n\n```\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/osborncourtney/Development/DV/garage/lon-garage-meta-exp-backend/virtualenvironment/lib/python3.8/site-packages'\n```\n\nSolution:\n\nRun - \n```\n$ python3.8 -m venv virtualenvironment\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2z32c2o7ibro3g00e88+13k24qgjqz@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6202814e1674783d80fefeca",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 138,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "FileNotFoundError: [Errno 2] No such file or directory: '/Users/osborncourtney/Development/DV/garage/lon-garage-meta-exp-backend/virtualenvironment/lib/python3.8/site-packages'",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6322db426e2774011f04b808",
      "pinned": false,
      "pos": 458751,
      "shortLink": "dvnMS40I",
      "shortUrl": "https://trello.com/c/dvnMS40I",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/dvnMS40I/138-filenotfounderror-errno-2-no-such-file-or-directory-users-osborncourtney-development-dv-garage-lon-garage-meta-exp-backend-virtu",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6322f3e5476efc0194eae49e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-09-15T09:44:23.969Z",
      "dateViewedByCreator": null,
      "desc": "Error:\n\n```\nzappa Runtime.ImportModuleError: Unable to import module 'handler': attempted relative import with no known parent package Traceback\n```\n\nSolution:\n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2z32v0p2jxkas0taefy+0c7ongw84u@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6202814e1674783d80fefeca",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 139,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "zappa Runtime.ImportModuleError: Unable to import module 'handler': attempted relative import with no known parent package Traceback",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6322f3e5476efc0194eae49e",
      "pinned": false,
      "pos": 524287,
      "shortLink": "8sPeyUyU",
      "shortUrl": "https://trello.com/c/8sPeyUyU",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/8sPeyUyU/139-zappa-runtimeimportmoduleerror-unable-to-import-module-handler-attempted-relative-import-with-no-known-parent-package-traceback",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f3af37eaa32e497b10b4d6",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-28T08:58:33.672Z",
      "dateViewedByCreator": null,
      "desc": "ERROR:\n\n```\nError: Failure while executing; `/bin/launchctl bootstrap gui/501 /Users/osborncourtney/Library/LaunchAgents/homebrew.mxcl.postgresql.plist` exited with 5.\n```\n\nRan:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nGot\n\n```\nFailure while executing; `/usr/local/opt/postgresql/bin/pg_upgrade\n```\n\nSOLUTION:\n\nRun:\n\n```\n$ brew services stop postgresql\n$ brew postgresql-upgrade-database\n$ brew services start postgresql\n```\n\nhttps://stackoverflow.com/questions/52539100/why-did-this-postgres-database-upgrade-fail\n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt0gn5j4crpfm3bzrq+2jc9pwfm9l@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3af27997ed6344c23da9a",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 89,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: Failure while executing;",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f3af37eaa32e497b10b4d6",
      "pinned": false,
      "pos": 65535,
      "shortLink": "RCLDIL9T",
      "shortUrl": "https://trello.com/c/RCLDIL9T",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/RCLDIL9T/89-error-failure-while-executing",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f3b06d3cc6e730629a9eef",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": true,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 1,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-04-05T07:14:23.063Z",
      "dateViewedByCreator": null,
      "desc": "Install postgresql:\n\n```\n$ brew install postgresql@12\n```\n\nStart db:\n\n```\n$ brew services start postgresql@12\n```\n\nStop db:\n\n```\n$ brew services stop postgresql@12\n```\n\nUpgrade db:\n\n```\n$ brew postgresql-upgrade-database\n```\n\nConnect to see all DBs:  \n\n```\n$ psql postgres\n```\n\n\nCreate user\n\n```\n$ createuser -Ps \u003Cuser name\u003E\n```\n\nCreate db\n\n- User must be created first\n\n```\n$ createdb -O \u003Cuser name\u003E \u003Cdatabase name\u003E\n```\n\nAccess db\n\n- DB needs to be created first\n\n```\n$ psql -d \u003Cdb name\u003E -U \u003Cdb password\u003E -Ws\n```\n\nMigrate db\n\n```\n$ python manage.py migrate\n```\n\nMigration files\n\n```\n$ python manage.py makemigrations\n```\n\nCreate super user\n\n```\n$ createuser -Ps sports_api_db_root_user\n```\n\n\nYou can see what other versions are available by running\n\n```\n$ brew search postgres\n```\n\nYou can see which version the current latest will be by running\n\n```\n$ brew edit postgresql\n```\n\nhttps://wiki.postgresql.org/wiki/Homebrew",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt0hklqcm9dfv7o4bz+2206bfg2l7@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3af27997ed6344c23da9a",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 90,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Makefile: Access and Setup Postgres Commands",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f3b06d3cc6e730629a9eef",
      "pinned": false,
      "pos": 131071,
      "shortLink": "TQJkyQNA",
      "shortUrl": "https://trello.com/c/TQJkyQNA",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": true,
      "url": "https://trello.com/c/TQJkyQNA/90-makefile-access-and-setup-postgres-commands",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f3b1a5bafa5d65a0703000",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-28T10:36:32.674Z",
      "dateViewedByCreator": null,
      "desc": "Connect to see all DBs:  \n\n```\n$ psql postgres\n```\n\nList all databases:\n\n```\n# \\l\n```\n\nConnect to database: \n\n```\n# \\c \u003Cdatabase name\u003E\n```\n\nShow tables:\n\n```\n# \\dt\n```\n\nMore information of tables: \n\n```\n# \\dt+\n```\n\nSee table:\n\n```\n# select * from table name;\n```\n\n- DO NOT FORGET THE SEMI COLON -\u003E or you won't see anything\n\nQuit:\n\n```\n#\\q\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt0iiea5ft2vc0bbpc+1jdr0doafd@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3af27997ed6344c23da9a",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 91,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Database commands",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f3b1a5bafa5d65a0703000",
      "pinned": false,
      "pos": 196607,
      "shortLink": "9XJgbnvX",
      "shortUrl": "https://trello.com/c/9XJgbnvX",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/9XJgbnvX/91-database-commands",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61fa9f0f9782d05f75521bc1",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-02T15:11:15.572Z",
      "dateViewedByCreator": null,
      "desc": "https://www.tutorialspoint.com/python_data_access/python_postgresql_create_table.htm",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xu2e9dzqa26wbwwx4x+092ag5pepn@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3af27997ed6344c23da9a",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 110,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Postgres Database information",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61fa9f0f9782d05f75521bc1",
      "pinned": false,
      "pos": 262143,
      "shortLink": "XhhipqxK",
      "shortUrl": "https://trello.com/c/XhhipqxK",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/XhhipqxK/110-postgres-database-information",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61fa9f1ee4cb4739f82cb66c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-02T15:13:29.789Z",
      "dateViewedByCreator": null,
      "desc": "\nMakefile\nmake drop-all-tables\n\n```\ndrop-all-tables\n   python scripts/drop-all-tables.py\n```\n\nscripts/drop-all-tables.py\n\n```\nimport psycopg2\n\nconn = psycopg2.connect(\n   database=\"meta-universe-db\", user='meta-universe-root-user', password='tech-universe-password', host='127.0.0.1', port= '5432'\n)\n\ncursor = conn.cursor()\ncursor.execute(\"DROP TABLE IF EXISTS buisness_opportunity_buisnessopportunitymodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS xaxis_xaxismodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS yaxis_yaxismodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS tech_techmodel CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS exemplars_exemplarmodel_tech CASCADE\")\ncursor.execute(\"DROP TABLE IF EXISTS exemplars_exemplarmodel CASCADE\")\n\nprint(\"Tables DROPPED successfully........\")\nconn.commit()\nconn.close()\n\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xu2eb1ka9fotmh1kdo+1ikfdmtf6s@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3af27997ed6344c23da9a",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 111,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Create drop table script",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61fa9f1ee4cb4739f82cb66c",
      "pinned": false,
      "pos": 327679,
      "shortLink": "wWksjrel",
      "shortUrl": "https://trello.com/c/wWksjrel",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/wWksjrel/111-create-drop-table-script",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6202aba2108863738ca26291",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": false,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-08T17:43:23.823Z",
      "dateViewedByCreator": null,
      "desc": "",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xvaeu1spoh8srm94sx+0gkcvtxsmr@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3af27997ed6344c23da9a",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 118,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "DO NOT USE DATASHS IN THE DB NAME",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6202aba2108863738ca26291",
      "pinned": false,
      "pos": 393215,
      "shortLink": "VLtxFVXI",
      "shortUrl": "https://trello.com/c/VLtxFVXI",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/VLtxFVXI/118-do-not-use-datashs-in-the-db-name",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "622f3095edf5fc3b64b1a994",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-03-14T12:23:18.603Z",
      "dateViewedByCreator": null,
      "desc": "ERROR:\n\n```\n RuntimeWarning: Got an error checking a consistent migration history performed for database connection 'default': connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n```\n\nSOLUTION:\n\nRun:\n\n```\nbrew services start postgres\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2y21v22snvf9f46mo44+0t1vvpskau@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f3af27997ed6344c23da9a",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 127,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Error: Is the server running on that host and accepting TCP/IP connections?",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/622f3095edf5fc3b64b1a994",
      "pinned": false,
      "pos": 458751,
      "shortLink": "KKfGOJrJ",
      "shortUrl": "https://trello.com/c/KKfGOJrJ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/KKfGOJrJ/127-error-is-the-server-running-on-that-host-and-accepting-tcp-ip-connections",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f40225e1c29e6a4ce854a3",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-01T08:14:05.798Z",
      "dateViewedByCreator": null,
      "desc": "# Database Setup Locally\n\nInstall postgresql if you don't have it already:\n\n```\n$ make install-postgresql\n```\n\nCreate a database user\n\n```\n$ make create_db_user\n```\n\n- Add password created in this step to the .env file\n\nCreate a database with that user\n\n```\n$ make create_db\n```\n\nAccess the db:\n\n```\n$ make access_db\n```\n\n- Password is the one used when creating the user\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt28eysodf4kcb7ov7+14c8d911j3@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f40215fcb06742bdbdab94",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 96,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Database setup locally Readme",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f40225e1c29e6a4ce854a3",
      "pinned": false,
      "pos": 65535,
      "shortLink": "kdrh8NGK",
      "shortUrl": "https://trello.com/c/kdrh8NGK",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/kdrh8NGK/96-database-setup-locally-readme",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f40304a78572677bf0a543",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-28T14:51:53.475Z",
      "dateViewedByCreator": null,
      "desc": "# .example.env File\n\n```\nDATABASE_NAME=\nDATABASE_USER=\nDATABASE_PASSWORD=\nDATABASE_HOST=\nDATABASE_PORT=\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt293226gsqxr1xxkz+12ocb4ao5f@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f40215fcb06742bdbdab94",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 97,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": ".example.env.file",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f40304a78572677bf0a543",
      "pinned": false,
      "pos": 131071,
      "shortLink": "1malVU43",
      "shortUrl": "https://trello.com/c/1malVU43",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/1malVU43/97-exampleenvfile",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f403fe0ce1be817a855b6c",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-28T14:56:03.615Z",
      "dateViewedByCreator": null,
      "desc": "# Postgresql Commands\n\nHere are some of the basic \n\nTo see all databases\n\n```\n$ psql postgres\n```\n\nList all databases:\n\n```\n# \\l\n```\n\nConnect to database:\n\n```\n# \\c \u003Cdatabase name\u003E\n```\n\nShow tables:\n\n```\n# \\dt\n```\n\nMore information of tables:\n\n```\n# \\dt+\n```\n\nQuit:\n\n```\n#\\q\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt29u0yy60t9yg6lpo+0df7j4dtjo@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f40215fcb06742bdbdab94",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 98,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Postgresql Command Readme",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f403fe0ce1be817a855b6c",
      "pinned": false,
      "pos": 196607,
      "shortLink": "En1dKXxC",
      "shortUrl": "https://trello.com/c/En1dKXxC",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/En1dKXxC/98-postgresql-command-readme",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f40431b090b54f7d38ac68",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-01-28T14:56:55.817Z",
      "dateViewedByCreator": null,
      "desc": "# Django App\n\n## Running Locally\n\n1. [Setup Postgresql Database Locally](./docs/DATABASE_SETUP.md)\n2. [Run Migration](#run-migration)\n3. [Create Super](#create-super-user)\n4. [Run Server](#run-server)\n\n### Run Migration\n\n```\n$ make migrate\n```\n\n### Create Super User\n\n- This will allow you access to the admin panel\n\n```\n$ make create_su\n```\n\n### Run Server\n\n```\n$ make run\n```\n\n- Go to http://127.0.0.1:8000/admin\n\n\n## Using Production\n\nUrl is currently: https://gyxb0e5ab7.execute-api.eu-west-2.amazonaws.com/production/\n\n### Admin\n\nhttps://gyxb0e5ab7.execute-api.eu-west-2.amazonaws.com/production/admin\n\n- Get user name and password from garage 1password\n\n### Endpoints\n\nhttps://gyxb0e5ab7.execute-api.eu-west-2.amazonaws.com/production/\n\nMethod: GET\nHeaders:\n\tAuthorization: Api-Key \u003CApi Key\u003E\n\nApi Key\n\n- You can generate on in django admin",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xt29zm0706rzdsf620+16ojm6n4xj@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f40215fcb06742bdbdab94",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 99,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Readme Django Postgresql Template",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f40431b090b54f7d38ac68",
      "pinned": false,
      "pos": 262143,
      "shortLink": "Gr37HeKp",
      "shortUrl": "https://trello.com/c/Gr37HeKp",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/Gr37HeKp/99-readme-django-postgresql-template",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61f934aba9132a0368dff968",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-01T13:33:54.301Z",
      "dateViewedByCreator": null,
      "desc": "https://support.microsoft.com/en-us/office/create-a-drop-down-list-7693307a-59ef-400a-b769-c5402dce407b#ID0EBBH=macOS",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xtunl0g4qv5gm593zc+0pbxzrgd0s@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f934a2cb019a8417dccc3d",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 106,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Create a drop down list",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61f934aba9132a0368dff968",
      "pinned": false,
      "pos": 65535,
      "shortLink": "UDwLltmc",
      "shortUrl": "https://trello.com/c/UDwLltmc",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/UDwLltmc/106-create-a-drop-down-list",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61fa2e4b19fcd6766fcb2927",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-02T07:14:30.368Z",
      "dateViewedByCreator": null,
      "desc": "To use Microsoft Visual Basic you need a developer tab, to get this, do the following:\n\n-\u003E Click Excel on top bar (next to the apple icon)\n-\u003E Click preferences\n-\u003E Click Ribbon\n-\u003E Tick the box developer\n-\u003E You should now see it on the bar with home, insert ect.\n     (If you don't see it move it up the list)\n-\u003E Click save \n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xtzzjjl30qvsjymmg7+1v7cimwpes@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61f934a2cb019a8417dccc3d",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 108,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Add Developer Tab & Access Microsoft Visual Basic",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61fa2e4b19fcd6766fcb2927",
      "pinned": false,
      "pos": 131071,
      "shortLink": "ML5dw40D",
      "shortUrl": "https://trello.com/c/ML5dw40D",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/ML5dw40D/108-add-developer-tab-access-microsoft-visual-basic",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "61fa4a6effefb06e4d02c43a",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-02-02T10:34:34.942Z",
      "dateViewedByCreator": null,
      "desc": "Use the following code:\n\n```\nfunction onEdit(e){\n  console.log(\"old\", e.oldValue)\n  console.log(\"value\", e.value)\n  if (e.range.columnStart !== 7 ) {\n    return;\n  }\n  if (e.value && e.oldValue && e.value === e.oldValue ){\n    return;\n  }\n  if (e.value && e.oldValue && !e.oldValue.includes(e.value)){\n    console.log(\"inside here\")\n    e.range.setValue(`${e.oldValue}, ${e.value}`);\n  } else if (e.oldValue && e.oldValue.includes(e.value)) {\n    console.log(\"OR inside here\")\n    if (e.oldValue.includes(e.value)) {\n      return\n    }\n    \n    e.range.setValue(e.value);\n    \n  }\n}\n```\n\nVideo: https://www.youtube.com/watch?v=cBRD8bZbT2k\n\nCode Notes: \n\n- **First If statement says which column it affects - update this if the column changes**\n\nNotes:\n\n- It is not yet perfect\n- To delete one value, you will have to delete all of them and start again\n- It takes a little time to load the change so be patient\n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2xu0l6kpcv3qzin7516+2j5yodpbdm@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "61fa4a511fac4f4cbaf83b8c",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 109,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "To select multiple values from drop down",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/61fa4a6effefb06e4d02c43a",
      "pinned": false,
      "pos": 65535,
      "shortLink": "x8LJx3St",
      "shortUrl": "https://trello.com/c/x8LJx3St",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/x8LJx3St/109-to-select-multiple-values-from-drop-down",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6267da0944c47817fef50d8e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-04-26T11:43:41.121Z",
      "dateViewedByCreator": null,
      "desc": "1. zappa undeploy production\n2. Go to terraform cloud -\u003E settings -\u003E destruction and deletion -\u003E click button `queue destroy plan` -\u003E destroy the infrastructure",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2yanppfl9f968mms9la+24sbnqde4h@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6267d9ffc041996663dbd2f4",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 133,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Django + Zappa + AWS",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6267da0944c47817fef50d8e",
      "pinned": false,
      "pos": 65535,
      "shortLink": "szqrqMxZ",
      "shortUrl": "https://trello.com/c/szqrqMxZ",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/szqrqMxZ/133-django-zappa-aws",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6331a5ea873c1d1b948ed844",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2022-09-26T13:16:45.064Z",
      "dateViewedByCreator": null,
      "desc": "Error:\n\n```\nError: EPERM: operation not permitted, unlink '/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/.build/node_modules'\n      at Object.unlinkSync (node:fs:1780:3)\n      at TypeScriptPlugin.\u003Canonymous\u003E (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:197:24)\n      at Generator.next (\u003Canonymous\u003E)\n      at /Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:8:71\n      at new Promise (\u003Canonymous\u003E)\n      at __awaiter (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:4:12)\n      at TypeScriptPlugin.copyDependencies (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:191:16)\n      at TypeScriptPlugin.\u003Canonymous\u003E (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:60:28)\n      at Generator.next (\u003Canonymous\u003E)\n      at fulfilled (/Users/osborncourtney/Development/DV/garage/lon-garage-theia/backend/websocket-api/node_modules/serverless-plugin-typescript/dist/src/index.js:5:58)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n     For debugging logs, run again after setting the \"SLS_DEBUG=*\" environment variable.\n```\n\n- Tnis came wih deploying theia websocket \n\n\nSOLUTION:\n\n```\nI deleted the websocket api build file that was created when trying to serverless deploy the websocket api\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+2z5b802n1b4x9khbz9g+1mlelpgqfm@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6331a5ddff4a2f030a90f568",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 140,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "EPERM: operation not permitted, unlink \u003Cpath\u003E",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6331a5ea873c1d1b948ed844",
      "pinned": false,
      "pos": 65535,
      "shortLink": "fYGrnCvD",
      "shortUrl": "https://trello.com/c/fYGrnCvD",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/fYGrnCvD/140-eperm-operation-not-permitted-unlink-path",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6423e4b7c5ecd2fa31c80f7e",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-09-20T10:57:24.881Z",
      "dateViewedByCreator": null,
      "desc": "$ brew install python3\n\n- This will also install pip3\n- $ which pip3 python3\n  /usr/bin/pip3\n  /usr/bin/python3\n- Use pip3 to install packages",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3063x79s2evjsaxsnlq+1iqis1p35k@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6423e4b0badd3cd8072134aa",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 148,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup Python",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6423e4b7c5ecd2fa31c80f7e",
      "pinned": false,
      "pos": 65535,
      "shortLink": "zUXNrrqG",
      "shortUrl": "https://trello.com/c/zUXNrrqG",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/zUXNrrqG/148-setup-python",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6423e4bbd385d651d9bd0f62",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": false,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-29T07:11:55.948Z",
      "dateViewedByCreator": null,
      "desc": "",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3063x7pk3yo6nulro0y+27nqvhe9su@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6423e4b0badd3cd8072134aa",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 149,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup Node",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6423e4bbd385d651d9bd0f62",
      "pinned": false,
      "pos": 131071,
      "shortLink": "u8z1C5vy",
      "shortUrl": "https://trello.com/c/u8z1C5vy",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/u8z1C5vy/149-setup-node",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6423e4c165aa3126b0aabc37",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-29T07:38:29.881Z",
      "dateViewedByCreator": null,
      "desc": "Install\n\n```\n$ brew tap hashicorp/tap\n$ brew install hashicorp/tap/terraform\n$ terraform -help\n```\n\nmain.tf\n\n```\nterraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~\u003E 4.16\"\n    }\n  }\n\n  required_version = \"\u003E= 1.2.0\"\n}\n\nprovider \"aws\" {\n  region  = var.AWS_REGION\n}\n```\n\nvariables.tf \n\n```\nvariable \"AWS_REGION\" {\n  default = \"eu-west-2\"\n}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3063x8b8v5q9lte6q7r+22hwv2d8z6@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6423e4b0badd3cd8072134aa",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 150,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup Terraform",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6423e4c165aa3126b0aabc37",
      "pinned": false,
      "pos": 196607,
      "shortLink": "XyWMobVP",
      "shortUrl": "https://trello.com/c/XyWMobVP",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/XyWMobVP/150-setup-terraform",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6423e4ca3e59d78cc8d22fac",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-29T08:07:48.462Z",
      "dateViewedByCreator": null,
      "desc": "Install:\n\n```\n$ brew install --cask atom\n```\n\nSnippets:\n\n```\n'.source.go':\n    'print':\n      'prefix': 'ln'\n      'body': \"\"\"fmt.Println(\"================\")\n              fmt.Println(\"$1\", $1);\n              fmt.Println(\"================\")\n              \"\"\"\n\n'.source.python':\n    'print':\n      'prefix': 'pri'\n      'body': \"\"\"print('================')\n              print(\"$1\", $1)\n              print('================')\n              \"\"\"\n\n'.source.js':\n    'Console log Block':\n        'prefix': 'clb'\n        'body': \"\"\"console.log('================');\n                console.log(\"$1\", $1);\n                console.log('================');\n                \"\"\"\n    'Console log':\n        'prefix': 'cl'\n        'body': 'console.log(\"$1\");'\n    'Console log dupe':\n        'prefix': 'cll'\n        'body': 'console.log(\"$1\", $1);'\n    'Describe Block':\n        'prefix': 'desc'\n        \"body\": \"\"\"describe('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'beforeEach':\n        'prefix': 'befo'\n        \"body\": \"\"\"beforeEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'afterEach':\n        'prefix': 'afte'\n        \"body\": \"\"\"afterEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'it':\n        'prefix': 'it'\n        \"body\": \"\"\"it('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'context':\n        'prefix': 'cont'\n        \"body\": \"\"\"context('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n\n'.source.ts':\n    'Console log Block':\n        'prefix': 'clb'\n        'body': \"\"\"console.log('================')\n                console.log(\"$1\", $1);\n                console.log('================')\n                \"\"\"\n    'Console log':\n        'prefix': 'cl'\n        'body': 'console.log(\"$1\");'\n    'Console log dupe':\n        'prefix': 'cll'\n        'body': 'console.log(\"$1\", $1);'\n    'Describe Block':\n        'prefix': 'desc'\n        \"body\": \"\"\"describe('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'beforeEach':\n        'prefix': 'befo'\n        \"body\": \"\"\"beforeEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'afterEach':\n        'prefix': 'afte'\n        \"body\": \"\"\"afterEach(() =\u003E {\n                \\t$1\n                });\n                \"\"\"\n    'it':\n        'prefix': 'it'\n        \"body\": \"\"\"it('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n    'context':\n        'prefix': 'cont'\n        \"body\": \"\"\"context('$1', () =\u003E {\n                \\t$2\n                });\n                \"\"\"\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3063x99oouhiqq0hfak+202bspvq8j@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6423e4b0badd3cd8072134aa",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 152,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup Atom",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6423e4ca3e59d78cc8d22fac",
      "pinned": false,
      "pos": 229375,
      "shortLink": "e1j1Umro",
      "shortUrl": "https://trello.com/c/e1j1Umro",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/e1j1Umro/152-setup-atom",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6423e61fb9bd3659fa5f0656",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-29T08:07:49.783Z",
      "dateViewedByCreator": null,
      "desc": "Install AWS\n\n```\ncurl \"https://awscli.amazonaws.com/AWSCLIV2.pkg\" -o \"AWSCLIV2.pkg\"\nsudo installer -pkg AWSCLIV2.pkg -target /\nwhich aws\naws --version\n```\n\nConfiguration\n\n```\n$ aws configure\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3063ya73aj4a4irnjo6+0jydsvjw44@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6423e4b0badd3cd8072134aa",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 153,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup AWS",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6423e61fb9bd3659fa5f0656",
      "pinned": false,
      "pos": 245759,
      "shortLink": "0fhwnGy4",
      "shortUrl": "https://trello.com/c/0fhwnGy4",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/0fhwnGy4/153-setup-aws",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6423e4c5f8d0df94d8294093",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": false,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-29T07:12:05.792Z",
      "dateViewedByCreator": null,
      "desc": "",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3063x8t20upqhhfmzkj+0ymhtc2qp8@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6423e4b0badd3cd8072134aa",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 151,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Setup Postman",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6423e4c5f8d0df94d8294093",
      "pinned": false,
      "pos": 262143,
      "shortLink": "grsqBURM",
      "shortUrl": "https://trello.com/c/grsqBURM",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/grsqBURM/151-setup-postman",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "64244039ba84da32da262e03",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-29T13:42:21.369Z",
      "dateViewedByCreator": null,
      "desc": "https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+3065vkk50c0mirdnzsz+0bvcek8zmx@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "6423e4b0badd3cd8072134aa",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 154,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Add Github SSH",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/64244039ba84da32da262e03",
      "pinned": false,
      "pos": 327679,
      "shortLink": "bbjQuXYm",
      "shortUrl": "https://trello.com/c/bbjQuXYm",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/bbjQuXYm/154-add-github-ssh",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "6425438dad2f9ece4388fe71",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-03-30T08:09:42.433Z",
      "dateViewedByCreator": null,
      "desc": "1. Add Node.js\n\n```\n$ brew install nodejs\n```\n\n2. Add React\n\nhttps://create-react-app.dev/docs/getting-started/\n\n```\n$ npx create-react-app my-app\n$ cd my-app\n$ npm start\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+306bezrkvum7y2lapv5+050czjsx3m@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "64254384968afc032fcf7ead",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 157,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Install",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/6425438dad2f9ece4388fe71",
      "pinned": false,
      "pos": 65535,
      "shortLink": "DVotJpW4",
      "shortUrl": "https://trello.com/c/DVotJpW4",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/DVotJpW4/157-install",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "642c270800f305c806b80f31",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-04-04T13:33:41.687Z",
      "dateViewedByCreator": null,
      "desc": "```\n$ var a = document.querySelectorAll('input[type=checkbox]')\n$ for (let i = 0; i \u003C a.length; i++) {\n    console.log(a[i]);\n    a[i].checked = false;\n}\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+307d33p6v6ydh8jynn5+0o3htk2mni@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "642c26f935ce7dae8e5b14a0",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 164,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Remove all checked inputs",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/642c270800f305c806b80f31",
      "pinned": false,
      "pos": 65535,
      "shortLink": "af0QyaFv",
      "shortUrl": "https://trello.com/c/af0QyaFv",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/af0QyaFv/164-remove-all-checked-inputs",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "642d292267ad071d3527532a",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-04-05T08:09:35.518Z",
      "dateViewedByCreator": null,
      "desc": "https://devopscube.com/install-configure-postgresql-amazon-linux/\n\n",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+307ilkzz9pq3jy404kq+29122vlwn2@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "642d290e6ec6d0a80a6b0260",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 166,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Install and Run PostgreSQL",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/642d292267ad071d3527532a",
      "pinned": false,
      "pos": 65535,
      "shortLink": "7gCHgTXa",
      "shortUrl": "https://trello.com/c/7gCHgTXa",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/7gCHgTXa/166-install-and-run-postgresql",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "646f7403e5ee14438b40df2f",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-05-25T14:43:42.354Z",
      "dateViewedByCreator": null,
      "desc": "In Tests add the following\n\n```\nvar jsonData = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"token\", jsonData.accessToken);\npostman.setEnvironmentVariable(\"refreshToken\", jsonData.refreshToken);\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+30hl452d3a6yul2xesv+04zotd91sq@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "646f73f9459c575bb133fc61",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 173,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Set response values to variables",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/646f7403e5ee14438b40df2f",
      "pinned": false,
      "pos": 65535,
      "shortLink": "FCWYiD6l",
      "shortUrl": "https://trello.com/c/FCWYiD6l",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/FCWYiD6l/173-set-response-values-to-variables",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "65128ecd9bcb9347c8df86e7",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 0,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-09-26T08:01:09.734Z",
      "dateViewedByCreator": null,
      "desc": "- [Prompt Versioning](https://github.com/langchain-ai/langsmith-cookbook/blob/main/hub-examples/retrieval-qa-chain-versioned/prompt-versioning.ipynb \"‌\")\n- [Unit Testing](https://github.com/langchain-ai/langsmith-cookbook/tree/main/testing-examples/pytest-ut \"‌\")\n- [Question&Answer correctness](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/qa-correctness/qa-correctness.ipynb \"‌\")\n- [Comparing chains](https://github.com/langchain-ai/langsmith-cookbook/blob/main/testing-examples/comparing-runs/comparing-qa.ipynb \"‌\")\n- [Blog](https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed \"‌\")\n- [https://python.langchain.com/docs/use_cases/question_answering/](https://python.langchain.com/docs/use_cases/question_answering/ \"smartCard-inline\")",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+316d1g6t4711qdu21nr+10qlnjunag@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "65128ec0aae7eb3b6d96ed9e",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 179,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Some useful links",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/65128ecd9bcb9347c8df86e7",
      "pinned": false,
      "pos": 65535,
      "shortLink": "hD7lcXiB",
      "shortUrl": "https://trello.com/c/hD7lcXiB",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": false,
      "url": "https://trello.com/c/hD7lcXiB/179-some-useful-links",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    },
    {
      "id": "65142d10578c7ab98a424e63",
      "address": null,
      "badges": {
        "attachmentsByType": {
          "trello": {
            "board": 0,
            "card": 0
          }
        },
        "externalSource": null,
        "location": false,
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": true,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "checkItemsEarliestDue": null,
        "comments": 1,
        "attachments": 0,
        "description": true,
        "due": null,
        "dueComplete": false,
        "start": null,
        "lastUpdatedByAi": false
      },
      "checkItemStates": [],
      "closed": false,
      "coordinates": null,
      "creationMethod": null,
      "creationMethodError": null,
      "dueComplete": false,
      "dateLastActivity": "2023-09-27T16:18:10.232Z",
      "dateViewedByCreator": null,
      "desc": "```\nname: Pull-Request checks\non:\n  pull_request:\n    branches:\n      - main\n\njobs:\n  changes:\n    runs-on: ubuntu-latest\n    outputs:\n      app: ${{ steps.app.outputs.any_changed }}\n    steps:\n    - uses: actions/checkout@v2\n      with:\n        fetch-depth: 0\n    - id: app\n      uses: tj-actions/changed-files@v24\n      with:\n        files: app\n  lint:\n    needs: [changes]\n    name: Lint\n    runs-on: ubuntu-latest\n    if: needs.changes.outputs.app == 'true'\n    steps:\n      - uses: actions/checkout@v2\n      - name: Lint Code Base\n        uses: github/super-linter/slim@v4.9.0\n        env:\n          VALIDATE_ALL_CODEBASE: false\n          FILTER_REGEX_INCLUDE: .*app/.*\n          DEFAULT_BRANCH: main\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          # local pre-commit isort was disagreeing with this workflow's isort. Can dig deeper at a later date, but for now just skip isort checks\n          VALIDATE_PYTHON_ISORT: false\n  tests:\n    needs: [changes]\n    name: Application Tests\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        python-version: [\"3.11.3\"]\n      fail-fast: false\n    if: needs.changes.outputs.app == 'true'\n    steps:\n      - uses: actions/checkout@v2\n\n      - name: Setup python, poetry and make\n        uses: Ki-Insurance/setup-python-build-env@v0\n        with:\n          python-version: ${{ matrix.python-version }}\n          poetry-version: 1.3.2\n      - name: install build tools\n        run: sudo apt-get update && sudo apt-get install -y build-essential\n\n      - name: Install requirements from lock\n        run: |\n          cd app\n          pip install setuptools\n          poetry install\n\n      - name: Test with pytest\n        run: |\n          cd app\n          pip install pytest\n          make test\n\n\n  k8s:\n    needs: [changes]\n    uses: Ki-Insurance/github-workflows/.github/workflows/r-k8s-pr.yaml@v0\n    with:\n      overlays_root: 'infra/k8s/overlays'\n      gh_linter_filter_regex_include: '.*infra/k8s/.*'\n```",
      "descData": {
        "emoji": {

        }
      },
      "due": null,
      "dueReminder": null,
      "email": "courtneyosbor+2w84s1qbytilb5h6qaj+316lw0jd0g8qrb3lbvn+2j11kcio8u@boards.trello.com",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idChecklists": [],
      "idLabels": [],
      "idList": "65142cfbaed2c8824153a2aa",
      "idMemberCreator": null,
      "idMembers": [],
      "idMembersVoted": [],
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "idShort": 180,
      "idAttachmentCover": null,
      "labels": [],
      "limits": {
        "attachments": {
          "perCard": {
            "status": "ok",
            "disableAt": 1000,
            "warnAt": 800
          }
        },
        "checklists": {
          "perCard": {
            "status": "ok",
            "disableAt": 500,
            "warnAt": 400
          }
        },
        "stickers": {
          "perCard": {
            "status": "ok",
            "disableAt": 70,
            "warnAt": 56
          }
        }
      },
      "locationName": null,
      "manualCoverAttachment": false,
      "name": "Python, Poetry, Make, Pytest, Pyenv workflow",
      "nodeId": "ari:cloud:trello::card/workspace/60b9ffda1c42218c5ec7c095/65142d10578c7ab98a424e63",
      "pinned": false,
      "pos": 65535,
      "shortLink": "zjq3UMp8",
      "shortUrl": "https://trello.com/c/zjq3UMp8",
      "sourceEmail": null,
      "staticMapUrl": null,
      "start": null,
      "subscribed": true,
      "url": "https://trello.com/c/zjq3UMp8/180-python-poetry-make-pytest-pyenv-workflow",
      "cover": {
        "idAttachment": null,
        "color": null,
        "idUploadedBackground": null,
        "size": "normal",
        "brightness": "dark",
        "idPlugin": null
      },
      "isTemplate": false,
      "cardRole": null,
      "attachments": [],
      "pluginData": [],
      "customFieldItems": []
    }
  ],
  "labels": [
    {
      "id": "6426b5ba47ac53ad37c56eec",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "name": "EC2",
      "color": "sky",
      "uses": 3
    },
    {
      "id": "63fe127d12ffbb42b9e7de2c",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "name": "S3",
      "color": "yellow_light",
      "uses": 2
    },
    {
      "id": "646775c6dfcefdbea2179548",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "name": "Trused Host error",
      "color": "red_dark",
      "uses": 1
    },
    {
      "id": "610a69cfc8246138301fa824",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "name": "",
      "color": "blue",
      "uses": 0
    },
    {
      "id": "610a69cfc8246138301fa817",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "name": "",
      "color": "green",
      "uses": 0
    },
    {
      "id": "610a69cfc8246138301fa81c",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "name": "",
      "color": "orange",
      "uses": 0
    },
    {
      "id": "610a69cfc8246138301fa822",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "name": "",
      "color": "purple",
      "uses": 0
    },
    {
      "id": "610a69cfc8246138301fa820",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "name": "",
      "color": "red",
      "uses": 0
    },
    {
      "id": "610a69cfc8246138301fa819",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "name": "",
      "color": "yellow",
      "uses": 0
    }
  ],
  "lists": [
    {
      "id": "61f8f28c5d8a9d60dd0e65ee",
      "name": "Setup",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 16383.75,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61f8f28c5d8a9d60dd0e65ee"
    },
    {
      "id": "610a736df1ae652f648219f3",
      "name": "Installations",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 32767.5,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/610a736df1ae652f648219f3"
    },
    {
      "id": "610a69d8c91d358f7cd6c493",
      "name": "IoT Setup",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 65535,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/610a69d8c91d358f7cd6c493"
    },
    {
      "id": "61ee7695680ed5898b0af044",
      "name": "Raspberry Pi",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 98303,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61ee7695680ed5898b0af044"
    },
    {
      "id": "610a75fead08eb401af18e5b",
      "name": "Command Line Interface",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 131071,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/610a75fead08eb401af18e5b"
    },
    {
      "id": "610a940f9238581891cb9066",
      "name": "Useful Links",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 196607,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/610a940f9238581891cb9066"
    },
    {
      "id": "610b994fdd9e5b799988a727",
      "name": "AWS",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 262143,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/610b994fdd9e5b799988a727"
    },
    {
      "id": "6111265b0943137728c9c063",
      "name": "Terraform",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 294911,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/6111265b0943137728c9c063"
    },
    {
      "id": "610d59d4612b7e8a333d012f",
      "name": "Projects",
      "closed": true,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 327679,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/610d59d4612b7e8a333d012f"
    },
    {
      "id": "6151ca142767bc48aeecabef",
      "name": "Golang",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 393215,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/6151ca142767bc48aeecabef"
    },
    {
      "id": "6163eeac70d82e5e92c593d8",
      "name": "Computer Vision",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 458751,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/6163eeac70d82e5e92c593d8"
    },
    {
      "id": "61696ca4dced65399ab88b87",
      "name": "Docker",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 524287,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61696ca4dced65399ab88b87"
    },
    {
      "id": "616ec43e4d5eab8bac2f07fe",
      "name": "Git",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 589823,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/616ec43e4d5eab8bac2f07fe"
    },
    {
      "id": "618014323cc9536e55c348eb",
      "name": "CORS",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 655359,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/618014323cc9536e55c348eb"
    },
    {
      "id": "619b6a4dee8487412f26ab83",
      "name": "Makefile",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 720895,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/619b6a4dee8487412f26ab83"
    },
    {
      "id": "61dd5fd7bacfba716d84e024",
      "name": "Jest",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 786431,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61dd5fd7bacfba716d84e024"
    },
    {
      "id": "61f00805bc5d66175df5ae79",
      "name": "Python",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 851967,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61f00805bc5d66175df5ae79"
    },
    {
      "id": "61f3adec575c9c33c9c86e73",
      "name": "Django",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 868351,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61f3adec575c9c33c9c86e73"
    },
    {
      "id": "6202814e1674783d80fefeca",
      "name": "Zappa",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 884735,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/6202814e1674783d80fefeca"
    },
    {
      "id": "61f3af27997ed6344c23da9a",
      "name": "Postgres Database",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 983039,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61f3af27997ed6344c23da9a"
    },
    {
      "id": "61f40215fcb06742bdbdab94",
      "name": "Work Setup",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1048575,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61f40215fcb06742bdbdab94"
    },
    {
      "id": "61f934a2cb019a8417dccc3d",
      "name": "Microsoft Excel Spread Sheets",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1114111,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61f934a2cb019a8417dccc3d"
    },
    {
      "id": "61fa4a511fac4f4cbaf83b8c",
      "name": "Google Spread Sheet",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1179647,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/61fa4a511fac4f4cbaf83b8c"
    },
    {
      "id": "6267d9ffc041996663dbd2f4",
      "name": "Deleting an app",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1245183,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/6267d9ffc041996663dbd2f4"
    },
    {
      "id": "6331a5ddff4a2f030a90f568",
      "name": "Ungrouped Errors",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1310719,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/6331a5ddff4a2f030a90f568"
    },
    {
      "id": "6423e4b0badd3cd8072134aa",
      "name": "Computer Setup",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1376255,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/6423e4b0badd3cd8072134aa"
    },
    {
      "id": "64254384968afc032fcf7ead",
      "name": "React",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1441791,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/64254384968afc032fcf7ead"
    },
    {
      "id": "642c26f935ce7dae8e5b14a0",
      "name": "Cookies",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1507327,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/642c26f935ce7dae8e5b14a0"
    },
    {
      "id": "642d290e6ec6d0a80a6b0260",
      "name": "Linux",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1572863,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/642d290e6ec6d0a80a6b0260"
    },
    {
      "id": "646f73f9459c575bb133fc61",
      "name": "Postman",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1638399,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/646f73f9459c575bb133fc61"
    },
    {
      "id": "65128ec0aae7eb3b6d96ed9e",
      "name": "LangChain",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1703935,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/65128ec0aae7eb3b6d96ed9e"
    },
    {
      "id": "65142cfbaed2c8824153a2aa",
      "name": "Github",
      "closed": false,
      "color": null,
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "pos": 1769471,
      "subscribed": false,
      "softLimit": null,
      "type": null,
      "datasource": {
        "filter": false
      },
      "creationMethod": null,
      "idOrganization": "60b9ffda1c42218c5ec7c095",
      "limits": {
        "cards": {
          "openPerList": {
            "status": "ok",
            "disableAt": 5000,
            "warnAt": 4000
          },
          "totalPerList": {
            "status": "ok",
            "disableAt": 1000000,
            "warnAt": 800000
          }
        }
      },
      "nodeId": "ari:cloud:trello::list/workspace/60b9ffda1c42218c5ec7c095/65142cfbaed2c8824153a2aa"
    }
  ],
  "members": [
    {
      "id": "607d3a850d54e983ddb49f9b",
      "aaId": "70121:0443dcc4-4408-4056-b053-1c2f6fa16264",
      "activityBlocked": false,
      "avatarHash": "601854f11e1834459aa4d49df745cc27",
      "avatarUrl": "https://trello-members.s3.amazonaws.com/607d3a850d54e983ddb49f9b/601854f11e1834459aa4d49df745cc27",
      "bio": "",
      "bioData": null,
      "confirmed": true,
      "fullName": "Courtney Osborn",
      "idEnterprise": "59c3e0bf44d2350f01193cd2",
      "idEnterprisesDeactivated": [
        "59c3e0bf44d2350f01193cd2"
      ],
      "idMemberReferrer": null,
      "idPremOrgsAdmin": [],
      "initials": "CO",
      "memberType": "normal",
      "nonPublic": {
        "fullName": "Osborn, Courtney",
        "initials": "OC",
        "avatarHash": null
      },
      "nonPublicAvailable": true,
      "products": [],
      "url": "https://trello.com/courtneyosborn7",
      "username": "courtneyosborn7",
      "status": "disconnected"
    }
  ],
  "checklists": [
    {
      "id": "6113fda389647332619b15ce",
      "name": "Checklist",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idCard": "610a69f914ba505962aa80cd",
      "pos": 16384,
      "limits": {
        "checkItems": {
          "perChecklist": {
            "status": "ok",
            "disableAt": 200,
            "warnAt": 160
          }
        }
      },
      "checkItems": [
        {
          "id": "6113fdaa95bd732a0a67b132",
          "name": "All setup done",
          "nameData": null,
          "pos": 16849,
          "state": "complete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6113fda389647332619b15ce"
        }
      ],
      "creationMethod": null
    },
    {
      "id": "6113b96a5747318394cd5eec",
      "name": "Checklist",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idCard": "610a6cca40f71c2524c2ee39",
      "pos": 16384,
      "limits": {
        "checkItems": {
          "perChecklist": {
            "status": "ok",
            "disableAt": 200,
            "warnAt": 160
          }
        }
      },
      "checkItems": [
        {
          "id": "6113b9818320115964642ae9",
          "name": "Added IOT policy",
          "nameData": null,
          "pos": 16684,
          "state": "complete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6113b96a5747318394cd5eec"
        }
      ],
      "creationMethod": null
    },
    {
      "id": "6113b98b54887114425f6379",
      "name": "Checklist",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idCard": "610a6cdcae7bc98ffee9e2ac",
      "pos": 16384,
      "limits": {
        "checkItems": {
          "perChecklist": {
            "status": "ok",
            "disableAt": 200,
            "warnAt": 160
          }
        }
      },
      "checkItems": [
        {
          "id": "6113b990e476533ea4ff5c5e",
          "name": "Created a thing",
          "nameData": null,
          "pos": 16589,
          "state": "complete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6113b98b54887114425f6379"
        },
        {
          "id": "6113b9a14db2312a98204b40",
          "name": "Stored the certificate",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 33127,
          "state": "complete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6113b98b54887114425f6379"
        },
        {
          "id": "6113b9ad5be15c60d5396226",
          "name": "Stored the keys",
          "nameData": null,
          "pos": 50490,
          "state": "complete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6113b98b54887114425f6379"
        }
      ],
      "creationMethod": null
    },
    {
      "id": "6113b9b7c02efa3ccc88bb58",
      "name": "Checklist",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idCard": "610a6ce75be9823e0a4a2ac7",
      "pos": 16384,
      "limits": {
        "checkItems": {
          "perChecklist": {
            "status": "ok",
            "disableAt": 200,
            "warnAt": 160
          }
        }
      },
      "checkItems": [
        {
          "id": "6113b9ca6ff119607fdf44cf",
          "name": "Added iot endpoint to .env folder",
          "nameData": null,
          "pos": 16776,
          "state": "complete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6113b9b7c02efa3ccc88bb58"
        },
        {
          "id": "6113ba037738e01e3b8b48a1",
          "name": "Creds folder contains certificate, public and private keys",
          "nameData": null,
          "pos": 33273,
          "state": "complete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6113b9b7c02efa3ccc88bb58"
        }
      ],
      "creationMethod": null
    },
    {
      "id": "6113fd8bfb1c7b144d352f81",
      "name": "Checklist",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idCard": "610a9722d00cfb7d91def415",
      "pos": 16384,
      "limits": {
        "checkItems": {
          "perChecklist": {
            "status": "ok",
            "disableAt": 200,
            "warnAt": 160
          }
        }
      },
      "checkItems": [
        {
          "id": "6113fd948c6c6f7585dede47",
          "name": "See message in mqtt",
          "nameData": null,
          "pos": 16754,
          "state": "complete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6113fd8bfb1c7b144d352f81"
        }
      ],
      "creationMethod": null
    },
    {
      "id": "6113fd7cc66ef9298fedef0e",
      "name": "Checklist",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idCard": "610b9baf7c9e6e6ce49f58ae",
      "pos": 16384,
      "limits": {
        "checkItems": {
          "perChecklist": {
            "status": "ok",
            "disableAt": 200,
            "warnAt": 160
          }
        }
      },
      "checkItems": [
        {
          "id": "6113fd8315784d1ecab9e475",
          "name": "Rule created",
          "nameData": null,
          "pos": 17179,
          "state": "complete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6113fd7cc66ef9298fedef0e"
        }
      ],
      "creationMethod": null
    },
    {
      "id": "6111103e4c7b065bf55d9344",
      "name": "Checklist",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idCard": "61110fdeea2e9b10e003c6ac",
      "pos": 16384,
      "limits": {
        "checkItems": {
          "perChecklist": {
            "status": "ok",
            "disableAt": 200,
            "warnAt": 160
          }
        }
      },
      "checkItems": [
        {
          "id": "611110455e7686471bf33842",
          "name": "Create a connect lambda",
          "nameData": null,
          "pos": 16593,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111103e4c7b065bf55d9344"
        },
        {
          "id": "61111051dd97842e38c657c2",
          "name": "Create a disconnect lambda",
          "nameData": null,
          "pos": 33559,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111103e4c7b065bf55d9344"
        },
        {
          "id": "611116108305d2670f6e7aa5",
          "name": "Create custom functionality lambda (default lambda)",
          "nameData": null,
          "pos": 50807,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111103e4c7b065bf55d9344"
        },
        {
          "id": "6111162b3d984168ad84d362",
          "name": "Create Web socket API in api gateway",
          "nameData": null,
          "pos": 67470,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111103e4c7b065bf55d9344"
        },
        {
          "id": "6111164120a51946df55fb9b",
          "name": "Add response to web socket",
          "nameData": null,
          "pos": 84025,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111103e4c7b065bf55d9344"
        },
        {
          "id": "611116500e6c468a39025234",
          "name": "Download wscat",
          "nameData": null,
          "pos": 100561,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111103e4c7b065bf55d9344"
        },
        {
          "id": "611116570cbe477f23e947ea",
          "name": "Start Web Socket",
          "nameData": null,
          "pos": 117944,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111103e4c7b065bf55d9344"
        },
        {
          "id": "61111666398c9921d2e5bf33",
          "name": "Add start web socket instruction to the read me",
          "nameData": null,
          "pos": 135162,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111103e4c7b065bf55d9344"
        }
      ],
      "creationMethod": null
    },
    {
      "id": "6111183b75a0721d2c5ebd1b",
      "name": "Checklist",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idCard": "611116ef7aee5b63a6847391",
      "pos": 16384,
      "limits": {
        "checkItems": {
          "perChecklist": {
            "status": "ok",
            "disableAt": 200,
            "warnAt": 160
          }
        }
      },
      "checkItems": [
        {
          "id": "611118428b0d186ad92dcf8a",
          "name": "Enabled streaming",
          "nameData": null,
          "pos": 17376,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111183b75a0721d2c5ebd1b"
        },
        {
          "id": "611118479bb50c0519b3d12c",
          "name": "Enables trigger",
          "nameData": null,
          "pos": 34768,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "6111183b75a0721d2c5ebd1b"
        }
      ],
      "creationMethod": null
    },
    {
      "id": "61f8f2a2fbfc8a41b52ade2d",
      "name": "Order of setup",
      "idBoard": "610a69cff0f4748a2e5fddcc",
      "idCard": "61f8f29285244d89760ef576",
      "pos": 16384,
      "limits": {
        "checkItems": {
          "perChecklist": {
            "status": "ok",
            "disableAt": 200,
            "warnAt": 160
          }
        }
      },
      "checkItems": [
        {
          "id": "61f8f2aed82e4d36898256ad",
          "name": "Add django project (use main as project name)",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 17349,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f2e2a87ca315f6f35f4d",
          "name": "Update main folder name (update it to django-app or another name)",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 34596,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f378d9eb804df53a4dd9",
          "name": "Add DATABASE-LOCAL-SETUP.md",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 51809,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f387c4eb352f4a91105e",
          "name": "Add POSTGRESQL-COMMANDS.md",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 68470,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f38d2266976397d711ec",
          "name": "Add .env file",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 45354.125,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f39dfe3a241ee2dac976",
          "name": "Add .example.env file (in main folder)",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 46429.9375,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f3ab1843341d45bd3235",
          "name": "Add environment and database setup in settings",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 46967.84375,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f3b09568830e582a6bf4",
          "name": "Add Readme",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 135645,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f3c3ef50a40c888c92a6",
          "name": "Add base abstract model",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 43202.5,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f3f973d9f2848904e245",
          "name": "Add .gitignore to include .env and **/__pycache__/**",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 44278.3125,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f40a5912cd785103024a",
          "name": "Add Makefile",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 47505.75,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f43922c93685fe9b2479",
          "name": "Migrate database",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 152382,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f4460405cd34c3450e1b",
          "name": "Create super user",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 169480,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        },
        {
          "id": "61f8f4544af9ea536e6ad8d0",
          "name": "Run server - make sure admin panel works",
          "nameData": {
            "emoji": {

            }
          },
          "pos": 186001,
          "state": "incomplete",
          "due": null,
          "dueReminder": null,
          "idMember": null,
          "idChecklist": "61f8f2a2fbfc8a41b52ade2d"
        }
      ],
      "creationMethod": null
    }
  ],
  "customFields": [],
  "memberships": [
    {
      "id": "610a69cff0f4748a2e5fddcd",
      "idMember": "607d3a850d54e983ddb49f9b",
      "memberType": "admin",
      "unconfirmed": false,
      "deactivated": false
    }
  ],
  "pluginData": []
}
